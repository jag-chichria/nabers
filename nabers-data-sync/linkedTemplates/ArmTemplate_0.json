{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nabers-data-sync"
		},
		"NABERSStaging_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'NABERSStaging'"
		},
		"NabersOnline_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'NabersOnline'"
		},
		"NabersOnline_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'NabersOnline'"
		},
		"NabersOnline_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://nabers--datamigdev.my.salesforce.com"
		},
		"NabersOnline_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "jag.chichria@nabers.gov.au.datamigdev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/NABERSStaging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('NABERSStaging_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Australia East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_company')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ABN",
						"type": "varchar"
					},
					{
						"name": "CompanyName",
						"type": "varchar"
					},
					{
						"name": "CompanyID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompanyStatusID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompanyTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompanyURL",
						"type": "varchar"
					},
					{
						"name": "MailingAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Phone",
						"type": "varchar"
					},
					{
						"name": "PIInsuranceExpiryDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PLInsuranceExpiryDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RatingParticipationFlag",
						"type": "bit"
					},
					{
						"name": "SAPCustomerNo",
						"type": "varchar"
					},
					{
						"name": "ShortName",
						"type": "varchar"
					},
					{
						"name": "SoleTraderFlag",
						"type": "bit"
					},
					{
						"name": "Mailing_StreetNumber",
						"type": "varchar"
					},
					{
						"name": "Mailing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Mailing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Mailing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Mailing_State",
						"type": "varchar"
					},
					{
						"name": "Billing_StreetNumber",
						"type": "varchar"
					},
					{
						"name": "Billing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Billing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Billing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Billing_State",
						"type": "varchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Batch_Id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CompanyStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_lookup_assessors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Assessor_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "User_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "varchar"
					},
					{
						"name": "Mailing_StreetNumber",
						"type": "varchar"
					},
					{
						"name": "Mailing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Mailing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Mailing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Mailing_State",
						"type": "varchar"
					},
					{
						"name": "Billing_StreetNumber",
						"type": "varchar"
					},
					{
						"name": "Billing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Billing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Billing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Billing_State",
						"type": "varchar"
					},
					{
						"name": "Phone",
						"type": "varchar"
					},
					{
						"name": "Email",
						"type": "varchar"
					},
					{
						"name": "JoinedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AccreditationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AccreditationExpiryDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AccreditationNumber",
						"type": "varchar"
					},
					{
						"name": "EnergyFlag",
						"type": "bit"
					},
					{
						"name": "WaterFlag",
						"type": "bit"
					},
					{
						"name": "WasteFlag",
						"type": "bit"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AssessorsStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_lookup_sf_assessors_ids')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salesforce_assessor_Id",
						"type": "varchar"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "member_assessor_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salesforce_company_id",
						"type": "varchar"
					},
					{
						"name": "member_company_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Lookup_SalesforceAssessors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_lookup_sf_buildings_ids')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salesforce_building_Id",
						"type": "varchar"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "member_premise_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Lookup_SalesforceBuildings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_lookup_sf_company_ids')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salesforce_company_Id",
						"type": "varchar"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "member_company_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Mailing_Country",
						"type": "varchar"
					},
					{
						"name": "Billing_Country",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Lookup_SalesforceCompany"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_lookup_sf_officer_ids')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salesforce_user_Id",
						"type": "varchar"
					},
					{
						"name": "member_officer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Lookup_SalesforceUsers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_members_rating')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingReferenceNumber",
						"type": "varchar"
					},
					{
						"name": "PremiseTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PremiseType",
						"type": "varchar"
					},
					{
						"name": "PremiseID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PremiseName",
						"type": "varchar"
					},
					{
						"name": "AssessorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AssessorEmail",
						"type": "varchar"
					},
					{
						"name": "Customer_Name",
						"type": "varchar"
					},
					{
						"name": "Customer_TradingName",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_StreeNumber",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_State",
						"type": "varchar"
					},
					{
						"name": "RatingPeriodFrom",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RatingPeriodTo",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PublicListingFlag",
						"type": "bit"
					},
					{
						"name": "OfficerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingStatusID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingStatus",
						"type": "varchar"
					},
					{
						"name": "LodgedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PaymentStatusID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PaymentStatus",
						"type": "varchar"
					},
					{
						"name": "PaidDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CertificateValidFrom",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CertificateValidTo",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PremiseNameOnCert",
						"type": "varchar"
					},
					{
						"name": "CustomerNameOnCert",
						"type": "varchar"
					},
					{
						"name": "Certificate_Customer_Email",
						"type": "varchar"
					},
					{
						"name": "ReplaceFlag",
						"type": "bit"
					},
					{
						"name": "RenewFlag",
						"type": "bit"
					},
					{
						"name": "PreviousRatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NewRatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StreetNumber",
						"type": "varchar"
					},
					{
						"name": "StreetName",
						"type": "varchar"
					},
					{
						"name": "Suburb",
						"type": "varchar"
					},
					{
						"name": "Postcode",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingTypes",
						"type": "varchar"
					},
					{
						"name": "RatingMainPurpose",
						"type": "varchar"
					},
					{
						"name": "HasCinema",
						"type": "bit"
					},
					{
						"name": "LastActionDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RatingHeaderStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_transformed_ratings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "source_rating_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "building_type",
						"type": "varchar"
					},
					{
						"name": "sf_company_id",
						"type": "varchar"
					},
					{
						"name": "sf_building_id",
						"type": "varchar"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sf_rating_id",
						"type": "varchar"
					},
					{
						"name": "sf_assessor_id",
						"type": "varchar"
					},
					{
						"name": "assessor_email",
						"type": "varchar"
					},
					{
						"name": "customer_email",
						"type": "varchar"
					},
					{
						"name": "cert_building_name",
						"type": "varchar"
					},
					{
						"name": "cert_customer_name",
						"type": "varchar"
					},
					{
						"name": "rating_type",
						"type": "varchar"
					},
					{
						"name": "rating_main_purpose",
						"type": "varchar"
					},
					{
						"name": "has_cinema",
						"type": "bit"
					},
					{
						"name": "period_from",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "period_to",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "cert_valid_from",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "cert_valid_to",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rating_ref_number",
						"type": "varchar"
					},
					{
						"name": "lodged_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rating_scope",
						"type": "varchar"
					},
					{
						"name": "publicly_listed",
						"type": "bit"
					},
					{
						"name": "sf_officer_id",
						"type": "varchar"
					},
					{
						"name": "last_update_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "renew_replace",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transformed_Ratings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NabersOnline')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to NABERS Online",
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('NabersOnline_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('NabersOnline_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('NabersOnline_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('NabersOnline_securityToken')]"
					},
					"apiVersion": "48.0"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_Buildings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Building__c"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_Ratings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Rating__c"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_buiding_rating')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Building_Rating_Relationship__c"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_company')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "Account"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_contacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "Contact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "User"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_Transform_Company_Assessor')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "db_lookup_sf_company_ids",
								"type": "DatasetReference"
							},
							"name": "getCompany"
						},
						{
							"dataset": {
								"referenceName": "db_lookup_sf_assessors_ids",
								"type": "DatasetReference"
							},
							"name": "getAssessor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "db_lookup_sf_assessors_ids",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tid as integer,\n\t\tsalesforce_company_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_company_id as integer,\n\t\tMailing_Country as string,\n\t\tBilling_Country as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getCompany\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_assessor_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_assessor_id as integer,\n\t\tsalesforce_company_id as string,\n\t\tmember_company_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getAssessor\ngetAssessor, getCompany join(getAssessor@member_company_id == getCompany@member_company_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 alterRow(updateIf(isNull(getAssessor@salesforce_company_id))) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tid as integer,\n\t\tsalesforce_assessor_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_assessor_id as integer,\n\t\tsalesforce_company_id as string,\n\t\tmember_company_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['id'],\n\tformat: 'table',\n\tmapColumn(\n\t\tsalesforce_company_id = getCompany@salesforce_company_Id,\n\t\tid = getAssessor@id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_lookup_sf_company_ids')]",
				"[concat(variables('factoryId'), '/datasets/db_lookup_sf_assessors_ids')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_Transform_Country_In_Company')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "db_lookup_sf_company_ids",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "db_lookup_sf_company_ids",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AlterRow2"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "parameters{\n\tpbatch_id as integer (1)\n}\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_company_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_company_id as integer,\n\t\tMailing_Country as string,\n\t\tBilling_Country as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 alterRow(updateIf(isNull(Mailing_Country)||isNull(Billing_Country))) ~> AlterRow2\nAlterRow2 derive(DefaultMailingCountry = \"Australia\",\n\t\tDefaultBillingCountry = \"Australia\",\n\t\tid = id) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tid as integer,\n\t\tsalesforce_company_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_company_id as integer,\n\t\tMailing_Country as string,\n\t\tBilling_Country as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['id'],\n\tformat: 'table',\n\tmapColumn(\n\t\tMailing_Country = DefaultMailingCountry,\n\t\tBilling_Country = DefaultBillingCountry,\n\t\tid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_lookup_sf_company_ids')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_Transform_Rating')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							},
							"name": "getRatings"
						},
						{
							"dataset": {
								"referenceName": "db_lookup_sf_buildings_ids",
								"type": "DatasetReference"
							},
							"name": "getLookupSalesforceBuildings"
						},
						{
							"dataset": {
								"referenceName": "db_lookup_sf_assessors_ids",
								"type": "DatasetReference"
							},
							"name": "getLookupSalesforceAssessors"
						},
						{
							"dataset": {
								"referenceName": "db_lookup_sf_officer_ids",
								"type": "DatasetReference"
							},
							"name": "getLookupSalesforceTechOfficer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "db_transformed_ratings",
								"type": "DatasetReference"
							},
							"name": "dumpToSFTransofrmedRatings"
						}
					],
					"transformations": [
						{
							"name": "filterBatchRatings"
						},
						{
							"name": "joinLookupSalesforceBuilding"
						},
						{
							"name": "filterSFBuildingByBatch"
						},
						{
							"name": "joinLookupSalesforceAssessors"
						},
						{
							"name": "filterSFAssessorsByBatch"
						},
						{
							"name": "derivedFields"
						},
						{
							"name": "filterSFOfficerByBatch"
						},
						{
							"name": "joinLookupSalesforceUsers"
						}
					],
					"script": "parameters{\n\tpbatch_id as integer (1)\n}\nsource(output(\n\t\tRatingHeaderID as integer,\n\t\tRatingReferenceNumber as string,\n\t\tPremiseTypeID as integer,\n\t\tPremiseType as string,\n\t\tPremiseID as integer,\n\t\tPremiseName as string,\n\t\tAssessorID as integer,\n\t\tAssessorEmail as string,\n\t\tCustomer_Name as string,\n\t\tCustomer_TradingName as string,\n\t\tCustomer_Mailing_StreeNumber as string,\n\t\tCustomer_Mailing_StreetName as string,\n\t\tCustomer_Mailing_Suburb as string,\n\t\tCustomer_Mailing_Postcode as string,\n\t\tCustomer_Mailing_State as string,\n\t\tRatingPeriodFrom as timestamp,\n\t\tRatingPeriodTo as timestamp,\n\t\tPublicListingFlag as boolean,\n\t\tOfficerID as integer,\n\t\tRatingStatusID as integer,\n\t\tRatingStatus as string,\n\t\tLodgedDate as timestamp,\n\t\tPaymentStatusID as integer,\n\t\tPaymentStatus as string,\n\t\tPaidDate as timestamp,\n\t\tCertificateValidFrom as timestamp,\n\t\tCertificateValidTo as timestamp,\n\t\tPremiseNameOnCert as string,\n\t\tCustomerNameOnCert as string,\n\t\tCertificate_Customer_Email as string,\n\t\tReplaceFlag as boolean,\n\t\tRenewFlag as boolean,\n\t\tPreviousRatingHeaderID as integer,\n\t\tNewRatingHeaderID as integer,\n\t\tStreetNumber as string,\n\t\tStreetName as string,\n\t\tSuburb as string,\n\t\tPostcode as string,\n\t\tState as string,\n\t\tbatch_id as integer,\n\t\tRatingTypes as string,\n\t\tRatingMainPurpose as string,\n\t\tHasCinema as boolean,\n\t\tLastActionDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_COMMITTED',\n\tformat: 'table') ~> getRatings\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_building_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_premise_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookupSalesforceBuildings\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_assessor_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_assessor_id as integer,\n\t\tsalesforce_company_id as string,\n\t\tmember_company_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookupSalesforceAssessors\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_user_Id as string,\n\t\tmember_officer_id as integer,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookupSalesforceTechOfficer\ngetRatings filter(equals(batch_id, $pbatch_id)) ~> filterBatchRatings\njoinLookupSalesforceAssessors, filterSFBuildingByBatch join(PremiseID == member_premise_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinLookupSalesforceBuilding\ngetLookupSalesforceBuildings filter(equals(batch_id,  $pbatch_id)) ~> filterSFBuildingByBatch\nderivedFields, filterSFAssessorsByBatch join(AssessorID == member_assessor_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinLookupSalesforceAssessors\ngetLookupSalesforceAssessors filter(equals(batch_id,  $pbatch_id)) ~> filterSFAssessorsByBatch\nfilterBatchRatings derive(D_Rating_Scope = iif(equalsIgnoreCase(PremiseType, 'shopping centre'), 'Not applicable', ''),\n\t\tD_Main_Purpose_Of_Rating = iif(equalsIgnoreCase(PremiseName, 'shopping centre'), 'None of the above (NABERS voluntary rating)', ''),\n\t\tD_Renew_Replace = iif(!isNull(RenewFlag) || !isNull(ReplaceFlag), \r\niif(RenewFlag, 'Renew', iif(ReplaceFlag, 'Replace', '')),'')) ~> derivedFields\ngetLookupSalesforceTechOfficer filter(equals(batch_id, $pbatch_id)) ~> filterSFOfficerByBatch\njoinLookupSalesforceBuilding, filterSFOfficerByBatch join(OfficerID == member_officer_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinLookupSalesforceUsers\njoinLookupSalesforceUsers sink(input(\n\t\tid as integer,\n\t\tsource_rating_id as integer,\n\t\tbuilding_type as string,\n\t\tsf_company_id as string,\n\t\tsf_building_id as string,\n\t\tbatch_id as integer,\n\t\tsf_rating_id as string,\n\t\tsf_assessor_id as string,\n\t\tassessor_email as string,\n\t\tcustomer_email as string,\n\t\tcert_building_name as string,\n\t\tcert_customer_name as string,\n\t\trating_type as string,\n\t\trating_main_purpose as string,\n\t\thas_cinema as boolean,\n\t\tperiod_from as timestamp,\n\t\tperiod_to as timestamp,\n\t\tstatus as string,\n\t\tcert_valid_from as timestamp,\n\t\tcert_valid_to as timestamp,\n\t\trating_ref_number as string,\n\t\tlodged_date as timestamp,\n\t\trating_scope as string,\n\t\tpublicly_listed as boolean,\n\t\tsf_officer_id as string,\n\t\tlast_update_date as timestamp,\n\t\trenew_replace as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tsource_rating_id = RatingHeaderID,\n\t\tbuilding_type = PremiseType,\n\t\tsf_building_id = salesforce_building_Id,\n\t\tbatch_id = getRatings@batch_id,\n\t\tsf_assessor_id = salesforce_assessor_Id,\n\t\tassessor_email = AssessorEmail,\n\t\tcustomer_email = Certificate_Customer_Email,\n\t\tcert_building_name = PremiseNameOnCert,\n\t\tcert_customer_name = CustomerNameOnCert,\n\t\tstatus = RatingStatus,\n\t\tperiod_from = RatingPeriodFrom,\n\t\tperiod_to = RatingPeriodTo,\n\t\tcert_valid_from = CertificateValidFrom,\n\t\tcert_valid_to = CertificateValidTo,\n\t\thas_cinema = HasCinema,\n\t\trating_type = RatingTypes,\n\t\trating_main_purpose = D_Main_Purpose_Of_Rating,\n\t\trating_ref_number = RatingReferenceNumber,\n\t\tlodged_date = LodgedDate,\n\t\trating_scope = D_Rating_Scope,\n\t\tpublicly_listed = PublicListingFlag,\n\t\tsf_officer_id = salesforce_user_Id,\n\t\tsf_company_id = salesforce_company_id,\n\t\tlast_update_date = LastActionDate,\n\t\trenew_replace = D_Renew_Replace\n\t),\n\tskipDuplicateMapOutputs: true) ~> dumpToSFTransofrmedRatings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_members_rating')]",
				"[concat(variables('factoryId'), '/datasets/db_lookup_sf_buildings_ids')]",
				"[concat(variables('factoryId'), '/datasets/db_lookup_sf_assessors_ids')]",
				"[concat(variables('factoryId'), '/datasets/db_lookup_sf_officer_ids')]",
				"[concat(variables('factoryId'), '/datasets/db_transformed_ratings')]"
			]
		}
	]
}