{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nabers-data-sync"
		},
		"NABERSStaging_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'NABERSStaging'"
		},
		"NabersOnline_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'NabersOnline'"
		},
		"NabersOnline_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'NabersOnline'"
		},
		"NabersOnline_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://nabers--datamigdev.my.salesforce.com"
		},
		"NabersOnline_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "jag.chichria@nabers.gov.au.datamigdev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/NABERSStaging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('NABERSStaging_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Australia East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cn_db_rating_stage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingReferenceNumber",
						"type": "varchar"
					},
					{
						"name": "PremiseTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PremiseType",
						"type": "varchar"
					},
					{
						"name": "PremiseID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PremiseName",
						"type": "varchar"
					},
					{
						"name": "AssessorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AssessorEmail",
						"type": "varchar"
					},
					{
						"name": "Customer_Name",
						"type": "varchar"
					},
					{
						"name": "Customer_TradingName",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_StreeNumber",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_State",
						"type": "varchar"
					},
					{
						"name": "RatingPeriodFrom",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RatingPeriodTo",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PublicListingFlag",
						"type": "bit"
					},
					{
						"name": "OfficerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingStatusID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingStatus",
						"type": "varchar"
					},
					{
						"name": "LodgedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PaymentStatusID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PaymentStatus",
						"type": "varchar"
					},
					{
						"name": "PaidDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CertificateValidFrom",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CertificateValidTo",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PremiseNameOnCert",
						"type": "varchar"
					},
					{
						"name": "CustomerNameOnCert",
						"type": "varchar"
					},
					{
						"name": "Certificate_Customer_Email",
						"type": "varchar"
					},
					{
						"name": "LastActionDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ReplaceFlag",
						"type": "bit"
					},
					{
						"name": "RenewFlag",
						"type": "bit"
					},
					{
						"name": "PreviousRatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NewRatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StreetNumber",
						"type": "varchar"
					},
					{
						"name": "StreetName",
						"type": "varchar"
					},
					{
						"name": "Suburb",
						"type": "varchar"
					},
					{
						"name": "Postcode",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "RatingTypes",
						"type": "nvarchar"
					},
					{
						"name": "CinemaTheatres",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ShoppingCentreWaterSummaryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FloorConfiguration",
						"type": "varchar"
					},
					{
						"name": "ParkingSpacesMechanical",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ParkingSpacesNatural",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "TotalGymGLAR",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "FoodCourtSeats",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "conflictOfInterestFlag",
						"type": "bit"
					},
					{
						"name": "InComplianceWithCurrentRules",
						"type": "bit"
					},
					{
						"name": "WaterStarRatingWRecycle",
						"type": "varchar"
					},
					{
						"name": "WaterStarRatingWoRecycle",
						"type": "varchar"
					},
					{
						"name": "EnergyStarRatingWRecycle",
						"type": "varchar"
					},
					{
						"name": "EnergyStarRatingWoRecycle",
						"type": "varchar"
					},
					{
						"name": "totalEnergyConsumption",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "WeeklyCoreHoursOfService",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "TotalElectricityConsumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "TotalDieselConsumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "WaterConsumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "RecycleNormalisedWaterConsumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "TotalWaterConsumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "TotalRecycledWaterPercent",
						"type": "decimal",
						"precision": 6,
						"scale": 2
					},
					{
						"name": "TotalGasConsumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "RatingLodgementFees",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "PredictedGreenhouseGasIntensity",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "PredictedAverageWaterUse",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "NumberOfTradingDays",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "NoRecyclePredictedAverageWaterUse",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "NoGreenPower_GHG_IntensityScope_12",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "NoGreenPowerGHGIntensityScope123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "NoGreenPowerGHGEmissionsScope12",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "NoGreenPowerGHGEmissionsScope123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "GreenhouseGasIntensityScope123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "GreenhouseGasEmissionsScope123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "EnergyIntensity",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "ExplainWhyNotCompliant",
						"type": "varchar"
					},
					{
						"name": "IsSmallShoppingCentre",
						"type": "bit"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RatingHeaderStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_company')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ABN",
						"type": "varchar"
					},
					{
						"name": "CompanyName",
						"type": "varchar"
					},
					{
						"name": "CompanyID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompanyStatusID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompanyTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompanyURL",
						"type": "varchar"
					},
					{
						"name": "MailingAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Phone",
						"type": "varchar"
					},
					{
						"name": "PIInsuranceExpiryDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PLInsuranceExpiryDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RatingParticipationFlag",
						"type": "bit"
					},
					{
						"name": "SAPCustomerNo",
						"type": "varchar"
					},
					{
						"name": "ShortName",
						"type": "varchar"
					},
					{
						"name": "SoleTraderFlag",
						"type": "bit"
					},
					{
						"name": "Mailing_StreetNumber",
						"type": "varchar"
					},
					{
						"name": "Mailing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Mailing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Mailing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Mailing_State",
						"type": "varchar"
					},
					{
						"name": "Billing_StreetNumber",
						"type": "varchar"
					},
					{
						"name": "Billing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Billing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Billing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Billing_State",
						"type": "varchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Batch_Id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CompanyStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_lookup_sf_assessors_ids')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salesforce_assessor_Id",
						"type": "varchar"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "member_assessor_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salesforce_company_id",
						"type": "varchar"
					},
					{
						"name": "member_company_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sync_status",
						"type": "varchar"
					},
					{
						"name": "mailing_country",
						"type": "varchar"
					},
					{
						"name": "billing_country",
						"type": "varchar"
					},
					{
						"name": "accredition",
						"type": "varchar"
					},
					{
						"name": "rating_type",
						"type": "varchar"
					},
					{
						"name": "regional_cleaned",
						"type": "varchar"
					},
					{
						"name": "salesforce_contact_type",
						"type": "varchar"
					},
					{
						"name": "salesforce_portal_access",
						"type": "varchar"
					},
					{
						"name": "salesforce_user_active",
						"type": "varchar"
					},
					{
						"name": "metropolitan_cleaned",
						"type": "varchar"
					},
					{
						"name": "salesforce_user_id",
						"type": "varchar"
					},
					{
						"name": "phone_cleaned",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Lookup_SalesforceAssessors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_lookup_sf_buildings_ids')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salesforce_building_Id",
						"type": "varchar"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "member_premise_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Lookup_SalesforceBuildings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_lookup_sf_company_ids')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salesforce_company_Id",
						"type": "varchar"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "member_company_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Mailing_Country",
						"type": "varchar"
					},
					{
						"name": "Billing_Country",
						"type": "varchar"
					},
					{
						"name": "sync_status",
						"type": "varchar"
					},
					{
						"name": "account_type",
						"type": "varchar"
					},
					{
						"name": "sf_record_type",
						"type": "varchar"
					},
					{
						"name": "mailing_street",
						"type": "varchar"
					},
					{
						"name": "billing_street",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Lookup_SalesforceCompany"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_lookup_sf_officer_ids')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salesforce_user_Id",
						"type": "varchar"
					},
					{
						"name": "member_officer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "created_on",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Lookup_SalesforceTechOfficers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_members_rating')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingReferenceNumber",
						"type": "varchar"
					},
					{
						"name": "PremiseTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PremiseType",
						"type": "varchar"
					},
					{
						"name": "PremiseID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PremiseName",
						"type": "varchar"
					},
					{
						"name": "AssessorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AssessorEmail",
						"type": "varchar"
					},
					{
						"name": "Customer_Name",
						"type": "varchar"
					},
					{
						"name": "Customer_TradingName",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_StreetNumber",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Customer_Mailing_State",
						"type": "varchar"
					},
					{
						"name": "Customer_ABN",
						"type": "varchar"
					},
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer_Organisation",
						"type": "varchar"
					},
					{
						"name": "Customer_SAP_Number",
						"type": "varchar"
					},
					{
						"name": "RatingPeriodFrom",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RatingPeriodTo",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PublicListingFlag",
						"type": "bit"
					},
					{
						"name": "OfficerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingStatusID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingStatus",
						"type": "varchar"
					},
					{
						"name": "LodgedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PaymentStatusID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PaymentStatus",
						"type": "varchar"
					},
					{
						"name": "PaidDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CertificateValidFrom",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CertificateValidTo",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PremiseNameOnCert",
						"type": "varchar"
					},
					{
						"name": "CustomerNameOnCert",
						"type": "varchar"
					},
					{
						"name": "Certificate_Customer_Email",
						"type": "varchar"
					},
					{
						"name": "LastActionDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ReplaceFlag",
						"type": "bit"
					},
					{
						"name": "RenewFlag",
						"type": "bit"
					},
					{
						"name": "PreviousRatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NewRatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StreetNumber",
						"type": "varchar"
					},
					{
						"name": "StreetName",
						"type": "varchar"
					},
					{
						"name": "Suburb",
						"type": "varchar"
					},
					{
						"name": "Postcode",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "RatingTypes",
						"type": "nvarchar"
					},
					{
						"name": "CinemaTheatres",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ShoppingCentreWaterSummaryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FloorConfiguration",
						"type": "varchar"
					},
					{
						"name": "ParkingSpacesMechanical",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ParkingSpacesNatural",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "TotalGymGLAR",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "FoodCourtSeats",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "conflictOfInterestFlag",
						"type": "bit"
					},
					{
						"name": "InComplianceWithCurrentRules",
						"type": "bit"
					},
					{
						"name": "WaterStarRatingWRecycle",
						"type": "varchar"
					},
					{
						"name": "WaterStarRatingWoRecycle",
						"type": "varchar"
					},
					{
						"name": "EnergyStarRatingWRecycle",
						"type": "varchar"
					},
					{
						"name": "EnergyStarRatingWoRecycle",
						"type": "varchar"
					},
					{
						"name": "totalEnergyConsumption",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "WeeklyCoreHoursOfService",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "TotalElectricityConsumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "TotalDieselConsumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "WaterConsumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "RecycleNormalisedWaterConsumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "TotalWaterConsumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "TotalRecycledWaterPercent",
						"type": "decimal",
						"precision": 6,
						"scale": 2
					},
					{
						"name": "TotalGasConsumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "RatingLodgementFees",
						"type": "decimal",
						"precision": 12,
						"scale": 2
					},
					{
						"name": "PredictedGreenhouseGasIntensity",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "PredictedAverageWaterUse",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "NumberOfTradingDays",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "NoRecyclePredictedAverageWaterUse",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "NoGreenPower_GHG_IntensityScope_12",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "NoGreenPowerGHGIntensityScope123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "NoGreenPowerGHGEmissionsScope12",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "NoGreenPowerGHGEmissionsScope123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "GreenhouseGasIntensityScope123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "GreenhouseGasEmissionsScope123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "EnergyIntensity",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "ExplainWhyNotCompliant",
						"type": "varchar"
					},
					{
						"name": "IsSmallShoppingCentre",
						"type": "bit"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RatingHeaderStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_stage_assessors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pBatch_Id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "companyid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AssessorId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UserId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "varchar"
					},
					{
						"name": "Mailing_StreetNumber",
						"type": "varchar"
					},
					{
						"name": "Mailing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Mailing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Mailing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Mailing_State",
						"type": "varchar"
					},
					{
						"name": "Billing_StreetNumber",
						"type": "varchar"
					},
					{
						"name": "Billing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Billing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Billing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Billing_State",
						"type": "varchar"
					},
					{
						"name": "Phone",
						"type": "varchar"
					},
					{
						"name": "Mobile",
						"type": "varchar"
					},
					{
						"name": "Email",
						"type": "varchar"
					},
					{
						"name": "JoinedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AccreditationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AccreditationExpiryDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AccreditationNumber",
						"type": "varchar"
					},
					{
						"name": "EnergyFlag",
						"type": "bit"
					},
					{
						"name": "WaterFlag",
						"type": "bit"
					},
					{
						"name": "WasteFlag",
						"type": "bit"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RequireSupervisionSC",
						"type": "bit"
					},
					{
						"name": "Metropolitan",
						"type": "nvarchar"
					},
					{
						"name": "Regional",
						"type": "nvarchar"
					},
					{
						"name": "RetailFlag",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HospitalFlag",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HotelFlag",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OfficeFlag",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ApartmentBuildingFlag",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AssessorsStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_stage_cinemas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatingHeaderID",
						"type": "nvarchar"
					},
					{
						"name": "CinemaID",
						"type": "nvarchar"
					},
					{
						"name": "CinemaDesc",
						"type": "nvarchar"
					},
					{
						"name": "NumberTheatrettes",
						"type": "nvarchar"
					},
					{
						"name": "NumberOutOfSvcGT4Weeks",
						"type": "nvarchar"
					},
					{
						"name": "OutOfServiceWeeks",
						"type": "nvarchar"
					},
					{
						"name": "RatedNumberTheatrettes",
						"type": "nvarchar"
					},
					{
						"name": "batch_id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CinemaStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_stage_food_courts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatingHeaderID",
						"type": "nvarchar"
					},
					{
						"name": "FoodCourtID",
						"type": "nvarchar"
					},
					{
						"name": "FoodCourtDesc",
						"type": "nvarchar"
					},
					{
						"name": "NumberSeats",
						"type": "nvarchar"
					},
					{
						"name": "NumberSeatsOutOfSvcGT4Weeks",
						"type": "nvarchar"
					},
					{
						"name": "OutOfServiceWeeks",
						"type": "nvarchar"
					},
					{
						"name": "RatedNumberSeats",
						"type": "nvarchar"
					},
					{
						"name": "batch_id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FoodCourtStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_stage_gymnasiums')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatingHeaderID",
						"type": "nvarchar"
					},
					{
						"name": "GymID",
						"type": "nvarchar"
					},
					{
						"name": "GymDesc",
						"type": "nvarchar"
					},
					{
						"name": "ConfirmedArea",
						"type": "nvarchar"
					},
					{
						"name": "IsEstimate",
						"type": "nvarchar"
					},
					{
						"name": "IsCentralServicing",
						"type": "nvarchar"
					},
					{
						"name": "OutOfServiceWeeks",
						"type": "nvarchar"
					},
					{
						"name": "RatedGymArea",
						"type": "nvarchar"
					},
					{
						"name": "batch_id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GymnasiumStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_stage_hours_Of_service')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AreaID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenancyName",
						"type": "nvarchar"
					},
					{
						"name": "ListedArea",
						"type": "nvarchar"
					},
					{
						"name": "blocknumber",
						"type": "nvarchar"
					},
					{
						"name": "IsListedAsCentralServiced",
						"type": "bit"
					},
					{
						"name": "IsTenancyServicingCheck",
						"type": "bit"
					},
					{
						"name": "IsAreaConfirmed",
						"type": "bit"
					},
					{
						"name": "IsCentralServicingResult",
						"type": "bit"
					},
					{
						"name": "RatedCSArea",
						"type": "nvarchar"
					},
					{
						"name": "RatedGLAR",
						"type": "nvarchar"
					},
					{
						"name": "WeeksVacant",
						"type": "nvarchar"
					},
					{
						"name": "ExtentedHours",
						"type": "nvarchar"
					},
					{
						"name": "Hours",
						"type": "nvarchar"
					},
					{
						"name": "HoursArea",
						"type": "nvarchar"
					},
					{
						"name": "IsExtendedHoursEnabled",
						"type": "nvarchar"
					},
					{
						"name": "IsHoursEnabled",
						"type": "nvarchar"
					},
					{
						"name": "CoreHours",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HoursOfServiceStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_stage_parking_space')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatingHeaderID",
						"type": "nvarchar"
					},
					{
						"name": "BlockID",
						"type": "nvarchar"
					},
					{
						"name": "BlockDesc",
						"type": "nvarchar"
					},
					{
						"name": "VentilationType",
						"type": "nvarchar"
					},
					{
						"name": "NumberParkingSpaces",
						"type": "nvarchar"
					},
					{
						"name": "NumberOutOfSvcGT4Weeks",
						"type": "nvarchar"
					},
					{
						"name": "OutOfServiceWeeks",
						"type": "nvarchar"
					},
					{
						"name": "SpacesNatural",
						"type": "nvarchar"
					},
					{
						"name": "SpacesMechanical",
						"type": "nvarchar"
					},
					{
						"name": "batch_id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ParkingSpaceStage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_transformed_attribute_type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "attribute_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "attribute_desc",
						"type": "varchar"
					},
					{
						"name": "attribute_type",
						"type": "varchar"
					},
					{
						"name": "member_rating_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "area_centrally_serviced",
						"type": "varchar"
					},
					{
						"name": "tenancy_servicing",
						"type": "varchar"
					},
					{
						"name": "ventilation_type",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transformed_AttributeType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_transformed_ratings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "building_type",
						"type": "varchar"
					},
					{
						"name": "source_rating_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sf_company_id",
						"type": "varchar"
					},
					{
						"name": "sf_building_id",
						"type": "varchar"
					},
					{
						"name": "sf_rating_id",
						"type": "varchar"
					},
					{
						"name": "sf_assessor_id",
						"type": "varchar"
					},
					{
						"name": "sf_customer_id",
						"type": "varchar"
					},
					{
						"name": "assessor_email",
						"type": "varchar"
					},
					{
						"name": "customer_email",
						"type": "varchar"
					},
					{
						"name": "cert_building_name",
						"type": "varchar"
					},
					{
						"name": "cert_customer_name",
						"type": "varchar"
					},
					{
						"name": "rating_type",
						"type": "varchar"
					},
					{
						"name": "rating_main_purpose",
						"type": "varchar"
					},
					{
						"name": "has_cinema",
						"type": "bit"
					},
					{
						"name": "period_from",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "period_to",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "cert_valid_from",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "cert_valid_to",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rating_ref_number",
						"type": "varchar"
					},
					{
						"name": "lodged_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rating_scope",
						"type": "varchar"
					},
					{
						"name": "publicly_listed",
						"type": "bit"
					},
					{
						"name": "sf_officer_id",
						"type": "varchar"
					},
					{
						"name": "last_update_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "renew_replace",
						"type": "varchar"
					},
					{
						"name": "sync_status",
						"type": "varchar"
					},
					{
						"name": "review_summary_page",
						"type": "varchar"
					},
					{
						"name": "using_latest_rules",
						"type": "varchar"
					},
					{
						"name": "rating_information_page",
						"type": "varchar"
					},
					{
						"name": "lodge_rating_page",
						"type": "varchar"
					},
					{
						"name": "rating_details_page",
						"type": "varchar"
					},
					{
						"name": "parking_space_page",
						"type": "varchar"
					},
					{
						"name": "water_page",
						"type": "varchar"
					},
					{
						"name": "has_parking_space",
						"type": "varchar"
					},
					{
						"name": "has_gym",
						"type": "varchar"
					},
					{
						"name": "has_food_court",
						"type": "varchar"
					},
					{
						"name": "conflict_of_interest",
						"type": "varchar"
					},
					{
						"name": "compliant_with_current_rules",
						"type": "varchar"
					},
					{
						"name": "relodged_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rating_data_complete",
						"type": "varchar"
					},
					{
						"name": "assessor_declaration",
						"type": "varchar"
					},
					{
						"name": "customer_aware_of_star_rating",
						"type": "varchar"
					},
					{
						"name": "water_star_rating_with_recycle",
						"type": "varchar"
					},
					{
						"name": "water_star_rating_without_recycle",
						"type": "varchar"
					},
					{
						"name": "energy_star_rating_with_recycle",
						"type": "varchar"
					},
					{
						"name": "energy_star_rating_without_recycle",
						"type": "varchar"
					},
					{
						"name": "total_energy_consumption",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "weekly_core_hours_of_Service",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "total_electricity_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "total_diesel_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "water_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "recycle_normalised_water_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "total_water_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "total_recycled_water_percent",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "total_gas_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "rating_lodgement_fees",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "predicted_greenhouse_gas_intensity",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "predicted_average_water_use",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "number_of_trading_days",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_recycle_predicted_average_water_use",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_greenpower_ghg_intensity_scope_12",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_greenpower_ghg_intensity_scope_123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_greenpower_ghg_emissions_scope_12",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_greenpower_ghg_emissions_scope_123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "greenhouse_gas_intensity_scope_123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "greenhouse_gas_emissions_scope_123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "energy_intensity",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "explain_why_not_compliant",
						"type": "varchar"
					},
					{
						"name": "is_small_shopping_centre",
						"type": "varchar"
					},
					{
						"name": "using_latest_rules_water",
						"type": "varchar"
					},
					{
						"name": "using_latest_rules_energy",
						"type": "varchar"
					},
					{
						"name": "single_or_multi_storey",
						"type": "varchar"
					},
					{
						"name": "shopping_centre_size",
						"type": "varchar"
					},
					{
						"name": "sf_owner_id",
						"type": "nchar"
					},
					{
						"name": "hour_of_service_core_hours",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "has_extended_hours",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transformed_Ratings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NABERSStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NabersOnline')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to NABERS Online",
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('NabersOnline_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('NabersOnline_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('NabersOnline_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('NabersOnline_securityToken')]"
					},
					"apiVersion": "48.0"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/00 Schedule Job')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copyRatings",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select Top 20\n\trh.RatingHeaderID,\n\tRatingReferenceNumber,\n\trh.PremiseTypeID,\n\tpremiseType.ClassName as PremiseType,\n\trh.PremiseID,\n\tpremise.PremiseName as PremiseName,\n\tAssessorID,\n\trc.email as AssessorEmail,\n\tcustomer.RegisteredName as Customer_Name, \n\tcustomer.TradingName as Customer_TradingName,\n\tcmaddr.[StreetNumber] as [Customer_Mailing_StreeNumber],\n    cmaddr.[StreetName]  as [Customer_Mailing_StreetName],\n    cmaddr.[Suburb] as [Customer_Mailing_Suburb],\n    cmaddr.[Postcode] as [Customer_Mailing_Postcode],\n\tcmst.ClassName as [Customer_Mailing_State],\n\n\tRatingPeriodFrom,\n\tRatingPeriodTo,\n\tPublicListingFlag,\n\tOfficerID,\n\tRatingStatusID,\n\trs.ClassName as RatingStatus,\n\tLodgedDate,\n\tPaymentStatusID,\n\tps.ClassName as PaymentStatus,\n\tPaidDate,\n\t--Certificate\n\tCertificateValidFrom,\n\tCertificateValidTo,\n\n\tPremisesName as PremiseNameOnCert,\n\tCustomerName as CustomerNameOnCert,\n\n\trh.DeliveryEmail  as Certificate_Customer_Email,\n\n\tLastActionDate, \n\n\tReplaceFlag,\n\tRenewFlag,\n\tPreviousRatingHeaderID,\n\tNewRatingHeaderID,\n\taddr.[StreetNumber],\n    addr.[StreetName],\n    addr.[Suburb],\n    addr.[Postcode],\n\tst.ClassName as [State],\n\t(select  stuff(list,1,1,'')\n\t\tfrom  (( Select ';' + cast(crt.ClassName as varchar(16)) FROM tblRatingType rt \n\t\t\t\t\tINNER JOIN tblClassification crt on crt.ClassificationID = rt.RatingType\n\t\t\t\t\tand rt.RatingHeaderID = rh.RatingHeaderID\n\t\t\t\t\tfor     xml path(''))) as Sub(list)) as RatingTypes\n\n\n\n\t, scs.CinemaTheatres \n\t, scws.ShoppingCentreWaterSummaryID \n\t, scs.FloorConfiguration\n\t, scs.ParkingSpacesMechanical\n\t, scs.ParkingSpacesNatural \n\t, scs.TotalGymGLAR \n\t, scs.FoodCourtSeats \n\t, rad.conflictOfInterestFlag \n\t, rad.InComplianceWithCurrentRules \n\t, (Select top 1 wsrcl.classname from tblRatingType wsr left join tblClassification wsrcl on wsrcl.ClassificationID = wsr.StarRatingWithGreenPowerID and wsr.RatingHeaderID = rh.RatingHeaderID and wsr.RatingType = 57) as WaterStarRatingWRecycle\n\t, (Select top 1 wsrcl.classname from tblRatingType wsr left join tblClassification wsrcl on wsrcl.ClassificationID = wsr.StarRatingWithoutGreenPowerID and wsr.RatingHeaderID = rh.RatingHeaderID and wsr.RatingType = 57) as WaterStarRatingWoRecycle\n\t, (Select top 1 wsrcl.classname from tblRatingType wsr left join tblClassification wsrcl on wsrcl.ClassificationID = wsr.StarRatingWithGreenPowerID and wsr.RatingHeaderID = rh.RatingHeaderID and wsr.RatingType = 56) as EnergyStarRatingWRecycle\n\t, (Select top 1 wsrcl.classname from tblRatingType wsr left join tblClassification wsrcl on wsrcl.ClassificationID = wsr.StarRatingWithoutGreenPowerID and wsr.RatingHeaderID = rh.RatingHeaderID and wsr.RatingType = 56) as EnergyStarRatingWoRecycle\n\t, isnull(sces.TotalElectricityUse * 3.6, 0) + isnull(sces.TotalGasUse, 0) + isnull(sces.TotalLPGUse * 25.7, 0) + isnull(sces.TotalOilUse * 38.6, 0) + isnull(sces.TotalCoalUse * 22.1, 0) as totalEnergyConsumption\n\t, scs.HoursOfService as WeeklyCoreHoursOfService \n\t, sces.TotalElectricityUse as TotalElectricityConsumption\n\t, sces.TotalOilUse as TotalDieselConsumption\n\t, scws.WaterConsumptionWoRW as WaterConsumption\n\t, scws.WaterUsePerSqmWoRW as RecycleNormalisedWaterConsumption\n\t, scws.WaterConsumptionWoRW as TotalWaterConsumption\n\t, scws.RecycledWaterPercent as TotalRecycledWaterPercent\n\t, sces.TotalGasUse as TotalGasConsumption\n\t, (select Amount from tblFinancialTransaction ft inner join tblRatingPayment rp on ft.RatingPaymentID = rp.RatingPaymentID\n\t\t\tand rp.RatingHeaderID = rh.RatingHeaderId\n\t\t\twhere FeeCategoryID = 244 -- Loedgement\n\t\t\t) as RatingLodgementFees\n\t, sces.PredictedGHGEmissionsPerSqm as PredictedGreenhouseGasIntensity\n\t, scws.PredictedWaterUsePerGLAR as PredictedAverageWaterUse\n\t, scs.TradingDays as NumberOfTradingDays\n\t, scws.PredictedWaterUsePerGLARWoRW as NoRecyclePredictedAverageWaterUse\n\t, sces.GHGEmissionsPerSqmGLARScope12WoGP as NoGreenPower_GHG_IntensityScope_12\n\t, sces.GHGEmissionsPerSqmGLARScope123WoGP as NoGreenPowerGHGIntensityScope123\n\t, sces.GHGEmissionsScope12WoGP as NoGreenPowerGHGEmissionsScope12\n\t, sces.GHGEmissionsScope123WoGP  as NoGreenPowerGHGEmissionsScope123\n\t, sces.GHGEmissionsPerSqmGLARScope123 as GreenhouseGasIntensityScope123\n\t, sces.GHGEmissionsScope123  as GreenhouseGasEmissionsScope123\n\t, sces.EnergyIntensity\n\t, rad.ComplianceExplanation as ExplainWhyNotCompliant \n\t, scs.IsSmallShoppingCentre\n\t, 1 as batch_id\n\n--into RatingHeaderStage\nfrom tblRatingHeader rh\nleft join tblPremise premise on premise.PremiseID = rh.PremiseID\nleft join tblClassification premiseType on premiseType.ClassificationID = rh.PremiseTypeID\nleft join tblClassification rs on rs.ClassificationID = rh.RatingStatusID\nleft join tblClassification ps on ps.ClassificationID = rh.PaymentStatusID\nleft join tblAdministrator ad on ad.AdministratorID = rh.OfficerID\nleft join tblUser aduser on aduser.UserID = ad.UserID\nleft join tblCustomer customer on customer.CustomerID = rh.CustomerID\nleft join tblRatingContractor rc on rc.RatingContractorID = rh.AssessorID\nleft join tblUser rcuser on rcuser.UserID = rc.UserID\nleft join tblAddress addr on addr.AddressId = premise.PremiseAddressId\nleft join tblClassification st on st.ClassificationID = addr.StateId\nleft join tblAddress cmaddr on cmaddr.AddressId = customer.MailingAddressID\nleft join tblClassification cmst on cmst.ClassificationID = cmaddr.StateId\n\nleft join tblShoppingCentreSummary scs on scs.RatingHeaderID = rh.RatingHeaderID\nleft join tblShoppingCentreEnergySummary sces on sces.RatingHeaderID = rh.RatingHeaderID\nleft join tblShoppingCentreWaterSummary scws on scws.RatingHeaderID = rh.RatingHeaderID\n\nleft join tblAssessorDeclaration rad on rad.RatingHeaderID = rh.RatingHeaderID\n\nWhere rh.PremiseTypeID = @{pipeline().parameters.pPremiseType}\nand ((rh.CreatedDate between '@{pipeline().parameters.pStartDate}' and '@{pipeline().parameters.pEndDate}') OR (rh.LastActionDate between '@{pipeline().parameters.pStartDate}' and '@{pipeline().parameters.pEndDate}'))\norder by RatingHeaderID",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "db_company",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "cn_db_rating_stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "copyAccessors",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select Top 20\n\trcc.companyid,\n\trc.RatingContractorID as AssessorId,\n\trcuser.UserID as UserId,\n\trcuser.FirstName, \n\trcuser.LastName, \n\ttc.ClassName as Title, \n\tmaddr.[StreetNumber] as Mailing_StreetNumber,\n    maddr.[StreetName] as Mailing_StreetName,\n    maddr.[Suburb] as Mailing_Suburb,\n    maddr.[Postcode] as Mailing_Postcode,\n\tmst.ClassName as Mailing_State,\n\n\tbaddr.[StreetNumber] as Billing_StreetNumber,\n    baddr.[StreetName] as Billing_StreetName,\n    baddr.[Suburb] as Billing_Suburb,\n    baddr.[Postcode] as Billing_Postcode,\n\tbst.ClassName as Billing_State,\n\tPhone,\n\tEmail,\n\tJoinedDate,\n\tAccreditationDate,\n\tAccreditationExpiryDate,\n\tAccreditationNumber,\n\tEnergyFlag, \n\tWaterFlag, \n\tWasteFlag\n\t, 1 as batch_id\n\t, RequireSupervisionSC\n\t, (select  stuff(list,1,1,'')\n\t\tfrom  (( Select ';' + cast(crst.ClassCode as varchar(16)) FROM tblRatingContractorAvailability  rca \n\t\t\t\t\tINNER JOIN tblClassification crt on crt.ClassificationID = rca.AvailabilityTypeID\n\t\t\t\t\tleft join tblClassification crst on crst.ClassificationID = rca.StateId\n\t\t\t\t\tand rca.RatingContractorID = rc.RatingContractorID and crt.ClassificationID = 459\n\t\t\t\t\tfor     xml path(''))) as Sub(list)) as Metropolitan\n\t, (select  stuff(list,1,1,'')\n\t\tfrom  (( Select ';' + cast(crst.ClassCode as varchar(16)) FROM tblRatingContractorAvailability  rca \n\t\t\t\t\tINNER JOIN tblClassification crt on crt.ClassificationID = rca.AvailabilityTypeID\n\t\t\t\t\tleft join tblClassification crst on crst.ClassificationID = rca.StateId\n\t\t\t\t\tand rca.RatingContractorID = rc.RatingContractorID and crt.ClassificationID = 460\n\t\t\t\t\tfor     xml path(''))) as Sub(list)) as Regional\n\t, case when RetailFlag is null then 0 else RetailFlag end as RetailFlag \n\t, case when HospitalFlag is null then 0 else HospitalFlag end as HospitalFlag \n\t, case when HotelFlag is null then 0 else HotelFlag end as HotelFlag \n\t, case when OfficeFlag is null then 0 else OfficeFlag end as OfficeFlag \n\t, case when ApartmentBuildingFlag is null then 0 else ApartmentBuildingFlag end as ApartmentBuildingFlag \n\n\t--into AssessorsStage\n\tfrom \n\t\ttblRatingHeader rh\n\t\tleft join tblRatingContractor rc on rc.RatingContractorID = rh.AssessorID\n\t\tleft join tblUser rcuser on rcuser.UserID = rc.UserID\n\t\tleft join tblClassification tc on tc.ClassificationID = TitleID\n\t\tleft join tblAddress maddr on maddr.AddressId = MailingAddressID\n\t\tleft join tblAddress baddr on baddr.AddressId = BillingAddressID\n\t\tleft join tblClassification mst on mst.ClassificationID = maddr.StateId\n\t\tleft join tblClassification bst on bst.ClassificationID = baddr.StateId\n\t\tinner join tblRatingContractorCompany rcc on rc.RatingContractorID = rcc.assessorid\n\t\t\n\tWhere rh.PremiseTypeID = @{pipeline().parameters.pPremiseType} and \n\t(EndEffectiveDate is null or EndEffectiveDate > getdate())\nand ((rh.CreatedDate between '@{pipeline().parameters.pStartDate}' and '@{pipeline().parameters.pEndDate}') OR (rh.LastActionDate between '@{pipeline().parameters.pStartDate}' and '@{pipeline().parameters.pEndDate}'))\n\torder by RatingHeaderID",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "db_company",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "cn_db_rating_stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "copyCompany",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select top 20 \n\tc.ABN,c.CompanyName, c.CompanyID, c.CompanyStatusID,\n\tc.CompanyTypeID, c.CompanyURL, c.MailingAddressID, c.Phone, \n\tc.PIInsuranceExpiryDate, c.PLInsuranceExpiryDate, c.RatingParticipationFlag,\n\tc.SAPCustomerNo, c.ShortName, c.SoleTraderFlag,\n\tmaddr.[StreetNumber] as Mailing_StreetNumber,\n    maddr.[StreetName] as Mailing_StreetName,\n    maddr.[Suburb] as Mailing_Suburb,\n    maddr.[Postcode] as Mailing_Postcode,\n\tmst.ClassName as Mailing_State,\n\n\tbaddr.[StreetNumber] as Billing_StreetNumber,\n    baddr.[StreetName] as Billing_StreetName,\n    baddr.[Suburb] as Billing_Suburb,\n    baddr.[Postcode] as Billing_Postcode,\n\tbst.ClassName as Billing_State,\n\t'Assessor' as Type\n\t, 1 as batch_id\ninto CompanyStage\nfrom  \n\ttblRatingHeader rh\n\tleft join tblRatingContractor rc on rc.RatingContractorID = rh.AssessorID\n\tinner join tblRatingContractorCompany rcc on rc.RatingContractorID = rcc.assessorid\n\tinner join tblCompany c on c.companyid = rcc.companyid\n\tleft join tblAddress maddr on maddr.AddressId = c.MailingAddressID\n\tleft join tblAddress baddr on baddr.AddressId = c.BillingAddressID\n\tleft join tblClassification mst on mst.ClassificationID = maddr.StateId\n\tleft join tblClassification bst on bst.ClassificationID = baddr.StateId\nWhere rh.PremiseTypeID = @{pipeline().parameters.pPremiseType}\n\tand (EndEffectiveDate is null or EndEffectiveDate > getdate())\nand ((rh.CreatedDate between '@{pipeline().parameters.pStartDate}' and '@{pipeline().parameters.pEndDate}') OR (rh.LastActionDate between '@{pipeline().parameters.pStartDate}' and '@{pipeline().parameters.pEndDate}'))\n\torder by RatingHeaderID",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "db_company",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "cn_db_rating_stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "copyBuilding",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select top 20 \n\tc.ABN,c.CompanyName, c.CompanyID, c.CompanyStatusID,\n\tc.CompanyTypeID, c.CompanyURL, c.MailingAddressID, c.Phone, \n\tc.PIInsuranceExpiryDate, c.PLInsuranceExpiryDate, c.RatingParticipationFlag,\n\tc.SAPCustomerNo, c.ShortName, c.SoleTraderFlag,\n\tmaddr.[StreetNumber] as Mailing_StreetNumber,\n    maddr.[StreetName] as Mailing_StreetName,\n    maddr.[Suburb] as Mailing_Suburb,\n    maddr.[Postcode] as Mailing_Postcode,\n\tmst.ClassName as Mailing_State,\n\n\tbaddr.[StreetNumber] as Billing_StreetNumber,\n    baddr.[StreetName] as Billing_StreetName,\n    baddr.[Suburb] as Billing_Suburb,\n    baddr.[Postcode] as Billing_Postcode,\n\tbst.ClassName as Billing_State,\n\t'Assessor' as Type\n\t, 1 as batch_id\ninto CompanyStage\nfrom  \n\ttblRatingHeader rh\n\tleft join tblRatingContractor rc on rc.RatingContractorID = rh.AssessorID\n\tinner join tblRatingContractorCompany rcc on rc.RatingContractorID = rcc.assessorid\n\tinner join tblCompany c on c.companyid = rcc.companyid\n\tleft join tblAddress maddr on maddr.AddressId = c.MailingAddressID\n\tleft join tblAddress baddr on baddr.AddressId = c.BillingAddressID\n\tleft join tblClassification mst on mst.ClassificationID = maddr.StateId\n\tleft join tblClassification bst on bst.ClassificationID = baddr.StateId\nWhere rh.PremiseTypeID = @{pipeline().parameters.pPremiseType}\n\tand (EndEffectiveDate is null or EndEffectiveDate > getdate())\nand ((rh.CreatedDate between '@{pipeline().parameters.pStartDate}' and '@{pipeline().parameters.pEndDate}') OR (rh.LastActionDate between '@{pipeline().parameters.pStartDate}' and '@{pipeline().parameters.pEndDate}'))\n\torder by RatingHeaderID",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "db_company",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "cn_db_rating_stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"pStartDate": {
						"type": "string"
					},
					"pEndDate": {
						"type": "string"
					},
					"pPremiseType": {
						"type": "int",
						"defaultValue": 55
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_company')]",
				"[concat(variables('factoryId'), '/datasets/cn_db_rating_stage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_Buildings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Building__c"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		}
	]
}