{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nabers-data-sync"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/01a Transform Rating Attributes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Transform Rating Attributes Data Flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "01_Transform_Rating_Attributes",
								"type": "DataFlowReference",
								"parameters": {
									"pbatch_id": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"getStagedHoursOfService": {},
									"getStageFoodCourt": {},
									"getStageGymnasiums": {},
									"getStageCinemas": {},
									"getStageParkingSpace": {},
									"sinkTransformdAttributeType": {},
									"sink1": {},
									"sink2": {},
									"sink3": {},
									"sink4": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "Array"
					},
					"_vnewBuildingInSF": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01b Create Assessors Company In Salesforce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "createNotFoundCompany",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetCompanyToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "billing_street"
										},
										"sink": {
											"name": "BillingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Suburb",
											"type": "String"
										},
										"sink": {
											"name": "BillingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_State",
											"type": "String"
										},
										"sink": {
											"name": "BillingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Postcode",
											"type": "String"
										},
										"sink": {
											"name": "BillingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mailing_street"
										},
										"sink": {
											"name": "ShippingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Suburb",
											"type": "String"
										},
										"sink": {
											"name": "ShippingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_State",
											"type": "String"
										},
										"sink": {
											"name": "ShippingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Postcode",
											"type": "String"
										},
										"sink": {
											"name": "ShippingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"name": "Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CompanyURL",
											"type": "String"
										},
										"sink": {
											"name": "Website",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String"
										},
										"sink": {
											"name": "Company_Record_Type__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ABN",
											"type": "String"
										},
										"sink": {
											"name": "NO_ABN__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PIInsuranceExpiryDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NO_Professional_Indemnity_Expiry_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "PLInsuranceExpiryDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NO_Public_Liability_Expiry_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SAPCustomerNo",
											"type": "String"
										},
										"sink": {
											"name": "NO_SAP_Customer_Number__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ShortName",
											"type": "String"
										},
										"sink": {
											"name": "NO_Short_Name__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Country"
										},
										"sink": {
											"name": "ShippingCountry",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Country"
										},
										"sink": {
											"name": "BillingCountry",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_stage_assessors",
								"type": "DatasetReference",
								"parameters": {
									"pBatch_Id": 1
								}
							}
						],
						"outputs": [
							{
								"referenceName": "sf_company",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetCompany",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "createNotFoundCompany",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetCompanyToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Variable Rating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('_vnewBuildingsInSF')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Building by Name In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from Account\nwhere NO_ABN__c = '@{item().ABN}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_company",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "UpdateNewSalesforceIdForBuilding",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup Each Building by Name In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateNewSalesforceIdForCompany]",
										"storedProcedureParameters": {
											"batch_id": {
												"value": {
													"value": "@pipeline().parameters.pbatch_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"member_company_id": {
												"value": {
													"value": "@item().CompanyID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"salesforce_company_Id": {
												"value": {
													"value": "@activity('Lookup Each Building by Name In Salesforce').output.firstRow.Id",
													"type": "Expression"
												},
												"type": "String"
											},
											"account_type": {
												"value": "company",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "NABERSStaging",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Set Variable Rating",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_GetCompany",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_vnewBuildingsInSF",
							"value": {
								"value": "@activity('usp_GetCompany').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_defaultCountry": {
						"type": "String",
						"defaultValue": "Australia"
					},
					"_defaultPremiseType": {
						"type": "String",
						"defaultValue": "Shopping Centre"
					},
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "String"
					},
					"_vnewBuildingInSF": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01b Create Customer Contact Relation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "createCustomerContactRelation",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetCustomerContactRelationToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sf_customercontact_id",
											"type": "String"
										},
										"sink": {
											"name": "ContactId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sf_customer_id",
											"type": "String"
										},
										"sink": {
											"name": "AccountId",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_transformed_ratings",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sf_customercontact",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01b Create Customer In Salesforce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "createNotFoundCustomers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetCustomerToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "mailing_street"
										},
										"sink": {
											"name": "ShippingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Customer_Mailing_Suburb"
										},
										"sink": {
											"name": "ShippingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Customer_Mailing_State"
										},
										"sink": {
											"name": "ShippingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Customer_Mailing_Postcode"
										},
										"sink": {
											"name": "ShippingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Customer_ABN"
										},
										"sink": {
											"name": "NO_ABN__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Customer_SAP_Number"
										},
										"sink": {
											"name": "NO_SAP_Customer_Number__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Customer_Name"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Country"
										},
										"sink": {
											"name": "ShippingCountry",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Customer_Organisation"
										},
										"sink": {
											"name": "NO_Organisation_Type__c"
										}
									},
									{
										"source": {
											"name": "sf_record_type"
										},
										"sink": {
											"name": "RecordTypeId"
										}
									},
									{
										"source": {
											"name": "Customer_TradingName_Trimmed"
										},
										"sink": {
											"name": "NO_Short_Name__c"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_stage_assessors",
								"type": "DatasetReference",
								"parameters": {
									"pBatch_Id": 1
								}
							}
						],
						"outputs": [
							{
								"referenceName": "sf_company",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetCustomers",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "createNotFoundCustomers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetCustomerToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Variable Rating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('_vnewCustomersInSF')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Customer by ABN In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from Account\nwhere NO_ABN__c = '@{item().Customer_ABN}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_company",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "UpdateNewSalesforceIdForCustomer",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup Each Customer by ABN In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateNewSalesforceIdForCompany]",
										"storedProcedureParameters": {
											"batch_id": {
												"value": {
													"value": "@pipeline().parameters.pbatch_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"member_company_id": {
												"value": {
													"value": "@item().member_company_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"salesforce_company_Id": {
												"value": {
													"value": "@activity('Lookup Each Customer by ABN In Salesforce').output.firstRow.Id",
													"type": "Expression"
												},
												"type": "String"
											},
											"account_type": {
												"value": "customer",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "NABERSStaging",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Set Variable Rating",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_GetCustomers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_vnewCustomersInSF",
							"value": {
								"value": "@activity('usp_GetCustomers').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_vnewCustomersInSF": {
						"type": "Array"
					},
					"_vsf_CustomerRecord": {
						"type": "String"
					},
					"_vnewCustomerInSF": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01b Transform Country in master entities')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "01_Transform",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "01_Transform_Country_In_Company",
								"type": "DataFlowReference",
								"parameters": {
									"pbatch_id": "1"
								},
								"datasetParameters": {
									"getLookupSFCompany": {
										"pbatch_id": 1
									},
									"updateLookupSFCmpany": {
										"pbatch_id": 1
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01c Create Customer Contact In Salesforce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "createNotFoundCustomerContact",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetCustomerContactToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "StreetName",
											"type": "String"
										},
										"sink": {
											"name": "MailingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Suburb",
											"type": "String"
										},
										"sink": {
											"name": "MailingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String"
										},
										"sink": {
											"name": "MailingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String"
										},
										"sink": {
											"name": "MailingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "phone",
											"type": "String"
										},
										"sink": {
											"name": "Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mobile",
											"type": "String"
										},
										"sink": {
											"name": "MobilePhone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "fax",
											"type": "String"
										},
										"sink": {
											"name": "Fax",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AccountManagerFlag",
											"type": "Boolean"
										},
										"sink": {
											"name": "NO_Account_Manager__c",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Title"
										},
										"sink": {
											"name": "Title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sf_record_type",
											"type": "String"
										},
										"sink": {
											"name": "RecordTypeId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sf_company_id"
										},
										"sink": {
											"name": "AccountId"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_stage_assessors",
								"type": "DatasetReference",
								"parameters": {
									"pBatch_Id": 1
								}
							}
						],
						"outputs": [
							{
								"referenceName": "sf_contacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetCustomers",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "createNotFoundCustomerContact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetCustomerContactToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Variable Rating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('_vnewCustomersInSF')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Customer Contact by Email In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from Contact\nwhere Email= '@{replace(item().Email, '''', '''''')}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_company",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "UpdateNewSalesforceIdForCustomer",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup Each Customer Contact by Email In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateNewSalesforceIdForCompany]",
										"storedProcedureParameters": {
											"batch_id": {
												"value": {
													"value": "@pipeline().parameters.pbatch_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"member_company_id": {
												"value": {
													"value": "@item().member_company_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"salesforce_company_Id": {
												"value": {
													"value": "@activity('Lookup Each Customer Contact by Email In Salesforce').output.firstRow.Id",
													"type": "Expression"
												},
												"type": "String"
											},
											"account_type": {
												"value": "customer contact",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "NABERSStaging",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Set Variable Rating",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_GetCustomers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_vnewCustomersInSF",
							"value": {
								"value": "@activity('usp_GetCustomers').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_vnewCustomersInSF": {
						"type": "Array"
					},
					"_vsf_CustomerRecord": {
						"type": "String"
					},
					"_vnewCustomerInSF": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01c Transform Company Assessors')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "01_Transform",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "01_Transform_Company_Assessor",
								"type": "DataFlowReference",
								"parameters": {
									"pDefaultCountry": {
										"value": "'@{'Australia'}'",
										"type": "Expression"
									},
									"pbatch_id": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"pActive": "'Active'",
									"pPortalAccess": "'NABERS Online'"
								},
								"datasetParameters": {
									"getLookupCompany": {
										"pbatch_id": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									},
									"getLookupAssessor": {
										"pbatch_id": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									},
									"getStageAssessors": {
										"pBatch_Id": 1
									},
									"targetLookupSalesforceAssessor": {
										"pbatch_id": 1
									},
									"updateCleanedData": {
										"pbatch_id": 1
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01d Create Assessors In Salesforce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "createNotFoundAssessors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetAssessorToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "phone_cleaned"
										},
										"sink": {
											"name": "Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AccreditationExpiryDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NO_Accreditation_Expiry_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "AccreditationNumber",
											"type": "String"
										},
										"sink": {
											"name": "NO_Accreditation_Number__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JoinedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NO_Join_date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "accredition"
										},
										"sink": {
											"name": "NO_Accreditation__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "metropolitan_cleaned"
										},
										"sink": {
											"name": "NO_Metropolitan__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "member_assessor_id"
										},
										"sink": {
											"name": "NO_Id_In_Member__c",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "salesforce_company_id"
										},
										"sink": {
											"name": "AccountId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FirstName"
										},
										"sink": {
											"name": "FirstName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastName"
										},
										"sink": {
											"name": "LastName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Title"
										},
										"sink": {
											"name": "Salutation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cleaned_mailing_streetname"
										},
										"sink": {
											"name": "MailingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Suburb"
										},
										"sink": {
											"name": "MailingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_State"
										},
										"sink": {
											"name": "MailingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Postcode"
										},
										"sink": {
											"name": "MailingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "mailing_country"
										},
										"sink": {
											"name": "MailingCountry",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_StreetName"
										},
										"sink": {
											"name": "OtherStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Suburb"
										},
										"sink": {
											"name": "OtherCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_State"
										},
										"sink": {
											"name": "OtherState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Postcode"
										},
										"sink": {
											"name": "OtherPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "billing_country"
										},
										"sink": {
											"name": "OtherCountry",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "rating_type"
										},
										"sink": {
											"name": "NO_Rating_Types__c"
										}
									},
									{
										"source": {
											"name": "salesforce_contact_type"
										},
										"sink": {
											"name": "RecordTypeId"
										}
									},
									{
										"source": {
											"name": "salesforce_portal_access"
										},
										"sink": {
											"name": "Portal_Access__c"
										}
									},
									{
										"source": {
											"name": "salesforce_user_active"
										},
										"sink": {
											"name": "NO_User_Status__c"
										}
									},
									{
										"source": {
											"name": "regional_cleaned"
										},
										"sink": {
											"name": "NO_Regional__c"
										}
									},
									{
										"source": {
											"name": "Mobile"
										},
										"sink": {
											"name": "MobilePhone"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_stage_assessors",
								"type": "DatasetReference",
								"parameters": {
									"pBatch_Id": "@pipeline().parameters.pbatch_id"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "sf_contacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetSalesforce",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "createNotFoundAssessors",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetAssessorToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "waitForFewSecondsToAllowSFToCreateUser",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('_vnewBuildingsInSF')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Member by Member Id In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from Contact\nwhere NO_Id_In_Member__c = @{item().member_assessor_id}",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_contacts",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "UpdateNewSalesforceIdForBuilding",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup Member by Member Id In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup Assessor in User by Email Id In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateNewSalesforceIdForAssessor]",
										"storedProcedureParameters": {
											"batch_id": {
												"value": {
													"value": "@pipeline().parameters.pbatch_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"member_assessor_id": {
												"value": {
													"value": "@item().member_assessor_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"salesforce_assessor_Id": {
												"value": {
													"value": "@activity('Lookup Member by Member Id In Salesforce').output.firstrow.Id",
													"type": "Expression"
												},
												"type": "String"
											},
											"salesforce_user_id": {
												"value": {
													"value": "@if(contains(string(activity('Lookup Assessor in User by Email Id In Salesforce').output), 'firstRow'), activity('Lookup Assessor in User by Email Id In Salesforce').output.firstrow.Id, '')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "NABERSStaging",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Lookup Assessor in User by Email Id In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from User\nwhere Email like '%@{item().Email}%'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_contacts",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								}
							]
						}
					},
					{
						"name": "Set Variable Rating",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_GetSalesforce",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_vnewBuildingsInSF",
							"value": {
								"value": "@activity('usp_GetSalesforce').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "markAssessorAsUsersToInActive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "forEachRow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetNewAssessorToMarkUserInactiveInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "upsert",
								"externalIdFieldName": "Email",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Email",
											"type": "String"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsActive"
										},
										"sink": {
											"name": "IsActive",
											"type": "Boolean"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_stage_assessors",
								"type": "DatasetReference",
								"parameters": {
									"pBatch_Id": "@pipeline().parameters.pbatch_id"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "sf_users",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "waitForFewSecondsToAllowSFToCreateUser",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Set Variable Rating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 6
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_defaultPremiseType": {
						"type": "String",
						"defaultValue": "Shopping Centre"
					},
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "String"
					},
					"_vnewBuildingInSF": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/02 Transform Ratings')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "01_Transform",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "01_Transform_Rating",
								"type": "DataFlowReference",
								"parameters": {
									"pbatch_id": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"vDefaultComplete": "'Complete'",
									"vYes": "'Yes'",
									"vNo": "'No'"
								},
								"datasetParameters": {
									"getRatings": {},
									"getLookupSalesforceBuildings": {
										"pbatch_id": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									},
									"getLookupSalesforceAssessors": {
										"pbatch_id": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									},
									"getLookupSalesforceTechOfficer": {
										"pbatch_id": 1
									},
									"getLookupSalesforceCompany": {
										"pbatch_id": 1
									},
									"getLookupSalesforceCustomers": {
										"pbatch_id": 1
									},
									"dumpToSFTransofrmedRatings": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetSalesforce",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "01_Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[usp_GetRatingsToCreateInSalesforce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "usp_GetSalesforce",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('usp_GetSalesforce').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Building by Name In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from NO_Rating__c \nwhere NO_Member_Rating_Id__c= @{item().source_rating_id}",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_Buildings",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "UpdateNewSalesforceIdForBuilding",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup Each Building by Name In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[usp_UpdateNewSalesforceIdForRating]",
										"storedProcedureParameters": {
											"batch_id": {
												"value": {
													"value": "@pipeline().parameters.pbatch_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"member_rating_id": {
												"value": {
													"value": "@item().source_rating_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"salesforceratingId": {
												"value": {
													"value": "@activity('Lookup Each Building by Name In Salesforce').output.firstrow.Id",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "NABERSStaging",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/03 Create Ratings')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "createRating",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "usp_GetRatingsToCreateInSalesforce",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "building_type",
											"type": "String"
										},
										"sink": {
											"name": "Building_Type__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "source_rating_id"
										},
										"sink": {
											"name": "NO_Member_Rating_Id__c"
										}
									},
									{
										"source": {
											"name": "assessor_email"
										},
										"sink": {
											"name": "Assessor_Email__c"
										}
									},
									{
										"source": {
											"name": "customer_email"
										},
										"sink": {
											"name": "Customer_Email__c"
										}
									},
									{
										"source": {
											"name": "cert_building_name"
										},
										"sink": {
											"name": "Building_Name_On_Certificate__c"
										}
									},
									{
										"source": {
											"name": "cert_customer_name"
										},
										"sink": {
											"name": "Customer_Name_On_Certificate__c"
										}
									},
									{
										"source": {
											"name": "cert_valid_from"
										},
										"sink": {
											"name": "Valid_From_Date__c"
										}
									},
									{
										"source": {
											"name": "cert_valid_to"
										},
										"sink": {
											"name": "Valid_To_Date__c"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "Status__c"
										}
									},
									{
										"source": {
											"name": "period_from"
										},
										"sink": {
											"name": "Rating_Start_Date__c"
										}
									},
									{
										"source": {
											"name": "rating_ref_number"
										},
										"sink": {
											"name": "NO_Member_Rating_Ref_Number__c"
										}
									},
									{
										"source": {
											"name": "lodged_date"
										},
										"sink": {
											"name": "Lodge_Date__c"
										}
									},
									{
										"source": {
											"name": "rating_main_purpose"
										},
										"sink": {
											"name": "Main_purpose_of_rating__c"
										}
									},
									{
										"source": {
											"name": "publicly_listed"
										},
										"sink": {
											"name": "Rating_Publicly_Listed__c"
										}
									},
									{
										"source": {
											"name": "rating_type"
										},
										"sink": {
											"name": "Rating_Type__c"
										}
									},
									{
										"source": {
											"name": "rating_scope"
										},
										"sink": {
											"name": "Rating_Scope__c"
										}
									},
									{
										"source": {
											"name": "sf_officer_id"
										},
										"sink": {
											"name": "Tech_Officer__c"
										}
									},
									{
										"source": {
											"name": "last_update_date"
										},
										"sink": {
											"name": "Last_Status_Update__c"
										}
									},
									{
										"source": {
											"name": "renew_replace"
										},
										"sink": {
											"name": "Renew_Replace__c"
										}
									},
									{
										"source": {
											"name": "review_summary_page"
										},
										"sink": {
											"name": "Review_summary_page__c"
										}
									},
									{
										"source": {
											"name": "rating_information_page"
										},
										"sink": {
											"name": "Rating_information_page__c"
										}
									},
									{
										"source": {
											"name": "lodge_rating_page"
										},
										"sink": {
											"name": "Lodge_rating_page__c"
										}
									},
									{
										"source": {
											"name": "rating_details_page"
										},
										"sink": {
											"name": "Rating_details_page__c"
										}
									},
									{
										"source": {
											"name": "parking_space_page"
										},
										"sink": {
											"name": "Parking_Spaces_Page__c"
										}
									},
									{
										"source": {
											"name": "water_page"
										},
										"sink": {
											"name": "Water_page__c"
										}
									},
									{
										"source": {
											"name": "conflict_of_interest"
										},
										"sink": {
											"name": "Conflict_Of_Interest__c"
										}
									},
									{
										"source": {
											"name": "compliant_with_current_rules"
										},
										"sink": {
											"name": "Compliant_With_Rules__c"
										}
									},
									{
										"source": {
											"name": "relodged_date"
										},
										"sink": {
											"name": "Relodge_Date__c"
										}
									},
									{
										"source": {
											"name": "rating_data_complete"
										},
										"sink": {
											"name": "Rating_Data_Complete_Flag__c"
										}
									},
									{
										"source": {
											"name": "assessor_declaration"
										},
										"sink": {
											"name": "Assessor_Declaration__c"
										}
									},
									{
										"source": {
											"name": "customer_aware_of_star_rating"
										},
										"sink": {
											"name": "Customer_Aware_Of_Star_Rating__c"
										}
									},
									{
										"source": {
											"name": "water_star_rating_with_recycle"
										},
										"sink": {
											"name": "Water_Star_Rating_With_Recycled_Water__c"
										}
									},
									{
										"source": {
											"name": "water_star_rating_without_recycle"
										},
										"sink": {
											"name": "Water_Star_Rating_Without_Recycled_Water__c"
										}
									},
									{
										"source": {
											"name": "energy_star_rating_with_recycle"
										},
										"sink": {
											"name": "Energy_Star_Rating_With_Green_Power__c"
										}
									},
									{
										"source": {
											"name": "energy_star_rating_without_recycle"
										},
										"sink": {
											"name": "Energy_Star_Rating_Without_Green_Power__c"
										}
									},
									{
										"source": {
											"name": "total_energy_consumption"
										},
										"sink": {
											"name": "Total_Energy_Consumption__c"
										}
									},
									{
										"source": {
											"name": "core_hours_of_service"
										},
										"sink": {
											"name": "Weekly_Core_Hours_Of_Service__c"
										}
									},
									{
										"source": {
											"name": "total_electricity_consumption"
										},
										"sink": {
											"name": "Total_Electricity_Consumption__c"
										}
									},
									{
										"source": {
											"name": "total_diesel_consumption"
										},
										"sink": {
											"name": "Total_Diesel_Consumption__c"
										}
									},
									{
										"source": {
											"name": "recycle_normalised_water_consumption"
										},
										"sink": {
											"name": "Recycle_Normalised_Water_Consumption__c"
										}
									},
									{
										"source": {
											"name": "total_water_consumption"
										},
										"sink": {
											"name": "Total_Water_Consumption__c"
										}
									},
									{
										"source": {
											"name": "total_recycled_water_percent"
										},
										"sink": {
											"name": "Total_Recycled_Water_Percent__c"
										}
									},
									{
										"source": {
											"name": "total_gas_consumption"
										},
										"sink": {
											"name": "Total_Gas_Consumption__c"
										}
									},
									{
										"source": {
											"name": "rating_lodgement_fees"
										},
										"sink": {
											"name": "Rating_Lodgement_Fees__c"
										}
									},
									{
										"source": {
											"name": "predicted_greenhouse_gas_intensity"
										},
										"sink": {
											"name": "Predicted_Greenhouse_Gas_Intensity__c"
										}
									},
									{
										"source": {
											"name": "predicted_average_water_use"
										},
										"sink": {
											"name": "Predicted_Average_Water_Use__c"
										}
									},
									{
										"source": {
											"name": "number_of_trading_days"
										},
										"sink": {
											"name": "Number_Of_Trading_Days__c"
										}
									},
									{
										"source": {
											"name": "no_recycle_predicted_average_water_use"
										},
										"sink": {
											"name": "No_Recycle_Predicted_Average_Water_Use__c"
										}
									},
									{
										"source": {
											"name": "no_greenpower_ghg_intensity_scope_12"
										},
										"sink": {
											"name": "No_GreenPower_GHG_Intensity_Scope_12__c"
										}
									},
									{
										"source": {
											"name": "no_greenpower_ghg_intensity_scope_123"
										},
										"sink": {
											"name": "No_GreenPower_GHG_Intensity_Scope_123__c"
										}
									},
									{
										"source": {
											"name": "no_greenpower_ghg_emissions_scope_12"
										},
										"sink": {
											"name": "No_GreenPower_GHG_Emissions_Scope_12__c"
										}
									},
									{
										"source": {
											"name": "no_greenpower_ghg_emissions_scope_123"
										},
										"sink": {
											"name": "No_GreenPower_GHG_Emissions_Scope_123__c"
										}
									},
									{
										"source": {
											"name": "greenhouse_gas_intensity_scope_123"
										},
										"sink": {
											"name": "Greenhouse_Gas_Intensity_Scope_123__c"
										}
									},
									{
										"source": {
											"name": "greenhouse_gas_emissions_scope_123"
										},
										"sink": {
											"name": "Greenhouse_Gas_Emissions_Scope_123__c"
										}
									},
									{
										"source": {
											"name": "energy_intensity"
										},
										"sink": {
											"name": "Energy_Intensity__c"
										}
									},
									{
										"source": {
											"name": "explain_why_not_compliant"
										},
										"sink": {
											"name": "Explain_Why_Not_Compliant__c"
										}
									},
									{
										"source": {
											"name": "is_small_shopping_centre"
										},
										"sink": {
											"name": "Is_Small_Shopping_Centre__c"
										}
									},
									{
										"source": {
											"name": "using_latest_rules_water"
										},
										"sink": {
											"name": "Using_Latest_Water_Rules_Version__c"
										}
									},
									{
										"source": {
											"name": "using_latest_rules_energy"
										},
										"sink": {
											"name": "Using_Latest_Energy_Rules_Version__c"
										}
									},
									{
										"source": {
											"name": "single_or_multi_storey"
										},
										"sink": {
											"name": "Shopping_Centre_Storey__c"
										}
									},
									{
										"source": {
											"name": "sf_customer_id"
										},
										"sink": {
											"name": "Customer__c"
										}
									},
									{
										"source": {
											"name": "shopping_centre_size"
										},
										"sink": {
											"name": "Shopping_Centre_Size__c"
										}
									},
									{
										"source": {
											"name": "has_extended_hours"
										},
										"sink": {
											"name": "Has_Extended_Hours__c"
										}
									},
									{
										"source": {
											"name": "has_food_court"
										},
										"sink": {
											"name": "Has_Food_Court__c"
										}
									},
									{
										"source": {
											"name": "has_gym"
										},
										"sink": {
											"name": "Has_Gym__c"
										}
									},
									{
										"source": {
											"name": "has_parking_space"
										},
										"sink": {
											"name": "Has_Parking_Space__c"
										}
									},
									{
										"source": {
											"name": "has_cinema"
										},
										"sink": {
											"name": "hasCinema__c"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_transformed_ratings",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sf_Ratings",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/03a Junction Building Rating')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetRatings",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRating]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "usp_GetRatings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('usp_GetRatings').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Rating by Member Rating Id In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from NO_Rating__c \nwhere NO_Member_Rating_Id__c = @{item().RatingHeaderID}",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_Ratings",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "if Rating was successfully created",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup Each Rating by Member Rating Id In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(string(activity('Lookup Each Rating by Member Rating Id In Salesforce').output), 'firstRow')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Insert Anomaly",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertDataSyncAnomalies]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"process_name": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"anomaly_desc": {
															"value": {
																"value": "No Rating found for this Rating header Id.",
																"type": "Expression"
															},
															"type": "String"
														},
														"anomaly_type": {
															"value": "Error",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "UpdateNewSalesforceIdForRating",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_UpdateNewSalesforceIdForRating]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_rating_id": {
															"value": {
																"value": "@item().ratingheaderid",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"salesforceratingId": {
															"value": {
																"value": "@activity('Lookup Each Rating by Member Rating Id In Salesforce').output.firstRow.Id",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "copyJunctionBuildingRating",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingBuildingForJunctionInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c"
																}
															},
															{
																"source": {
																	"name": "sf_building_id",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Building__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "sf_buiding_rating",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "copyJunctionRatingContact",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingCustomerContactForJunctionInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c"
																}
															},
															{
																"source": {
																	"name": "sf_customercontact_id",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Contact__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_contact",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "copyHoursOfSerivce",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingHoursOfServiceToCreateInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"type": "String",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "TenancyName",
																	"type": "String",
																	"physicalType": "nvarchar"
																},
																"sink": {
																	"name": "Area_Tenancy_Name__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "ListedArea",
																	"type": "String",
																	"physicalType": "nvarchar"
																},
																"sink": {
																	"name": "Area__c",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "blocknumber",
																	"type": "String",
																	"physicalType": "nvarchar"
																},
																"sink": {
																	"name": "Area_Block_Number__c",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "is_centrally_serviced"
																},
																"sink": {
																	"name": "Area_Centrally_Serviced__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tenancy_servicing",
																	"physicalType": "nvarchar"
																},
																"sink": {
																	"name": "Area_Tenancy_Servicing_Checked__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "WeeksVacant",
																	"type": "String",
																	"physicalType": "nvarchar"
																},
																"sink": {
																	"name": "Area_Weeks_Vacant_During_Rating_Period__c",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "attribute_type"
																},
																"sink": {
																	"name": "Rating_Attribute_Type__c"
																}
															},
															{
																"source": {
																	"name": "Hours"
																},
																"sink": {
																	"name": "Hours_Per_Week__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_attribute",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "copyParkingSpace",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingParkingSpaceToCreateInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"type": "String",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "BlockDesc"
																},
																"sink": {
																	"name": "Parking_Spaces_Block_Description__c"
																}
															},
															{
																"source": {
																	"name": "ventilation_type"
																},
																"sink": {
																	"name": "Parking_Spaces_Ventilation_Type__c"
																}
															},
															{
																"source": {
																	"name": "NumberParkingSpaces"
																},
																"sink": {
																	"name": "Parking_Spaces_Total_Number__c"
																}
															},
															{
																"source": {
																	"name": "NumberOutOfSvcGT4Weeks"
																},
																"sink": {
																	"name": "Parking_Spaces_Unavailable_After_4_weeks__c"
																}
															},
															{
																"source": {
																	"name": "OutOfServiceWeeks"
																},
																"sink": {
																	"name": "Parking_Spaces_Number_Weeks_Unavailabe__c"
																}
															},
															{
																"source": {
																	"name": "attribute_type"
																},
																"sink": {
																	"name": "Rating_Attribute_Type__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_attribute",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "copyFoodCourt",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingFoodCourtToCreateInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"type": "String",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "NumberSeatsOutOfSvcGT4Weeks"
																},
																"sink": {
																	"name": "Food_Courts_Unavailable_After_4_weeks__c"
																}
															},
															{
																"source": {
																	"name": "OutOfServiceWeeks"
																},
																"sink": {
																	"name": "Food_Courts_Week_Unavailable__c"
																}
															},
															{
																"source": {
																	"name": "FoodCourtDesc"
																},
																"sink": {
																	"name": "Food_Courts_Description__c"
																}
															},
															{
																"source": {
																	"name": "NumberSeats"
																},
																"sink": {
																	"name": "Food_Courts_Total_Seats__c"
																}
															},
															{
																"source": {
																	"name": "attribute_type"
																},
																"sink": {
																	"name": "Rating_Attribute_Type__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_attribute",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "copyCinemas",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingCinemaToCreateInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"type": "String",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "NumberOutOfSvcGT4Weeks"
																},
																"sink": {
																	"name": "Number_of_theatrettes_unavailable__c"
																}
															},
															{
																"source": {
																	"name": "OutOfServiceWeeks"
																},
																"sink": {
																	"name": "Cinema_Weeks_unavailable__c"
																}
															},
															{
																"source": {
																	"name": "CinemaDesc"
																},
																"sink": {
																	"name": "Cinema_Description__c"
																}
															},
															{
																"source": {
																	"name": "NumberTheatrettes"
																},
																"sink": {
																	"name": "Number_of_theatrettes_in_cinema__c"
																}
															},
															{
																"source": {
																	"name": "attribute_type"
																},
																"sink": {
																	"name": "Rating_Attribute_Type__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_attribute",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											},
											{
												"name": "copyGymnasiums",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingGymnasiumToCreateInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"type": "String",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "is_centrally_serviced"
																},
																"sink": {
																	"name": "Gym_Centrally_Serviced__c"
																}
															},
															{
																"source": {
																	"name": "OutOfServiceWeeks"
																},
																"sink": {
																	"name": "Weeks_Gym_Out_Of_Service__c"
																}
															},
															{
																"source": {
																	"name": "GymDesc"
																},
																"sink": {
																	"name": "Gym_Description__c"
																}
															},
															{
																"source": {
																	"name": "ConfirmedArea"
																},
																"sink": {
																	"name": "Verified_GLAR__c"
																}
															},
															{
																"source": {
																	"name": "attribute_type"
																},
																"sink": {
																	"name": "Rating_Attribute_Type__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_attribute",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "Array"
					},
					"_vnewBuildingInSF": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/04 Consumption')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "copyMeterData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "usp_GetRatingsMeterToCreateInSalesforce",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pBatch_Id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sf_rating_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rating__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "unique_meter_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NO_DS_Meter_ID__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supplier",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier_1_Name__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier_1_Account_Number__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Nmi",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "NMI__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Coverage",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description_of_Coverage__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Start12MonthBillPeriod",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Billing_Start_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "End12MonthBillPeriod",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Billing_End_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "MeterType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Meter_Type__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "utility"
										},
										"sink": {
											"name": "Utility__c"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "db_transformed_ratings",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sf_meters",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "copyConsumptionData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "forEachRow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingsConsumptionToCreateInSalesforce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pBatch_Id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sf_rating_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rating__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sf_meter_device_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Metering_Device__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StartBilledPeriod",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Meter_Reading_Start_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "EndBilledPeriod",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Meter_Reading_End_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "IsMissingEstimated",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Billing_Missing_or_Estimated__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Consumption",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Consumption__c",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "PercentRecycled",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Percentage_of_Green_Power__c"
										}
									},
									{
										"source": {
											"name": "PercentRecycled_Water"
										},
										"sink": {
											"name": "Percentage_of_Recycled_Water__c"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "db_transformed_ratings",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sf_consumption",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "getMeterIds",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingsMeterToCreateInSalesforce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pBatch_Id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_energy_meter",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "getMeterIds",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "copyMeterData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('getMeterIds').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Rating by Member Rating Id In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from NO_Metering_Device__c\nwhere  NO_DS_Meter_ID__c = '@{item().unique_meter_id}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_meters",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "if Metering Device was created successfully",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup Each Rating by Member Rating Id In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(string(activity('Lookup Each Rating by Member Rating Id In Salesforce').output), 'firstRow')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Insert Anomaly",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertDataSyncAnomalies]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"process_name": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"anomaly_desc": {
															"value": {
																"value": "No Metering device found for this Rating header Id.",
																"type": "Expression"
															},
															"type": "String"
														},
														"anomaly_type": {
															"value": "Error",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "UpdateNewSalesforceIdForMeteringDevice",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[usp_UpdateNewSalesforceIdForMeterDevice]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"unique_meter_id": {
															"value": {
																"value": "@item().unique_meter_id",
																"type": "Expression"
															},
															"type": "String"
														},
														"sf_meter_device_Id": {
															"value": {
																"value": "@activity('Lookup Each Rating by Member Rating Id In Salesforce').output.firstRow.Id",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "copyConsumptionData_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "forEachRow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[usp_GetRatingsConsumptionExclusionToCreateInSalesforce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pBatch_Id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sf_rating_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rating__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sf_meter_device_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Metering_Device__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Coverage",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Description_of_Coverage__c"
										}
									},
									{
										"source": {
											"name": "MeterID",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Meter_Id__c"
										}
									},
									{
										"source": {
											"name": "UsesCurrentTransformer",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Current_Transformer__c"
										}
									},
									{
										"source": {
											"name": "CTFactor",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "CT_Factor__c"
										}
									},
									{
										"source": {
											"name": "InfoSource"
										},
										"sink": {
											"name": "Information_Source__c"
										}
									},
									{
										"source": {
											"name": "FrequencyReading"
										},
										"sink": {
											"name": "Frequency_of_readings__c"
										}
									},
									{
										"source": {
											"name": "FirstReadingDate"
										},
										"sink": {
											"name": "Meter_Reading_Start_Date__c"
										}
									},
									{
										"source": {
											"name": "FirstReadingValue"
										},
										"sink": {
											"name": "First_Meter_Read__c"
										}
									},
									{
										"source": {
											"name": "LastReadingDate"
										},
										"sink": {
											"name": "Meter_Reading_End_Date__c"
										}
									},
									{
										"source": {
											"name": "LastReadingValue"
										},
										"sink": {
											"name": "Last_Meter_Read__c"
										}
									},
									{
										"source": {
											"name": "AnnualHeatingValue"
										},
										"sink": {
											"name": "Annual_Heating_Value__c"
										}
									},
									{
										"source": {
											"name": "PressureCorrectionFactor"
										},
										"sink": {
											"name": "Pressure_Correction_Factor__c"
										}
									},
									{
										"source": {
											"name": "ValidationDate"
										},
										"sink": {
											"name": "Date_Of_Meter_Validation__c"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "db_transformed_ratings",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sf_consumption",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"pBatch_Id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/00 Start Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "usp_StartBatch",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_StartBatch]",
								"storedProcedureParameters": {
									"process_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Batch Id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_StartBatch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "vbatch_id",
							"value": {
								"value": "@string(activity('usp_StartBatch').output.firstRow.NewBatchId)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "01 Pull From Staging",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Batch Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01 Pull Members Data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@activity('usp_StartBatch').output.firstRow.NewBatchId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "02 Transform Ratings",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01a Create Building",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "01d Create Assessors",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "01c Create Customer Contact",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "01a Transform Hours of Service",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Try Consumption",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02 Transform Ratings",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01a Create Building",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01a Create Building In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "03 Create Ratings",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "02 Transform Ratings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03 Create Ratings",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "03a Junction Building Rating",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "03 Create Ratings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03a Junction Building Rating",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01d Create Assessors",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01c Transform Company Assessor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01d Create Assessors In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01b Create Company",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01a Transform Country in master entities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01b Create Assessors Company In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01c Transform Company Assessor",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01b Create Company",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01c Transform Company Assessors",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01a Transform Country in master entities",
						"description": "Placeholder for missing mailing and billing country",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01b Transform Country in master entities",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01b Create Customers",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01a Transform Country in master entities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01b Create Customer In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01c Create Customer Contact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01b Create Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01c Create Customer Contact In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01a Transform Hours of Service",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01a Transform Rating Attributes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data Consumption",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.usp_FormulateConsumption",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@variables('vbatch_id')",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Try Consumption",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_FormulateConsumption]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@variables('vbatch_id')",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"vbatch_id": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/02 Transform Ratings')]",
				"[concat(variables('factoryId'), '/pipelines/03 Create Ratings')]",
				"[concat(variables('factoryId'), '/pipelines/03a Junction Building Rating')]",
				"[concat(variables('factoryId'), '/pipelines/01d Create Assessors In Salesforce')]",
				"[concat(variables('factoryId'), '/pipelines/01b Create Assessors Company In Salesforce')]",
				"[concat(variables('factoryId'), '/pipelines/01c Transform Company Assessors')]",
				"[concat(variables('factoryId'), '/pipelines/01b Transform Country in master entities')]",
				"[concat(variables('factoryId'), '/pipelines/01b Create Customer In Salesforce')]",
				"[concat(variables('factoryId'), '/pipelines/01c Create Customer Contact In Salesforce')]",
				"[concat(variables('factoryId'), '/pipelines/01a Transform Rating Attributes')]"
			]
		}
	]
}