{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nabers-data-sync"
		},
		"NABERS_PROD_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'NABERS_PROD'"
		},
		"NABERS_TEST_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'NABERS_TEST'"
		},
		"NabersOnline_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'NabersOnline'"
		},
		"NabersOnline_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'NabersOnline'"
		},
		"NabersOnline_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://nabers--datamigdev.my.salesforce.com"
		},
		"NabersOnline_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "jag.chichria@nabers.gov.au.datamigdev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/db_stage_parking_space')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatingHeaderID",
						"type": "nvarchar"
					},
					{
						"name": "BlockID",
						"type": "nvarchar"
					},
					{
						"name": "BlockDesc",
						"type": "nvarchar"
					},
					{
						"name": "VentilationType",
						"type": "nvarchar"
					},
					{
						"name": "NumberParkingSpaces",
						"type": "nvarchar"
					},
					{
						"name": "NumberOutOfSvcGT4Weeks",
						"type": "nvarchar"
					},
					{
						"name": "OutOfServiceWeeks",
						"type": "nvarchar"
					},
					{
						"name": "SpacesNatural",
						"type": "nvarchar"
					},
					{
						"name": "SpacesMechanical",
						"type": "nvarchar"
					},
					{
						"name": "batch_id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ParkingSpaceStage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_target_rating_rowversions_stage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RowTimestamp",
						"type": "nvarchar"
					},
					{
						"name": "RatingHeaderID",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "new_rowtimestamp",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RatingHeaderRowVersionsStage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_transformed_attribute_type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "attribute_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "attribute_desc",
						"type": "varchar"
					},
					{
						"name": "attribute_type",
						"type": "varchar"
					},
					{
						"name": "member_rating_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "is_centrally_serviced",
						"type": "varchar"
					},
					{
						"name": "tenancy_servicing",
						"type": "varchar"
					},
					{
						"name": "ventilation_type",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transformed_AttributeType"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_transformed_ratings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "building_type",
						"type": "varchar"
					},
					{
						"name": "source_rating_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sf_company_id",
						"type": "varchar"
					},
					{
						"name": "sf_building_id",
						"type": "varchar"
					},
					{
						"name": "sf_rating_id",
						"type": "varchar"
					},
					{
						"name": "sf_assessor_id",
						"type": "varchar"
					},
					{
						"name": "sf_customer_id",
						"type": "varchar"
					},
					{
						"name": "assessor_email",
						"type": "varchar"
					},
					{
						"name": "customer_email",
						"type": "varchar"
					},
					{
						"name": "cert_building_name",
						"type": "varchar"
					},
					{
						"name": "cert_customer_name",
						"type": "varchar"
					},
					{
						"name": "rating_type",
						"type": "varchar"
					},
					{
						"name": "rating_main_purpose",
						"type": "varchar"
					},
					{
						"name": "has_cinema",
						"type": "bit"
					},
					{
						"name": "period_from",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "period_to",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "cert_valid_from",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "cert_valid_to",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rating_ref_number",
						"type": "varchar"
					},
					{
						"name": "lodged_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rating_scope",
						"type": "varchar"
					},
					{
						"name": "publicly_listed",
						"type": "bit"
					},
					{
						"name": "sf_officer_id",
						"type": "varchar"
					},
					{
						"name": "last_update_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "renew_replace",
						"type": "varchar"
					},
					{
						"name": "sync_status",
						"type": "varchar"
					},
					{
						"name": "review_summary_page",
						"type": "varchar"
					},
					{
						"name": "using_latest_rules",
						"type": "varchar"
					},
					{
						"name": "rating_information_page",
						"type": "varchar"
					},
					{
						"name": "lodge_rating_page",
						"type": "varchar"
					},
					{
						"name": "rating_details_page",
						"type": "varchar"
					},
					{
						"name": "parking_space_page",
						"type": "varchar"
					},
					{
						"name": "water_page",
						"type": "varchar"
					},
					{
						"name": "has_parking_space",
						"type": "varchar"
					},
					{
						"name": "has_gym",
						"type": "varchar"
					},
					{
						"name": "has_food_court",
						"type": "varchar"
					},
					{
						"name": "conflict_of_interest",
						"type": "varchar"
					},
					{
						"name": "compliant_with_current_rules",
						"type": "varchar"
					},
					{
						"name": "relodged_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rating_data_complete",
						"type": "varchar"
					},
					{
						"name": "assessor_declaration",
						"type": "varchar"
					},
					{
						"name": "customer_aware_of_star_rating",
						"type": "varchar"
					},
					{
						"name": "water_star_rating_with_recycle",
						"type": "varchar"
					},
					{
						"name": "water_star_rating_without_recycle",
						"type": "varchar"
					},
					{
						"name": "energy_star_rating_with_recycle",
						"type": "varchar"
					},
					{
						"name": "energy_star_rating_without_recycle",
						"type": "varchar"
					},
					{
						"name": "total_energy_consumption",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "weekly_core_hours_of_Service",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "total_electricity_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "total_diesel_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "water_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "recycle_normalised_water_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "total_water_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "total_recycled_water_percent",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "total_gas_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "rating_lodgement_fees",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "predicted_greenhouse_gas_intensity",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "predicted_average_water_use",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "number_of_trading_days",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_recycle_predicted_average_water_use",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_greenpower_ghg_intensity_scope_12",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_greenpower_ghg_intensity_scope_123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_greenpower_ghg_emissions_scope_12",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_greenpower_ghg_emissions_scope_123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "greenhouse_gas_intensity_scope_123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "greenhouse_gas_emissions_scope_123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "energy_intensity",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "explain_why_not_compliant",
						"type": "varchar"
					},
					{
						"name": "is_small_shopping_centre",
						"type": "varchar"
					},
					{
						"name": "using_latest_rules_water",
						"type": "varchar"
					},
					{
						"name": "using_latest_rules_energy",
						"type": "varchar"
					},
					{
						"name": "single_or_multi_storey",
						"type": "varchar"
					},
					{
						"name": "shopping_centre_size",
						"type": "varchar"
					},
					{
						"name": "sf_owner_id",
						"type": "nchar"
					},
					{
						"name": "hour_of_service_core_hours",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "has_extended_hours",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transformed_Ratings"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NABERS_PROD')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('NABERS_PROD_connectionString')]"
				},
				"connectVia": {
					"referenceName": "DPIE-Shared-SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NABERS_TEST')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('NABERS_TEST_connectionString')]"
				},
				"connectVia": {
					"referenceName": "DPIE-Shared-SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NabersOnline')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection to NABERS Online",
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('NabersOnline_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('NabersOnline_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('NabersOnline_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('NabersOnline_securityToken')]"
					},
					"apiVersion": "48.0"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/00 Populate Staging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copyRatings",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select distinct\n\trh.RatingHeaderID,\n\tRatingReferenceNumber,\n\trh.PremiseTypeID,\n\tpremiseType.ClassName as PremiseType,\n\trh.PremiseID,\n\tpremise.PremiseName as PremiseName,\n\tAssessorID,\n\trc.email as AssessorEmail,\n\tcustomer.RegisteredName as Customer_Name, \n\tcustomer.TradingName as Customer_TradingName,\n\tcmaddr.[StreetNumber] as [Customer_Mailing_StreetNumber],\n    cmaddr.[StreetName]  as [Customer_Mailing_StreetName],\n    cmaddr.[Suburb] as [Customer_Mailing_Suburb],\n    cmaddr.[Postcode] as [Customer_Mailing_Postcode],\n\tcmst.ClassName as [Customer_Mailing_State],\n\tcustomer.ABN as [Customer_ABN],\n\tcustomer.customerid as [customer_id],\n\tcorg.ClassName as [Customer_Organisation],\n\tcustomer.SAPNumber as Customer_SAP_Number,\n\n\tRatingPeriodFrom,\n\tRatingPeriodTo,\n\tPublicListingFlag,\n\tOfficerID,\n\tRatingStatusID,\n\trs.ClassName as RatingStatus,\n\tLodgedDate,\n\tPaymentStatusID,\n\tps.ClassName as PaymentStatus,\n\tPaidDate,\n\t--Certificate\n\tCertificateValidFrom,\n\tCertificateValidTo,\n\n\tPremisesName as PremiseNameOnCert,\n\tCustomerName as CustomerNameOnCert,\n\n\trh.DeliveryEmail  as Certificate_Customer_Email,\n\n\tLastActionDate, \n\n\tReplaceFlag,\n\tRenewFlag,\n\tPreviousRatingHeaderID,\n\tNewRatingHeaderID,\n\taddr.[StreetNumber],\n    addr.[StreetName],\n    addr.[Suburb],\n    addr.[Postcode],\n\tst.ClassName as [State],\n\t(select  stuff(list,1,1,'')\n\t\tfrom  (( Select ';' + cast(crt.ClassName as varchar(16)) FROM tblRatingType rt \n\t\t\t\t\tINNER JOIN tblClassification crt on crt.ClassificationID = rt.RatingType\n\t\t\t\t\tand rt.RatingHeaderID = rh.RatingHeaderID\n\t\t\t\t\tfor     xml path(''))) as Sub(list)) as RatingTypes\n\n\n\n\t, scs.CinemaTheatres \n\t, scws.ShoppingCentreWaterSummaryID \n\t, scs.FloorConfiguration\n\t, scs.ParkingSpacesMechanical\n\t, scs.ParkingSpacesNatural \n\t, scs.TotalGymGLAR \n\t, scs.FoodCourtSeats \n\t, rad.conflictOfInterestFlag \n\t, rad.InComplianceWithCurrentRules \n\t, (Select top 1 wsrcl.classname from tblRatingType wsr left join tblClassification wsrcl on wsrcl.ClassificationID = wsr.StarRatingWithGreenPowerID and wsr.RatingHeaderID = rh.RatingHeaderID and wsr.RatingType = 57) as WaterStarRatingWRecycle\n\t, (Select top 1 wsrcl.classname from tblRatingType wsr left join tblClassification wsrcl on wsrcl.ClassificationID = wsr.StarRatingWithoutGreenPowerID and wsr.RatingHeaderID = rh.RatingHeaderID and wsr.RatingType = 57) as WaterStarRatingWoRecycle\n\t, (Select top 1 wsrcl.classname from tblRatingType wsr left join tblClassification wsrcl on wsrcl.ClassificationID = wsr.StarRatingWithGreenPowerID and wsr.RatingHeaderID = rh.RatingHeaderID and wsr.RatingType = 56) as EnergyStarRatingWRecycle\n\t, (Select top 1 wsrcl.classname from tblRatingType wsr left join tblClassification wsrcl on wsrcl.ClassificationID = wsr.StarRatingWithoutGreenPowerID and wsr.RatingHeaderID = rh.RatingHeaderID and wsr.RatingType = 56) as EnergyStarRatingWoRecycle\n\t, isnull(sces.TotalElectricityUse * 3.6, 0) + isnull(sces.TotalGasUse, 0) + isnull(sces.TotalLPGUse * 25.7, 0) + isnull(sces.TotalOilUse * 38.6, 0) + isnull(sces.TotalCoalUse * 22.1, 0) as totalEnergyConsumption\n\t, scs.HoursOfService as WeeklyCoreHoursOfService \n\t, sces.TotalElectricityUse as TotalElectricityConsumption\n\t, sces.TotalOilUse as TotalDieselConsumption\n\t, scws.WaterConsumptionWoRW as WaterConsumption\n\t, scws.WaterUsePerSqmWoRW as RecycleNormalisedWaterConsumption\n\t, scws.WaterConsumptionWoRW as TotalWaterConsumption\n\t, scws.RecycledWaterPercent as TotalRecycledWaterPercent\n\t, sces.TotalGasUse as TotalGasConsumption\n\t, (select top 1 Amount from tblFinancialTransaction ft inner join tblRatingPayment rp on ft.RatingPaymentID = rp.RatingPaymentID\n\t\t\tand rp.RatingHeaderID = rh.RatingHeaderId\n\t\t\twhere FeeCategoryID = 244 -- Loedgement\n\t\t\t) as RatingLodgementFees\n\t, sces.PredictedGHGEmissionsPerSqm as PredictedGreenhouseGasIntensity\n\t, scws.PredictedWaterUsePerGLAR as PredictedAverageWaterUse\n\t, scs.TradingDays as NumberOfTradingDays\n\t, scws.PredictedWaterUsePerGLARWoRW as NoRecyclePredictedAverageWaterUse\n\t, sces.GHGEmissionsPerSqmGLARScope12WoGP as NoGreenPower_GHG_IntensityScope_12\n\t, sces.GHGEmissionsPerSqmGLARScope123WoGP as NoGreenPowerGHGIntensityScope123\n\t, sces.GHGEmissionsScope12WoGP as NoGreenPowerGHGEmissionsScope12\n\t, sces.GHGEmissionsScope123WoGP  as NoGreenPowerGHGEmissionsScope123\n\t, sces.GHGEmissionsPerSqmGLARScope123 as GreenhouseGasIntensityScope123\n\t, sces.GHGEmissionsScope123  as GreenhouseGasEmissionsScope123\n\t, sces.EnergyIntensity\n\t, rad.ComplianceExplanation as ExplainWhyNotCompliant \n\t, scs.IsSmallShoppingCentre\n\t, @{pipeline().parameters.pBatchId} as batch_id\n\t\nfrom tblRatingHeader rh\nleft join tblPremise premise on premise.PremiseID = rh.PremiseID\nleft join tblClassification premiseType on premiseType.ClassificationID = rh.PremiseTypeID\nleft join tblClassification rs on rs.ClassificationID = rh.RatingStatusID\nleft join tblClassification ps on ps.ClassificationID = rh.PaymentStatusID\nleft join tblAdministrator ad on ad.AdministratorID = rh.OfficerID\nleft join tblUser aduser on aduser.UserID = ad.UserID\nleft join tblCustomer customer on customer.CustomerID = rh.CustomerID\nleft join tblRatingContractor rc on rc.RatingContractorID = rh.AssessorID\nleft join tblUser rcuser on rcuser.UserID = rc.UserID\nleft join tblAddress addr on addr.AddressId = premise.PremiseAddressId\nleft join tblClassification st on st.ClassificationID = addr.StateId\nleft join tblAddress cmaddr on cmaddr.AddressId = customer.MailingAddressID\nleft join tblClassification cmst on cmst.ClassificationID = cmaddr.StateId\n\nleft join tblShoppingCentreSummary scs on scs.RatingHeaderID = rh.RatingHeaderID\nleft join tblShoppingCentreEnergySummary sces on sces.RatingHeaderID = rh.RatingHeaderID\nleft join tblShoppingCentreWaterSummary scws on scws.RatingHeaderID = rh.RatingHeaderID\n\nleft join tblAssessorDeclaration rad on rad.RatingHeaderID = rh.RatingHeaderID\n\nleft join tblClassification corg on corg.ClassificationID = customer.OrganisationTypeID\n\nWhere rh.PremiseTypeID = 55\nand RatingStatusID in (157,158)\t\t\t\nand RatingHeaderID in (@{pipeline().parameters.pDeltaRatingHeaderIds})\norder by RatingHeaderID",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "db_source_rating_rowversions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "cn_db_rating_stage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"pBatchId": {
						"type": "string",
						"defaultValue": "1"
					},
					"pDeltaRatingHeaderIds": {
						"type": "string"
					}
				},
				"variables": {
					"deltaRowHeaderIds": {
						"type": "String"
					},
					"newBatchId": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_Buildings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Building__c"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_Ratings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Rating__c"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_buiding_rating')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Building_Rating_Relationship__c"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_company')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "Account"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_consumption')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Consumption__c"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_contacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "Contact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_customercontact')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "AccountContactRelation"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_meters')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Metering_Device__c"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_rating_attribute')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Rating_Attribute__c"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_rating_contact')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Rating_Contact__c"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "User"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/NabersOnline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_Transform_Billing_Consumption_Data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "db_meter_bills_table",
								"type": "DatasetReference"
							},
							"name": "getLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "db_bills_table",
								"type": "DatasetReference"
							},
							"name": "InsertIntoTransformed"
						}
					],
					"transformations": [
						{
							"name": "filterByBatch"
						},
						{
							"name": "transformedColumns"
						}
					],
					"script": "parameters{\n\tpbatch_id as integer (1)\n}\nsource(output(\n\t\tid as integer,\n\t\tSequenceNo as string,\n\t\tStartBilledPeriod as timestamp,\n\t\tEndBilledPeriod as timestamp,\n\t\tIsMissingEstimated as string,\n\t\tConsumption as decimal(12,3),\n\t\tDaysIn12MonthPeriod as integer,\n\t\tPercentRecycled as decimal(12,3),\n\t\tConsumptionIn12MonthPeriod as decimal(12,3),\n\t\tGasHeatingValue as decimal(12,3),\n\t\tunique_meter_id as string,\n\t\tbatch_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookup\ngetLookup filter(equals(batch_id, $pbatch_id)) ~> filterByBatch\nfilterByBatch derive(D_IsMissingEstimated = iif(instr(lower(IsMissingEstimated), 'yes') > 0, 'Yes', 'No')) ~> transformedColumns\ntransformedColumns sink(input(\n\t\tid as integer,\n\t\tbillstable_id as integer,\n\t\tmissing_or_estimated as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tbillstable_id = id,\n\t\tmissing_or_estimated = D_IsMissingEstimated\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> InsertIntoTransformed"
				}
			},
			"dependsOn": []
		}
	]
}