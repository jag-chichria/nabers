{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nabers-data-sync"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/00 Start Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "usp_StartBatch",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_StartBatch]",
								"storedProcedureParameters": {
									"process_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Batch Id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_StartBatch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "vbatch_id",
							"value": {
								"value": "@string(activity('usp_StartBatch').output.firstRow.NewBatchId)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "01 Pull From Staging",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Batch Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01 Pull Members Data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@activity('usp_StartBatch').output.firstRow.NewBatchId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "02 Transform Ratings",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01a Create Building",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "01d Create Assessors",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "01c Create Customer Contact",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "01a Transform Hours of Service",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Try Consumption",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02 Transform Ratings",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01a Create Building",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01a Create Building In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "03 Create Ratings",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "02 Transform Ratings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03 Create Ratings",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "03a Junction Building Rating",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "03 Create Ratings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03a Junction Building Rating",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01d Create Assessors",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01c Transform Company Assessor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01d Create Assessors In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01b Create Company",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01a Transform Country in master entities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01b Create Assessors Company In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01c Transform Company Assessor",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01b Create Company",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01c Transform Company Assessors",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01a Transform Country in master entities",
						"description": "Placeholder for missing mailing and billing country",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01b Transform Country in master entities",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01b Create Customers",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01a Transform Country in master entities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01b Create Customer In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01c Create Customer Contact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01b Create Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01c Create Customer Contact In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01a Transform Hours of Service",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01a Transform Rating Attributes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data Consumption",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "dbo.usp_FormulateConsumption",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@variables('vbatch_id')",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Try Consumption",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_FormulateConsumption]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@variables('vbatch_id')",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"vbatch_id": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/04 Consumption')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "copyMeterData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "usp_GetRatingsMeterToCreateInSalesforce",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pBatch_Id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sf_rating_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rating__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "unique_meter_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NO_DS_Meter_ID__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supplier",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier_1_Name__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier_1_Account_Number__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Nmi",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "NMI__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Coverage",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Description_of_Coverage__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Start12MonthBillPeriod",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Billing_Start_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "End12MonthBillPeriod",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Billing_End_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "MeterType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Meter_Type__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "utility"
										},
										"sink": {
											"name": "Utility__c"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "db_transformed_ratings",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "sf_meters",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "copyConsumptionData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "forEachRow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingsConsumptionToCreateInSalesforce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pBatch_Id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sf_rating_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rating__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sf_meter_device_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Metering_Device__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StartBilledPeriod",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Meter_Reading_Start_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "EndBilledPeriod",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Meter_Reading_End_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "IsMissingEstimated",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Billing_Missing_or_Estimated__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Consumption",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Consumption__c",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "PercentRecycled",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Percentage_of_Green_Power__c",
											"type": "Decimal"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "db_transformed_ratings",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "sf_consumption",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "getMeterIds",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingsMeterToCreateInSalesforce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pBatch_Id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_energy_meter",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "getMeterIds",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "copyMeterData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('getMeterIds').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Rating by Member Rating Id In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from NO_Metering_Device__c\nwhere  NO_DS_Meter_ID__c = '@{item().unique_meter_id}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_meters",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "if Metering Device was created successfully",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup Each Rating by Member Rating Id In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(string(activity('Lookup Each Rating by Member Rating Id In Salesforce').output), 'firstRow')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Insert Anomaly",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertDataSyncAnomalies]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"process_name": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"anomaly_desc": {
															"value": {
																"value": "No Metering device found for this Rating header Id.",
																"type": "Expression"
															},
															"type": "String"
														},
														"anomaly_type": {
															"value": "Error",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "UpdateNewSalesforceIdForMeteringDevice",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[usp_UpdateNewSalesforceIdForMeterDevice]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"unique_meter_id": {
															"value": {
																"value": "@item().unique_meter_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"sf_meter_device_Id": {
															"value": {
																"value": "@activity('Lookup Each Rating by Member Rating Id In Salesforce').output.firstRow.Id",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "copyConsumptionData_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "forEachRow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[usp_GetRatingsConsumptionExclusionToCreateInSalesforce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pBatch_Id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sf_rating_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rating__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sf_meter_device_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Metering_Device__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Coverage",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Description_of_Coverage__c"
										}
									},
									{
										"source": {
											"name": "MeterID",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "Meter_Id__c"
										}
									},
									{
										"source": {
											"name": "UsesCurrentTransformer",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Current_Transformer__c"
										}
									},
									{
										"source": {
											"name": "Consumption",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "Consumption__c",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "CTFactor",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "CT_Factor__c"
										}
									},
									{
										"source": {
											"name": "InfoSource"
										},
										"sink": {
											"name": "Information_Source__c"
										}
									},
									{
										"source": {
											"name": "FrequencyReading"
										},
										"sink": {
											"name": "Frequency_of_readings__c"
										}
									},
									{
										"source": {
											"name": "FirstReadingDate"
										},
										"sink": {
											"name": "Meter_Reading_Start_Date__c"
										}
									},
									{
										"source": {
											"name": "FirstReadingValue"
										},
										"sink": {
											"name": "First_Meter_Read__c"
										}
									},
									{
										"source": {
											"name": "LastReadingDate"
										},
										"sink": {
											"name": "Meter_Reading_End_Date__c"
										}
									},
									{
										"source": {
											"name": "LastReadingValue"
										},
										"sink": {
											"name": "Last_Meter_Read__c"
										}
									},
									{
										"source": {
											"name": "AnnualHeatingValue"
										},
										"sink": {
											"name": "Annual_Heating_Value__c"
										}
									},
									{
										"source": {
											"name": "PressureCorrectionFactor"
										},
										"sink": {
											"name": "Pressure_Correction_Factor__c"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "db_transformed_ratings",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "sf_consumption",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"pBatch_Id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sf_meters')]",
				"[concat(variables('factoryId'), '/datasets/sf_consumption')]",
				"[concat(variables('factoryId'), '/datasets/db_energy_meter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_bills_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "billstable_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "missing_or_estimated",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transformed_BillsTable"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_energy_meter')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "unique_meter_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UniqueAccountID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Supplier",
						"type": "nvarchar"
					},
					{
						"name": "AccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "Nmi",
						"type": "nvarchar"
					},
					{
						"name": "Coverage",
						"type": "nvarchar"
					},
					{
						"name": "Start12MonthBillPeriod",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "End12MonthBillPeriod",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "MeterType",
						"type": "nvarchar"
					},
					{
						"name": "BillsTable",
						"type": "xml"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sf_meter_device_id",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EnergyUtilityMeterStage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_meter_bills_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StartBilledPeriod",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndBilledPeriod",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "IsMissingEstimated",
						"type": "varchar"
					},
					{
						"name": "Consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "DaysIn12MonthPeriod",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PercentRecycled",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "ConsumptionIn12MonthPeriod",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "unique_meter_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EnergyBillsTableStage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_consumption')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Consumption__c"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_meters')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "salesforce"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Metering_Device__c"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_Transform_Billing_Consumption_Data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "db_meter_bills_table",
								"type": "DatasetReference"
							},
							"name": "getLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "db_bills_table",
								"type": "DatasetReference"
							},
							"name": "InsertIntoTransformed"
						}
					],
					"transformations": [
						{
							"name": "filterByBatch"
						},
						{
							"name": "transformedColumns"
						}
					],
					"script": "parameters{\n\tpbatch_id as integer (1)\n}\nsource(output(\n\t\tid as integer,\n\t\tStartBilledPeriod as timestamp,\n\t\tEndBilledPeriod as timestamp,\n\t\tIsMissingEstimated as string,\n\t\tConsumption as decimal(12,3),\n\t\tDaysIn12MonthPeriod as integer,\n\t\tPercentRecycled as decimal(12,3),\n\t\tConsumptionIn12MonthPeriod as decimal(12,3),\n\t\tunique_meter_id as integer,\n\t\tbatch_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookup\ngetLookup filter(equals(batch_id, $pbatch_id)) ~> filterByBatch\nfilterByBatch derive(D_IsMissingEstimated = iif(instr(lower(IsMissingEstimated), 'yes') > 0, 'Yes', 'No')) ~> transformedColumns\ntransformedColumns sink(input(\n\t\tid as integer,\n\t\tbillstable_id as integer,\n\t\tmissing_or_estimated as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tbillstable_id = id,\n\t\tmissing_or_estimated = D_IsMissingEstimated\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> InsertIntoTransformed"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_meter_bills_table')]",
				"[concat(variables('factoryId'), '/datasets/db_bills_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_Transform_Country_In_Company')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "db_lookup_sf_company_ids",
								"type": "DatasetReference"
							},
							"name": "getLookupSFCompany"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "db_lookup_sf_company_ids",
								"type": "DatasetReference"
							},
							"name": "updateLookupSFCmpany"
						}
					],
					"transformations": [
						{
							"name": "alterByMailingBillingCountry"
						},
						{
							"name": "newColumns"
						},
						{
							"name": "filterByBatchCompany"
						}
					],
					"script": "parameters{\n\tpbatch_id as integer (1)\n}\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_company_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_company_id as integer,\n\t\tMailing_Country as string,\n\t\tBilling_Country as string,\n\t\tsync_status as string,\n\t\taccount_type as string,\n\t\tsf_record_type as string,\n\t\tmailing_street as string,\n\t\tbilling_street as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookupSFCompany\nfilterByBatchCompany alterRow(updateIf(isNull(Mailing_Country)||isNull(Billing_Country))) ~> alterByMailingBillingCountry\nalterByMailingBillingCountry derive(DefaultMailingCountry = \"Australia\",\n\t\tDefaultBillingCountry = \"Australia\",\n\t\tid = id) ~> newColumns\ngetLookupSFCompany filter(equals(batch_id, $pbatch_id)) ~> filterByBatchCompany\nnewColumns sink(input(\n\t\tid as integer,\n\t\tsalesforce_company_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_company_id as integer,\n\t\tMailing_Country as string,\n\t\tBilling_Country as string,\n\t\tsync_status as string,\n\t\taccount_type as string,\n\t\tsf_record_type as string,\n\t\tmailing_street as string,\n\t\tbilling_street as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['id'],\n\tformat: 'table',\n\tmapColumn(\n\t\tMailing_Country = DefaultMailingCountry,\n\t\tBilling_Country = DefaultBillingCountry,\n\t\tid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> updateLookupSFCmpany"
				}
			},
			"dependsOn": []
		}
	]
}