{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nabers-data-sync"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/00 Start Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "usp_StartBatch",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_StartBatch]",
								"storedProcedureParameters": {
									"process_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Batch Id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_StartBatch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "vbatch_id",
							"value": {
								"value": "@string(activity('usp_StartBatch').output.firstRow.NewBatchId)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "01 Pull From Staging",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Batch Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01 Pull Members Data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@activity('usp_StartBatch').output.firstRow.NewBatchId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01b Transform",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01a Create Building",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01b Transform Ratings",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01a Create Building",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01a Create Building In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "02 Create Ratings",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01b Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02 Create Ratings",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "03 Junction Building Rating",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "02 Create Ratings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03 Junction Building Rating",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"variables": {
					"vbatch_id": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/01 Pull Members Data')]",
				"[concat(variables('factoryId'), '/pipelines/01a Create Building In Salesforce')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01 Pull Members Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Variable Rating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('_vratings')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Building by Name In Salesforce",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Set variable _currentRatingItem",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from NO_Building__c \nwhere Postcode__c = '@{variables('_vcurrentRatingItem')[0].Postcode}'\nand State__c = '@{variables('_vcurrentRatingItem')[0].State}'\nand Suburb__c = '@{variables('_vcurrentRatingItem')[0].Suburb}'\nand Street_Number__c = '@{variables('_vcurrentRatingItem')[0].StreetNumber}'\nand Street_Name__c = '@{variables('_vcurrentRatingItem')[0].StreetName}'\nand Name = '@{variables('_vcurrentRatingItem')[0].PremiseName}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_Buildings",
											"type": "DatasetReference"
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "If Building In Salesforce Exist",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set Variable _sf_buildingRecord",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(length(variables('_vsf_buildingRecord')), 0)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "insertPremiseDetails",
												"description": "Building does not exist",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertLookupPremiseData]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_premise_id": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].PremiseID",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"name": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].PremiseName",
																"type": "Expression"
															},
															"type": "String"
														},
														"postcode": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].Postcode",
																"type": "Expression"
															},
															"type": "String"
														},
														"salesforcebuildingId": {
															"value": "",
															"type": "String"
														},
														"state": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].State",
																"type": "Expression"
															},
															"type": "String"
														},
														"streetname": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].StreetName",
																"type": "Expression"
															},
															"type": "String"
														},
														"streetnumber": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].StreetNumber",
																"type": "Expression"
															},
															"type": "String"
														},
														"suburb": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].Suburb",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "insertPremiseDetailsWithSalesForceId",
												"description": "Building does exist",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertLookupPremiseData]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_premise_id": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].PremiseID",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"name": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].PremiseName",
																"type": "Expression"
															},
															"type": "String"
														},
														"postcode": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].Postcode",
																"type": "Expression"
															},
															"type": "String"
														},
														"salesforcebuildingId": {
															"value": {
																"value": "@activity('Lookup Each Building by Name In Salesforce').Output.value[0].Id",
																"type": "Expression"
															},
															"type": "String"
														},
														"state": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].State",
																"type": "Expression"
															},
															"type": "String"
														},
														"streetname": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].StreetName",
																"type": "Expression"
															},
															"type": "String"
														},
														"streetnumber": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].StreetNumber",
																"type": "Expression"
															},
															"type": "String"
														},
														"suburb": {
															"value": {
																"value": "@variables('_vcurrentRatingItem')[0].Suburb",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "Set Variable _sf_buildingRecord",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Lookup Each Building by Name In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "_vsf_buildingRecord",
										"value": {
											"value": "@activity('Lookup Each Building by Name In Salesforce').output.value",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable _currentRatingItem",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "_vcurrentRatingItem",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup Each Assessor by Name In Salesforce",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Set variable _currentRatingItem",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from Contacts\nwhere email= '@{variables('_vcurrentRatingItem')[0].Assessor_Email}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_contacts",
											"type": "DatasetReference"
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Set Variable _sf_AssessorRecord",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Lookup Each Assessor by Name In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "_vsf_AssessorRecord",
										"value": {
											"value": "@activity('Lookup Each Assessor by Name In Salesforce').output.value",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Assessor In Salesforce Exist",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set Variable _sf_AssessorRecord",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(length(variables('_vsf_AssessorRecord')), 0)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "insertAssessorDetails",
												"description": "Building does not exist",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertLookupAssessorData]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_assessor_Id": {
															"value": {
																"value": "@activity('usp_GetRating').output.assessor_id",
																"type": "Expression"
															},
															"type": "String"
														},
														"salesforce_assessor_Id": {
															"value": {
																"value": "@activity('Lookup Each Assessor by Name In Salesforce').output.Id",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "insertAssessorDetailsWithSalesForceId",
												"description": "Building does exist",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertLookupAssessorData]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_assessor_Id": {
															"value": {
																"value": "@activity('usp_GetRating').output.assessor_id",
																"type": "Expression"
															},
															"type": "String"
														},
														"salesforce_assessor_Id": {
															"value": "",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "usp_GetRating",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRating]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Variable Rating",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_GetRating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_vratings",
							"value": [
								"@activity('usp_GetRating').output.value"
							]
						}
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "'In Progress'",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_vratings": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "Array"
					},
					"_vcurrentRatingItem": {
						"type": "Array"
					},
					"_vsf_AssessorRecord": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sf_contacts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01a Create Assessors In Salesforce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "createNotFoundAssessors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetAssessorToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirstName",
											"type": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String"
										},
										"sink": {
											"name": "Title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_StreetName",
											"type": "String"
										},
										"sink": {
											"name": "MailingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Suburb",
											"type": "String"
										},
										"sink": {
											"name": "MailingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Postcode",
											"type": "String"
										},
										"sink": {
											"name": "MailingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_State",
											"type": "String"
										},
										"sink": {
											"name": "MailingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_StreetName",
											"type": "String"
										},
										"sink": {
											"name": "OtherStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Suburb",
											"type": "String"
										},
										"sink": {
											"name": "OtherCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Postcode",
											"type": "String"
										},
										"sink": {
											"name": "OtherPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_State",
											"type": "String"
										},
										"sink": {
											"name": "OtherState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"name": "OtherPhone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JoinedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NO_Join_date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "AccreditationExpiryDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NO_Accreditation_Expiry_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "AccreditationNumber",
											"type": "String"
										},
										"sink": {
											"name": "NO_Accreditation_Number__c",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_lookup_assessors",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "sf_contacts",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetSalesforce",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "createNotFoundAssessors",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetAssessorToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Variable Rating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('_vnewBuildingsInSF')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Building by Name In Salesforce",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Set variable _vsf_buildingRecord",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from NO_Building__c \nwhere Email = '@{variables('_vnewBuildingInSF')[0].Email}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_contacts",
											"type": "DatasetReference"
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Set Variable _sf_buildingRecord",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Lookup Each Building by Name In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "_vsf_buildingRecord",
										"value": {
											"value": "@activity('Lookup Each Building by Name In Salesforce').output.value",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable _vsf_buildingRecord",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "_vnewBuildingInSF",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "UpdateNewSalesforceIdForBuilding",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Variable _sf_buildingRecord",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateNewSalesforceIdForAssessor]",
										"storedProcedureParameters": {
											"batch_id": {
												"value": {
													"value": "@pipeline().parameters.pbatch_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"member_assessor_id": {
												"value": {
													"value": "@variables('_vnewBuildingInSF')[0].member_assessor_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"salesforce_assessor_Id": {
												"value": {
													"value": "@variables('_vsf_buildingRecord').output.id",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "NABERSStaging",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Set Variable Rating",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_GetSalesforce",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_vnewBuildingsInSF",
							"value": {
								"value": "@activity('usp_GetSalesforce').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_defaultCountry": {
						"type": "String",
						"defaultValue": "Australia"
					},
					"_defaultPremiseType": {
						"type": "String",
						"defaultValue": "Shopping Centre"
					},
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "String"
					},
					"_vnewBuildingInSF": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_lookup_assessors')]",
				"[concat(variables('factoryId'), '/datasets/sf_contacts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01a Create Building In Salesforce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "createNotFoundBuilding",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetBuildingToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "postcode",
											"type": "String"
										},
										"sink": {
											"name": "Postcode__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "state",
											"type": "String"
										},
										"sink": {
											"name": "State__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "streetname",
											"type": "String"
										},
										"sink": {
											"name": "Street_Name__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "streetnumber",
											"type": "String"
										},
										"sink": {
											"name": "Street_Number__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "suburb",
											"type": "String"
										},
										"sink": {
											"name": "Suburb__c",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_lookup_sf_buildings_ids",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "sf_Buildings",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetSalesforce",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "createNotFoundBuilding",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetBuildingToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Variable Rating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('_vnewBuildingsInSF')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Building by Name In Salesforce",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Set variable _vsf_buildingRecord",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from NO_Building__c \nwhere Postcode__c = '@{variables('_vnewBuildingInSF')[0].Postcode}'\nand State__c = '@{variables('_vnewBuildingInSF')[0].State}'\nand Suburb__c = '@{variables('_vnewBuildingInSF')[0].Suburb}'\nand Street_Number__c = '@{variables('_vnewBuildingInSF')[0].StreetNumber}'\nand Street_Name__c = '@{variables('_vnewBuildingInSF')[0].StreetName}'\nand Name = '@{variables('_vnewBuildingInSF')[0].PremiseName}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_Buildings",
											"type": "DatasetReference"
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Set Variable _sf_buildingRecord",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Lookup Each Building by Name In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "_vsf_buildingRecord",
										"value": {
											"value": "@activity('Lookup Each Building by Name In Salesforce').output.value",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable _vsf_buildingRecord",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "_vnewBuildingInSF",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "UpdateNewSalesforceIdForBuilding",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Set Variable _sf_buildingRecord",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateNewSalesforceIdForBuilding]",
										"storedProcedureParameters": {
											"batch_id": {
												"value": {
													"value": "@pipeline().parameters.pbatch_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"member_premise_id": {
												"value": {
													"value": "@variables('_vnewBuildingInSF')[0].member_premise_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"salesforcebuildingId": {
												"value": {
													"value": "@variables('_vsf_buildingRecord').output.id",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "NABERSStaging",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Set Variable Rating",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_GetSalesforce",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_vnewBuildingsInSF",
							"value": {
								"value": "@activity('usp_GetSalesforce').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_defaultCountry": {
						"type": "String",
						"defaultValue": "Australia"
					},
					"_defaultPremiseType": {
						"type": "String",
						"defaultValue": "Shopping Centre"
					},
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "String"
					},
					"_vnewBuildingInSF": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_lookup_assessors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Assessor_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "User_Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "varchar"
					},
					{
						"name": "Mailing_StreetNumber",
						"type": "varchar"
					},
					{
						"name": "Mailing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Mailing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Mailing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Mailing_State",
						"type": "varchar"
					},
					{
						"name": "Billing_StreetNumber",
						"type": "varchar"
					},
					{
						"name": "Billing_StreetName",
						"type": "varchar"
					},
					{
						"name": "Billing_Suburb",
						"type": "varchar"
					},
					{
						"name": "Billing_Postcode",
						"type": "varchar"
					},
					{
						"name": "Billing_State",
						"type": "varchar"
					},
					{
						"name": "Phone",
						"type": "varchar"
					},
					{
						"name": "Email",
						"type": "varchar"
					},
					{
						"name": "JoinedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AccreditationDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AccreditationExpiryDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "AccreditationNumber",
						"type": "varchar"
					},
					{
						"name": "EnergyFlag",
						"type": "bit"
					},
					{
						"name": "WaterFlag",
						"type": "bit"
					},
					{
						"name": "WasteFlag",
						"type": "bit"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AssessorsStage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_contacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "Contact"
				}
			},
			"dependsOn": []
		}
	]
}