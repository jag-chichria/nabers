{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nabers-data-sync"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/02 Create Ratings')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "createRating",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetTransformedRatings]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "building_type",
											"type": "String"
										},
										"sink": {
											"name": "Building_Type__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "source_rating_id"
										},
										"sink": {
											"name": "NO_Member_Rating_Id__c"
										}
									},
									{
										"source": {
											"name": "assessor_email"
										},
										"sink": {
											"name": "Assessor_Email__c"
										}
									},
									{
										"source": {
											"name": "customer_email"
										},
										"sink": {
											"name": "Customer_Email__c"
										}
									},
									{
										"source": {
											"name": "cert_building_name"
										},
										"sink": {
											"name": "Building_Name_On_Certificate__c"
										}
									},
									{
										"source": {
											"name": "cert_customer_name"
										},
										"sink": {
											"name": "Customer_Name_On_Certificate__c"
										}
									},
									{
										"source": {
											"name": "cert_valid_from"
										},
										"sink": {
											"name": "Valid_From_Date__c"
										}
									},
									{
										"source": {
											"name": "cert_valid_to"
										},
										"sink": {
											"name": "Valid_To_Date__c"
										}
									},
									{
										"source": {
											"name": "status"
										},
										"sink": {
											"name": "Status__c"
										}
									},
									{
										"source": {
											"name": "period_from"
										},
										"sink": {
											"name": "Rating_Start_Date__c"
										}
									},
									{
										"source": {
											"name": "has_cinema"
										},
										"sink": {
											"name": "hasCinema__c"
										}
									},
									{
										"source": {
											"name": "rating_ref_number"
										},
										"sink": {
											"name": "NO_Member_Rating_Ref_Number__c"
										}
									},
									{
										"source": {
											"name": "lodged_date"
										},
										"sink": {
											"name": "Lodge_Date__c"
										}
									},
									{
										"source": {
											"name": "rating_main_purpose"
										},
										"sink": {
											"name": "Main_purpose_of_rating__c"
										}
									},
									{
										"source": {
											"name": "publicly_listed"
										},
										"sink": {
											"name": "Rating_Publicly_Listed__c"
										}
									},
									{
										"source": {
											"name": "rating_type"
										},
										"sink": {
											"name": "Rating_Type__c"
										}
									},
									{
										"source": {
											"name": "rating_scope"
										},
										"sink": {
											"name": "Rating_Scope__c"
										}
									},
									{
										"source": {
											"name": "sf_officer_id"
										},
										"sink": {
											"name": "Tech_Officer__c"
										}
									},
									{
										"source": {
											"name": "last_update_date"
										},
										"sink": {
											"name": "Last_Status_Update__c"
										}
									},
									{
										"source": {
											"name": "renew_replace"
										},
										"sink": {
											"name": "Renew_Replace__c"
										}
									},
									{
										"source": {
											"name": "review_summary_page"
										},
										"sink": {
											"name": "Review_summary_page__c"
										}
									},
									{
										"source": {
											"name": "rating_information_page"
										},
										"sink": {
											"name": "Rating_information_page__c"
										}
									},
									{
										"source": {
											"name": "lodge_rating_page"
										},
										"sink": {
											"name": "Lodge_rating_page__c"
										}
									},
									{
										"source": {
											"name": "rating_details_page"
										},
										"sink": {
											"name": "Rating_details_page__c"
										}
									},
									{
										"source": {
											"name": "parking_space_page"
										},
										"sink": {
											"name": "Parking_Spaces_Page__c"
										}
									},
									{
										"source": {
											"name": "water_page"
										},
										"sink": {
											"name": "Water_page__c"
										}
									},
									{
										"source": {
											"name": "has_parking_space"
										},
										"sink": {
											"name": "Has_Parking_Space__c"
										}
									},
									{
										"source": {
											"name": "has_gym"
										},
										"sink": {
											"name": "Has_Gym__c"
										}
									},
									{
										"source": {
											"name": "has_food_court"
										},
										"sink": {
											"name": "Has_Food_Court__c"
										}
									},
									{
										"source": {
											"name": "conflict_of_interest"
										},
										"sink": {
											"name": "Conflict_Of_Interest__c"
										}
									},
									{
										"source": {
											"name": "compliant_with_current_rules"
										},
										"sink": {
											"name": "Compliant_With_Rules__c"
										}
									},
									{
										"source": {
											"name": "relodged_date"
										},
										"sink": {
											"name": "Relodge_Date__c"
										}
									},
									{
										"source": {
											"name": "rating_data_complete"
										},
										"sink": {
											"name": "Rating_Data_Complete_Flag__c"
										}
									},
									{
										"source": {
											"name": "assessor_declaration"
										},
										"sink": {
											"name": "Assessor_Declaration__c"
										}
									},
									{
										"source": {
											"name": "customer_aware_of_star_rating"
										},
										"sink": {
											"name": "Customer_Aware_Of_Star_Rating__c"
										}
									},
									{
										"source": {
											"name": "water_star_rating_with_recycle"
										},
										"sink": {
											"name": "Water_Star_Rating_With_Recycled_Water__c"
										}
									},
									{
										"source": {
											"name": "water_star_rating_without_recycle"
										},
										"sink": {
											"name": "Water_Star_Rating_Without_Recycled_Water__c"
										}
									},
									{
										"source": {
											"name": "energy_star_rating_with_recycle"
										},
										"sink": {
											"name": "Energy_Star_Rating_With_Green_Power__c"
										}
									},
									{
										"source": {
											"name": "energy_star_rating_without_recycle"
										},
										"sink": {
											"name": "Energy_Star_Rating_Without_Green_Power__c"
										}
									},
									{
										"source": {
											"name": "total_energy_consumption"
										},
										"sink": {
											"name": "Total_Energy_Consumption__c"
										}
									},
									{
										"source": {
											"name": "weekly_core_hours_of_Service"
										},
										"sink": {
											"name": "Weekly_Core_Hours_Of_Service__c"
										}
									},
									{
										"source": {
											"name": "total_electricity_consumption"
										},
										"sink": {
											"name": "Total_Electricity_Consumption__c"
										}
									},
									{
										"source": {
											"name": "total_diesel_consumption"
										},
										"sink": {
											"name": "Total_Diesel_Consumption__c"
										}
									},
									{
										"source": {
											"name": "recycle_normalised_water_consumption"
										},
										"sink": {
											"name": "Recycle_Normalised_Water_Consumption__c"
										}
									},
									{
										"source": {
											"name": "total_water_consumption"
										},
										"sink": {
											"name": "Total_Water_Consumption__c"
										}
									},
									{
										"source": {
											"name": "total_recycled_water_percent"
										},
										"sink": {
											"name": "Total_Recycled_Water_Percent__c"
										}
									},
									{
										"source": {
											"name": "total_gas_consumption"
										},
										"sink": {
											"name": "Total_Gas_Consumption__c"
										}
									},
									{
										"source": {
											"name": "rating_lodgement_fees"
										},
										"sink": {
											"name": "Rating_Lodgement_Fees__c"
										}
									},
									{
										"source": {
											"name": "predicted_greenhouse_gas_intensity"
										},
										"sink": {
											"name": "Predicted_Greenhouse_Gas_Intensity__c"
										}
									},
									{
										"source": {
											"name": "predicted_average_water_use"
										},
										"sink": {
											"name": "Predicted_Average_Water_Use__c"
										}
									},
									{
										"source": {
											"name": "number_of_trading_days"
										},
										"sink": {
											"name": "Number_Of_Trading_Days__c"
										}
									},
									{
										"source": {
											"name": "no_recycle_predicted_average_water_use"
										},
										"sink": {
											"name": "No_Recycle_Predicted_Average_Water_Use__c"
										}
									},
									{
										"source": {
											"name": "no_greenpower_ghg_intensity_scope_12"
										},
										"sink": {
											"name": "No_GreenPower_GHG_Intensity_Scope_12__c"
										}
									},
									{
										"source": {
											"name": "no_greenpower_ghg_intensity_scope_123"
										},
										"sink": {
											"name": "No_GreenPower_GHG_Intensity_Scope_123__c"
										}
									},
									{
										"source": {
											"name": "no_greenpower_ghg_emissions_scope_12"
										},
										"sink": {
											"name": "No_GreenPower_GHG_Emissions_Scope_12__c"
										}
									},
									{
										"source": {
											"name": "no_greenpower_ghg_emissions_scope_123"
										},
										"sink": {
											"name": "No_GreenPower_GHG_Emissions_Scope_123__c"
										}
									},
									{
										"source": {
											"name": "greenhouse_gas_intensity_scope_123"
										},
										"sink": {
											"name": "Greenhouse_Gas_Intensity_Scope_123__c"
										}
									},
									{
										"source": {
											"name": "greenhouse_gas_emissions_scope_123"
										},
										"sink": {
											"name": "Greenhouse_Gas_Emissions_Scope_123__c"
										}
									},
									{
										"source": {
											"name": "energy_intensity"
										},
										"sink": {
											"name": "Energy_Intensity__c"
										}
									},
									{
										"source": {
											"name": "explain_why_not_compliant"
										},
										"sink": {
											"name": "Explain_Why_Not_Compliant__c"
										}
									},
									{
										"source": {
											"name": "is_small_shopping_centre"
										},
										"sink": {
											"name": "Is_Small_Shopping_Centre__c"
										}
									},
									{
										"source": {
											"name": "using_latest_rules_water"
										},
										"sink": {
											"name": "Using_Latest_Water_Rules_Version__c"
										}
									},
									{
										"source": {
											"name": "using_latest_rules_energy"
										},
										"sink": {
											"name": "Using_Latest_Energy_Rules_Version__c"
										}
									},
									{
										"source": {
											"name": "single_or_multi_storey"
										},
										"sink": {
											"name": "Shopping_Centre_Storey__c"
										}
									},
									{
										"source": {
											"name": "sf_customer_id"
										},
										"sink": {
											"name": "Customer__c"
										}
									},
									{
										"source": {
											"name": "shopping_centre_size"
										},
										"sink": {
											"name": "Shopping_Centre_Size__c"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_transformed_ratings",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "sf_Ratings",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_transformed_ratings')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/03 Junction Building Rating')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetRatings",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRating]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "usp_GetRatings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('usp_GetRatings').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Rating by Member Rating Id In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from NO_Rating__c \nwhere NO_Member_Rating_Id__c = @{item().RatingHeaderID}",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_Ratings",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "if Rating was successfully created",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup Each Rating by Member Rating Id In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(string(activity('Lookup Each Rating by Member Rating Id In Salesforce').output), 'firstRow')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Insert Anomaly",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertDataSyncAnomalies]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"process_name": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"anomaly_desc": {
															"value": {
																"value": "No Rating found for this Rating header Id.",
																"type": "Expression"
															},
															"type": "String"
														},
														"anomaly_type": {
															"value": "Error",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "UpdateNewSalesforceIdForRating",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_UpdateNewSalesforceIdForRating]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_rating_id": {
															"value": {
																"value": "@item().ratingheaderid",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"salesforceratingId": {
															"value": {
																"value": "@activity('Lookup Each Rating by Member Rating Id In Salesforce').output.firstRow.Id",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "copyJunctionBuildingRating",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingBuildingForJunctionInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c"
																}
															},
															{
																"source": {
																	"name": "sf_building_id",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Building__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "sf_buiding_rating",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "copyJunctionRatingContact",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingCustomerContactForJunctionInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c"
																}
															},
															{
																"source": {
																	"name": "sf_customercontact_id",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Contact__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_contact",
														"type": "DatasetReference"
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "Array"
					},
					"_vnewBuildingInSF": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_transformed_ratings')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_transformed_ratings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "building_type",
						"type": "varchar"
					},
					{
						"name": "source_rating_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sf_company_id",
						"type": "varchar"
					},
					{
						"name": "sf_building_id",
						"type": "varchar"
					},
					{
						"name": "sf_rating_id",
						"type": "varchar"
					},
					{
						"name": "sf_assessor_id",
						"type": "varchar"
					},
					{
						"name": "sf_customer_id",
						"type": "varchar"
					},
					{
						"name": "assessor_email",
						"type": "varchar"
					},
					{
						"name": "customer_email",
						"type": "varchar"
					},
					{
						"name": "cert_building_name",
						"type": "varchar"
					},
					{
						"name": "cert_customer_name",
						"type": "varchar"
					},
					{
						"name": "rating_type",
						"type": "varchar"
					},
					{
						"name": "rating_main_purpose",
						"type": "varchar"
					},
					{
						"name": "has_cinema",
						"type": "bit"
					},
					{
						"name": "period_from",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "period_to",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "cert_valid_from",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "cert_valid_to",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rating_ref_number",
						"type": "varchar"
					},
					{
						"name": "lodged_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rating_scope",
						"type": "varchar"
					},
					{
						"name": "publicly_listed",
						"type": "bit"
					},
					{
						"name": "sf_officer_id",
						"type": "varchar"
					},
					{
						"name": "last_update_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "renew_replace",
						"type": "varchar"
					},
					{
						"name": "sync_status",
						"type": "varchar"
					},
					{
						"name": "review_summary_page",
						"type": "varchar"
					},
					{
						"name": "using_latest_rules",
						"type": "varchar"
					},
					{
						"name": "rating_information_page",
						"type": "varchar"
					},
					{
						"name": "lodge_rating_page",
						"type": "varchar"
					},
					{
						"name": "rating_details_page",
						"type": "varchar"
					},
					{
						"name": "parking_space_page",
						"type": "varchar"
					},
					{
						"name": "water_page",
						"type": "varchar"
					},
					{
						"name": "has_parking_space",
						"type": "varchar"
					},
					{
						"name": "has_gym",
						"type": "varchar"
					},
					{
						"name": "has_food_court",
						"type": "varchar"
					},
					{
						"name": "conflict_of_interest",
						"type": "varchar"
					},
					{
						"name": "compliant_with_current_rules",
						"type": "varchar"
					},
					{
						"name": "relodged_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rating_data_complete",
						"type": "varchar"
					},
					{
						"name": "assessor_declaration",
						"type": "varchar"
					},
					{
						"name": "customer_aware_of_star_rating",
						"type": "varchar"
					},
					{
						"name": "water_star_rating_with_recycle",
						"type": "varchar"
					},
					{
						"name": "water_star_rating_without_recycle",
						"type": "varchar"
					},
					{
						"name": "energy_star_rating_with_recycle",
						"type": "varchar"
					},
					{
						"name": "energy_star_rating_without_recycle",
						"type": "varchar"
					},
					{
						"name": "total_energy_consumption",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "weekly_core_hours_of_Service",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "total_electricity_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "total_diesel_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "water_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "recycle_normalised_water_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "total_water_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "total_recycled_water_percent",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "total_gas_consumption",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "rating_lodgement_fees",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "predicted_greenhouse_gas_intensity",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "predicted_average_water_use",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "number_of_trading_days",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_recycle_predicted_average_water_use",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_greenpower_ghg_intensity_scope_12",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_greenpower_ghg_intensity_scope_123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_greenpower_ghg_emissions_scope_12",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "no_greenpower_ghg_emissions_scope_123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "greenhouse_gas_intensity_scope_123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "greenhouse_gas_emissions_scope_123",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "energy_intensity",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "explain_why_not_compliant",
						"type": "varchar"
					},
					{
						"name": "is_small_shopping_centre",
						"type": "varchar"
					},
					{
						"name": "using_latest_rules_water",
						"type": "varchar"
					},
					{
						"name": "using_latest_rules_energy",
						"type": "varchar"
					},
					{
						"name": "single_or_multi_storey",
						"type": "varchar"
					},
					{
						"name": "shopping_centre_size",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transformed_Ratings"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_Transform_Rating')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							},
							"name": "getRatings"
						},
						{
							"dataset": {
								"referenceName": "db_lookup_sf_buildings_ids",
								"type": "DatasetReference"
							},
							"name": "getLookupSalesforceBuildings"
						},
						{
							"dataset": {
								"referenceName": "db_lookup_sf_assessors_ids",
								"type": "DatasetReference"
							},
							"name": "getLookupSalesforceAssessors"
						},
						{
							"dataset": {
								"referenceName": "db_lookup_sf_officer_ids",
								"type": "DatasetReference"
							},
							"name": "getLookupSalesforceTechOfficer"
						},
						{
							"dataset": {
								"referenceName": "db_lookup_sf_company_ids",
								"type": "DatasetReference"
							},
							"name": "getLookupSalesforceCompany"
						},
						{
							"dataset": {
								"referenceName": "db_lookup_sf_company_ids",
								"type": "DatasetReference"
							},
							"name": "getLookupSalesforceCustomers"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "db_transformed_ratings",
								"type": "DatasetReference"
							},
							"name": "dumpToSFTransofrmedRatings"
						}
					],
					"transformations": [
						{
							"name": "filterBatchRatings"
						},
						{
							"name": "joinLookupSalesforceBuilding"
						},
						{
							"name": "filterSFBuildingByBatch"
						},
						{
							"name": "joinLookupSalesforceAssessors"
						},
						{
							"name": "filterSFAssessorsByBatch"
						},
						{
							"name": "derivedFields"
						},
						{
							"name": "filterSFOfficerByBatch"
						},
						{
							"name": "joinLookupSalesforceUsers"
						},
						{
							"name": "filterSFCompanyByBatch"
						},
						{
							"name": "joinLookupSalesforceCompany"
						},
						{
							"name": "filterSFCustomerByBatch"
						},
						{
							"name": "joinLookupsSalesforceCustomer"
						}
					],
					"script": "parameters{\n\tpbatch_id as integer (1),\n\tvDefaultComplete as string ('Complete'),\n\tvDefaultYes as string ('Yes')\n}\nsource(output(\n\t\tRatingHeaderID as integer,\n\t\tRatingReferenceNumber as string,\n\t\tPremiseTypeID as integer,\n\t\tPremiseType as string,\n\t\tPremiseID as integer,\n\t\tPremiseName as string,\n\t\tAssessorID as integer,\n\t\tAssessorEmail as string,\n\t\tCustomer_Name as string,\n\t\tCustomer_TradingName as string,\n\t\tCustomer_Mailing_StreeNumber as string,\n\t\tCustomer_Mailing_StreetName as string,\n\t\tCustomer_Mailing_Suburb as string,\n\t\tCustomer_Mailing_Postcode as string,\n\t\tCustomer_Mailing_State as string,\n\t\tCustomer_ABN as string,\n\t\tcustomer_id as integer,\n\t\tRatingPeriodFrom as timestamp,\n\t\tRatingPeriodTo as timestamp,\n\t\tPublicListingFlag as boolean,\n\t\tOfficerID as integer,\n\t\tRatingStatusID as integer,\n\t\tRatingStatus as string,\n\t\tLodgedDate as timestamp,\n\t\tPaymentStatusID as integer,\n\t\tPaymentStatus as string,\n\t\tPaidDate as timestamp,\n\t\tCertificateValidFrom as timestamp,\n\t\tCertificateValidTo as timestamp,\n\t\tPremiseNameOnCert as string,\n\t\tCustomerNameOnCert as string,\n\t\tCertificate_Customer_Email as string,\n\t\tLastActionDate as timestamp,\n\t\tReplaceFlag as boolean,\n\t\tRenewFlag as boolean,\n\t\tPreviousRatingHeaderID as integer,\n\t\tNewRatingHeaderID as integer,\n\t\tStreetNumber as string,\n\t\tStreetName as string,\n\t\tSuburb as string,\n\t\tPostcode as string,\n\t\tState as string,\n\t\tRatingTypes as string,\n\t\tCinemaTheatres as decimal(8,2),\n\t\tShoppingCentreWaterSummaryID as integer,\n\t\tFloorConfiguration as string,\n\t\tParkingSpacesMechanical as decimal(8,2),\n\t\tParkingSpacesNatural as decimal(8,2),\n\t\tTotalGymGLAR as decimal(12,3),\n\t\tFoodCourtSeats as decimal(8,2),\n\t\tconflictOfInterestFlag as boolean,\n\t\tInComplianceWithCurrentRules as boolean,\n\t\tWaterStarRatingWRecycle as string,\n\t\tWaterStarRatingWoRecycle as string,\n\t\tEnergyStarRatingWRecycle as string,\n\t\tEnergyStarRatingWoRecycle as string,\n\t\ttotalEnergyConsumption as decimal(19,4),\n\t\tWeeklyCoreHoursOfService as decimal(8,2),\n\t\tTotalElectricityConsumption as decimal(12,3),\n\t\tTotalDieselConsumption as decimal(12,3),\n\t\tWaterConsumption as decimal(12,3),\n\t\tRecycleNormalisedWaterConsumption as decimal(12,3),\n\t\tTotalWaterConsumption as decimal(12,3),\n\t\tTotalRecycledWaterPercent as decimal(6,2),\n\t\tTotalGasConsumption as decimal(12,3),\n\t\tRatingLodgementFees as decimal(12,2),\n\t\tPredictedGreenhouseGasIntensity as decimal(12,3),\n\t\tPredictedAverageWaterUse as decimal(12,3),\n\t\tNumberOfTradingDays as decimal(8,2),\n\t\tNoRecyclePredictedAverageWaterUse as decimal(12,3),\n\t\tNoGreenPower_GHG_IntensityScope_12 as decimal(12,3),\n\t\tNoGreenPowerGHGIntensityScope123 as decimal(12,3),\n\t\tNoGreenPowerGHGEmissionsScope12 as decimal(12,3),\n\t\tNoGreenPowerGHGEmissionsScope123 as decimal(12,3),\n\t\tGreenhouseGasIntensityScope123 as decimal(12,3),\n\t\tGreenhouseGasEmissionsScope123 as decimal(12,3),\n\t\tEnergyIntensity as decimal(12,3),\n\t\tExplainWhyNotCompliant as string,\n\t\tIsSmallShoppingCentre as boolean,\n\t\tbatch_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_COMMITTED',\n\tformat: 'table') ~> getRatings\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_building_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_premise_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookupSalesforceBuildings\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_assessor_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_assessor_id as integer,\n\t\tsalesforce_company_id as string,\n\t\tmember_company_id as integer,\n\t\tsync_status as string,\n\t\tmailing_country as string,\n\t\tbilling_country as string,\n\t\taccredition as string,\n\t\trating_type as string,\n\t\tregional_cleaned as string,\n\t\tsalesforce_contact_type as string,\n\t\tsalesforce_portal_access as string,\n\t\tsalesforce_user_active as string,\n\t\tmetropolitan_cleaned as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookupSalesforceAssessors\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_user_Id as string,\n\t\tmember_officer_id as integer,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookupSalesforceTechOfficer\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_company_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_company_id as integer,\n\t\tMailing_Country as string,\n\t\tBilling_Country as string,\n\t\tsync_status as string,\n\t\taccount_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookupSalesforceCompany\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_company_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_company_id as integer,\n\t\tMailing_Country as string,\n\t\tBilling_Country as string,\n\t\tsync_status as string,\n\t\taccount_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookupSalesforceCustomers\ngetRatings filter(equals(batch_id, $pbatch_id)) ~> filterBatchRatings\njoinLookupSalesforceAssessors, filterSFBuildingByBatch join(PremiseID == member_premise_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinLookupSalesforceBuilding\ngetLookupSalesforceBuildings filter(equals(batch_id,  $pbatch_id)) ~> filterSFBuildingByBatch\nderivedFields, filterSFAssessorsByBatch join(AssessorID == member_assessor_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinLookupSalesforceAssessors\ngetLookupSalesforceAssessors filter(equals(batch_id,  $pbatch_id)) ~> filterSFAssessorsByBatch\nfilterBatchRatings derive(D_Rating_Scope = iif(equalsIgnoreCase(PremiseType, 'shopping centre'), 'Not applicable', ''),\n\t\tD_Main_Purpose_Of_Rating = iif(equalsIgnoreCase(PremiseName, 'shopping centre'), 'None of the above (NABERS voluntary rating)', ''),\n\t\tD_Renew_Replace = iif(!isNull(RenewFlag) || !isNull(ReplaceFlag), \r\niif(RenewFlag, 'Renew', iif(ReplaceFlag, 'Replace', '')),''),\n\t\tD_Review_Summary_Page = $vDefaultComplete,\n\t\tD_Using_Latest_Rules_Water = $vDefaultYes,\n\t\tD_Using_Latest_Rules_Energy = $vDefaultYes,\n\t\tD_Rating_Information_Page = $vDefaultComplete,\n\t\tD_Lodge_Rating_Page = $vDefaultComplete,\n\t\tD_Rating_Details_Page = $vDefaultComplete,\n\t\tD_Parking_Space_Page = $vDefaultComplete,\n\t\tD_HasCinemas = CinemaTheatres > 0,\n\t\tD_WaterPageComplete = iif(isNull(ShoppingCentreWaterSummaryID), '', $vDefaultComplete),\n\t\tD_HasParkingSpace = ParkingSpacesMechanical + ParkingSpacesNatural > 0,\n\t\tD_HasGym = TotalGymGLAR > 0,\n\t\tD_HasFoodCourt = FoodCourtSeats > 0,\n\t\tD_ConflictOfInterest = iif(isNull(conflictOfInterestFlag) , false(), conflictOfInterestFlag),\n\t\tD_IsSmallShoppingCentre = iif(isNull(IsSmallShoppingCentre) , false(), IsSmallShoppingCentre),\n\t\tD_Shopping_Centre_Size = iif(isNull(IsSmallShoppingCentre), 'Small', iif(IsSmallShoppingCentre, 'Small', 'Large')),\n\t\tD_CompliantWithCurrentRules = iif(isNull(InComplianceWithCurrentRules) , false(), InComplianceWithCurrentRules),\n\t\tD_RelodgedDate = LodgedDate,\n\t\tD_RatingDataCompleteFlag = true(),\n\t\tD_AssessorDeclaration = true(),\n\t\tD_CustomerAwareOfStarRating = true(),\n\t\tD_SingleMultiStorey = iif(isNull(FloorConfiguration), 'Single storey', 'Multi-storey')) ~> derivedFields\ngetLookupSalesforceTechOfficer filter(equals(batch_id, $pbatch_id)) ~> filterSFOfficerByBatch\njoinLookupSalesforceBuilding, filterSFOfficerByBatch join(OfficerID == member_officer_id,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinLookupSalesforceUsers\ngetLookupSalesforceCompany filter(equals(batch_id, $pbatch_id) && equals(account_type, 'company')) ~> filterSFCompanyByBatch\njoinLookupSalesforceUsers, filterSFCompanyByBatch join(getLookupSalesforceAssessors@member_company_id == getLookupSalesforceCompany@member_company_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinLookupSalesforceCompany\ngetLookupSalesforceCustomers filter(equals(batch_id, $pbatch_id) && equals(account_type, 'customer')) ~> filterSFCustomerByBatch\njoinLookupSalesforceCompany, filterSFCustomerByBatch join(customer_id == getLookupSalesforceCustomers@member_company_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinLookupsSalesforceCustomer\njoinLookupsSalesforceCustomer sink(input(\n\t\tid as integer,\n\t\tbatch_id as integer,\n\t\tbuilding_type as string,\n\t\tsource_rating_id as integer,\n\t\tsf_company_id as string,\n\t\tsf_building_id as string,\n\t\tsf_rating_id as string,\n\t\tsf_assessor_id as string,\n\t\tsf_customer_id as string,\n\t\tassessor_email as string,\n\t\tcustomer_email as string,\n\t\tcert_building_name as string,\n\t\tcert_customer_name as string,\n\t\trating_type as string,\n\t\trating_main_purpose as string,\n\t\thas_cinema as boolean,\n\t\tperiod_from as timestamp,\n\t\tperiod_to as timestamp,\n\t\tstatus as string,\n\t\tcert_valid_from as timestamp,\n\t\tcert_valid_to as timestamp,\n\t\trating_ref_number as string,\n\t\tlodged_date as timestamp,\n\t\trating_scope as string,\n\t\tpublicly_listed as boolean,\n\t\tsf_officer_id as string,\n\t\tlast_update_date as timestamp,\n\t\trenew_replace as string,\n\t\tsync_status as string,\n\t\treview_summary_page as string,\n\t\tusing_latest_rules as string,\n\t\trating_information_page as string,\n\t\tlodge_rating_page as string,\n\t\trating_details_page as string,\n\t\tparking_space_page as string,\n\t\twater_page as string,\n\t\thas_parking_space as string,\n\t\thas_gym as string,\n\t\thas_food_court as string,\n\t\tconflict_of_interest as string,\n\t\tcompliant_with_current_rules as string,\n\t\trelodged_date as timestamp,\n\t\trating_data_complete as string,\n\t\tassessor_declaration as string,\n\t\tcustomer_aware_of_star_rating as string,\n\t\twater_star_rating_with_recycle as string,\n\t\twater_star_rating_without_recycle as string,\n\t\tenergy_star_rating_with_recycle as string,\n\t\tenergy_star_rating_without_recycle as string,\n\t\ttotal_energy_consumption as decimal(19,4),\n\t\tweekly_core_hours_of_Service as decimal(8,2),\n\t\ttotal_electricity_consumption as decimal(12,3),\n\t\ttotal_diesel_consumption as decimal(12,3),\n\t\twater_consumption as decimal(12,3),\n\t\trecycle_normalised_water_consumption as decimal(12,3),\n\t\ttotal_water_consumption as decimal(12,3),\n\t\ttotal_recycled_water_percent as decimal(12,3),\n\t\ttotal_gas_consumption as decimal(12,3),\n\t\trating_lodgement_fees as decimal(12,3),\n\t\tpredicted_greenhouse_gas_intensity as decimal(12,3),\n\t\tpredicted_average_water_use as decimal(12,3),\n\t\tnumber_of_trading_days as decimal(12,3),\n\t\tno_recycle_predicted_average_water_use as decimal(12,3),\n\t\tno_greenpower_ghg_intensity_scope_12 as decimal(12,3),\n\t\tno_greenpower_ghg_intensity_scope_123 as decimal(12,3),\n\t\tno_greenpower_ghg_emissions_scope_12 as decimal(12,3),\n\t\tno_greenpower_ghg_emissions_scope_123 as decimal(12,3),\n\t\tgreenhouse_gas_intensity_scope_123 as decimal(12,3),\n\t\tgreenhouse_gas_emissions_scope_123 as decimal(12,3),\n\t\tenergy_intensity as decimal(12,3),\n\t\texplain_why_not_compliant as string,\n\t\tis_small_shopping_centre as string,\n\t\tusing_latest_rules_water as string,\n\t\tusing_latest_rules_energy as string,\n\t\tsingle_or_multi_storey as string,\n\t\tshopping_centre_size as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tsource_rating_id = RatingHeaderID,\n\t\tbuilding_type = PremiseType,\n\t\tsf_building_id = salesforce_building_Id,\n\t\tbatch_id = getRatings@batch_id,\n\t\tsf_assessor_id = salesforce_assessor_Id,\n\t\tassessor_email = AssessorEmail,\n\t\tcustomer_email = Certificate_Customer_Email,\n\t\tcert_building_name = PremiseNameOnCert,\n\t\tcert_customer_name = CustomerNameOnCert,\n\t\tstatus = RatingStatus,\n\t\tperiod_from = RatingPeriodFrom,\n\t\tperiod_to = RatingPeriodTo,\n\t\tcert_valid_from = CertificateValidFrom,\n\t\tcert_valid_to = CertificateValidTo,\n\t\thas_cinema = D_HasCinemas,\n\t\trating_type = RatingTypes,\n\t\trating_main_purpose = D_Main_Purpose_Of_Rating,\n\t\trating_ref_number = RatingReferenceNumber,\n\t\tlodged_date = LodgedDate,\n\t\trating_scope = D_Rating_Scope,\n\t\tpublicly_listed = PublicListingFlag,\n\t\tsf_officer_id = salesforce_user_Id,\n\t\tsf_company_id = getLookupSalesforceAssessors@salesforce_company_id,\n\t\tlast_update_date = LastActionDate,\n\t\trenew_replace = D_Renew_Replace,\n\t\treview_summary_page = D_Review_Summary_Page,\n\t\tusing_latest_rules = D_Using_Latest_Rules_Water,\n\t\trating_information_page = D_Rating_Information_Page,\n\t\tlodge_rating_page = D_Lodge_Rating_Page,\n\t\trating_details_page = D_Rating_Details_Page,\n\t\tparking_space_page = D_Parking_Space_Page,\n\t\twater_page = D_WaterPageComplete,\n\t\thas_parking_space = D_HasParkingSpace,\n\t\thas_gym = D_HasGym,\n\t\thas_food_court = D_HasFoodCourt,\n\t\tconflict_of_interest = D_ConflictOfInterest,\n\t\tcompliant_with_current_rules = D_CompliantWithCurrentRules,\n\t\trelodged_date = D_RelodgedDate,\n\t\trating_data_complete = D_RatingDataCompleteFlag,\n\t\tassessor_declaration = D_AssessorDeclaration,\n\t\tcustomer_aware_of_star_rating = D_CustomerAwareOfStarRating,\n\t\twater_star_rating_with_recycle = WaterStarRatingWRecycle,\n\t\twater_star_rating_without_recycle = WaterStarRatingWoRecycle,\n\t\tenergy_star_rating_with_recycle = EnergyStarRatingWRecycle,\n\t\tenergy_star_rating_without_recycle = EnergyStarRatingWoRecycle,\n\t\ttotal_energy_consumption = totalEnergyConsumption,\n\t\tweekly_core_hours_of_Service = WeeklyCoreHoursOfService,\n\t\ttotal_electricity_consumption = TotalElectricityConsumption,\n\t\ttotal_diesel_consumption = TotalDieselConsumption,\n\t\twater_consumption = WaterConsumption,\n\t\trecycle_normalised_water_consumption = RecycleNormalisedWaterConsumption,\n\t\ttotal_water_consumption = TotalWaterConsumption,\n\t\ttotal_recycled_water_percent = TotalRecycledWaterPercent,\n\t\ttotal_gas_consumption = TotalGasConsumption,\n\t\trating_lodgement_fees = RatingLodgementFees,\n\t\tpredicted_greenhouse_gas_intensity = PredictedGreenhouseGasIntensity,\n\t\tpredicted_average_water_use = PredictedAverageWaterUse,\n\t\tno_recycle_predicted_average_water_use = NoRecyclePredictedAverageWaterUse,\n\t\tnumber_of_trading_days = NumberOfTradingDays,\n\t\tno_greenpower_ghg_intensity_scope_12 = NoGreenPower_GHG_IntensityScope_12,\n\t\tno_greenpower_ghg_intensity_scope_123 = NoGreenPowerGHGIntensityScope123,\n\t\tno_greenpower_ghg_emissions_scope_12 = NoGreenPowerGHGEmissionsScope12,\n\t\tno_greenpower_ghg_emissions_scope_123 = NoGreenPowerGHGEmissionsScope123,\n\t\tgreenhouse_gas_intensity_scope_123 = GreenhouseGasIntensityScope123,\n\t\tgreenhouse_gas_emissions_scope_123 = GreenhouseGasEmissionsScope123,\n\t\tenergy_intensity = EnergyIntensity,\n\t\texplain_why_not_compliant = ExplainWhyNotCompliant,\n\t\tis_small_shopping_centre = D_IsSmallShoppingCentre,\n\t\tsingle_or_multi_storey = D_SingleMultiStorey,\n\t\tusing_latest_rules_water = D_Using_Latest_Rules_Water,\n\t\tusing_latest_rules_energy = D_Using_Latest_Rules_Energy,\n\t\tsf_customer_id = getLookupSalesforceCustomers@salesforce_company_Id,\n\t\tshopping_centre_size = D_Shopping_Centre_Size\n\t),\n\tskipDuplicateMapOutputs: true) ~> dumpToSFTransofrmedRatings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_transformed_ratings')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sf_rating_attribute')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NabersOnline",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": "NO_Rating_Attribute__c"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_stage_hours_Of_service')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RatingHeaderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AreaID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenancyName",
						"type": "nvarchar"
					},
					{
						"name": "ListedArea",
						"type": "nvarchar"
					},
					{
						"name": "blocknumber",
						"type": "nvarchar"
					},
					{
						"name": "IsListedAsCentralServiced",
						"type": "bit"
					},
					{
						"name": "IsTenancyServicingCheck",
						"type": "bit"
					},
					{
						"name": "IsAreaConfirmed",
						"type": "bit"
					},
					{
						"name": "IsCentralServicingResult",
						"type": "bit"
					},
					{
						"name": "RatedCSArea",
						"type": "nvarchar"
					},
					{
						"name": "RatedGLAR",
						"type": "nvarchar"
					},
					{
						"name": "WeeksVacant",
						"type": "nvarchar"
					},
					{
						"name": "ExtentedHours",
						"type": "nvarchar"
					},
					{
						"name": "Hours",
						"type": "nvarchar"
					},
					{
						"name": "HoursArea",
						"type": "nvarchar"
					},
					{
						"name": "IsExtendedHoursEnabled",
						"type": "nvarchar"
					},
					{
						"name": "IsHoursEnabled",
						"type": "nvarchar"
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HoursOfServiceStage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_transformed_attribute_type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AreaId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "member_rating_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "area_centrally_serviced",
						"type": "varchar"
					},
					{
						"name": "attribute_type",
						"type": "varchar"
					},
					{
						"name": "tenancy_servicing",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transformed_AttributeType"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_Transform_HoursOfService')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "db_stage_hours_Of_service",
								"type": "DatasetReference"
							},
							"name": "getStagedHoursOfService"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "db_transformed_attribute_type",
								"type": "DatasetReference"
							},
							"name": "sinkTransformdAttributeType"
						}
					],
					"transformations": [
						{
							"name": "filterByBatch"
						},
						{
							"name": "transformedColumns"
						}
					],
					"script": "parameters{\n\tpbatch_id as integer (1)\n}\nsource(output(\n\t\tid as integer,\n\t\tRatingHeaderID as integer,\n\t\tAreaID as integer,\n\t\tTenancyName as string,\n\t\tListedArea as string,\n\t\tblocknumber as string,\n\t\tIsListedAsCentralServiced as boolean,\n\t\tIsTenancyServicingCheck as boolean,\n\t\tIsAreaConfirmed as boolean,\n\t\tIsCentralServicingResult as boolean,\n\t\tRatedCSArea as string,\n\t\tRatedGLAR as string,\n\t\tWeeksVacant as string,\n\t\tExtentedHours as string,\n\t\tHours as string,\n\t\tHoursArea as string,\n\t\tIsExtendedHoursEnabled as string,\n\t\tIsHoursEnabled as string,\n\t\tbatch_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getStagedHoursOfService\ngetStagedHoursOfService filter(equals(toInteger(batch_id), $pbatch_id)) ~> filterByBatch\nfilterByBatch derive(D_RatingAttributeType = 'Area',\n\t\tD_Tenancy_Servcing = iif(IsTenancyServicingCheck,'Yes','No') ,\n\t\tD_Centrally_Serviced = iif(IsListedAsCentralServiced, 'Centrally serviced','Not centrally serviced') ) ~> transformedColumns\ntransformedColumns sink(input(\n\t\tId as integer,\n\t\tAreaId as integer,\n\t\tmember_rating_id as integer,\n\t\tbatch_id as integer,\n\t\tarea_centrally_serviced as string,\n\t\tattribute_type as string,\n\t\ttenancy_servicing as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tAreaId = AreaID,\n\t\tmember_rating_id = RatingHeaderID,\n\t\tbatch_id,\n\t\tattribute_type = D_RatingAttributeType,\n\t\tarea_centrally_serviced = D_Centrally_Serviced,\n\t\ttenancy_servicing = D_Tenancy_Servcing\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkTransformdAttributeType"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_stage_hours_Of_service')]",
				"[concat(variables('factoryId'), '/datasets/db_transformed_attribute_type')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04 Hours of Service')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "copyHoursOfSerivce",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingHoursOfServiceToCreateInSalesforce]",
								"storedProcedureParameters": {
									"batch_id": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									},
									"source_rating_id": {
										"type": "Int32",
										"value": "22908"
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "sf_rating_id",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rating__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TenancyName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Area_Tenancy_Name__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ListedArea",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Area__c",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "blocknumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Area_Block_Number__c",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "area_centrally_serviced"
										},
										"sink": {
											"name": "Area_Centrally_Serviced__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tenancy_servicing",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Area_Tenancy_Servicing_Checked__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WeeksVacant",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Area_Weeks_Vacant_During_Rating_Period__c",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "attribute_type"
										},
										"sink": {
											"name": "Rating_Attribute_Type__c",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "db_transformed_ratings",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "sf_rating_attribute",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "01_Transform_HoursOfService",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "01_Transform_HoursOfService",
								"type": "DataFlowReference",
								"parameters": {
									"pbatch_id": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									}
								}
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "Array"
					},
					"_vnewBuildingInSF": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_transformed_ratings')]",
				"[concat(variables('factoryId'), '/datasets/sf_rating_attribute')]",
				"[concat(variables('factoryId'), '/dataflows/01_Transform_HoursOfService')]"
			]
		}
	]
}