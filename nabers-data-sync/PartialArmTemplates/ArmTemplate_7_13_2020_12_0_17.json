{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nabers-data-sync"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/00 Start Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "usp_StartBatch",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_StartBatch]",
								"storedProcedureParameters": {
									"process_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Batch Id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_StartBatch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "vbatch_id",
							"value": {
								"value": "@string(activity('usp_StartBatch').output.firstRow.NewBatchId)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "01 Pull From Staging",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Batch Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01 Pull Members Data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@activity('usp_StartBatch').output.firstRow.NewBatchId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "02 Transform Ratings",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01a Create Building",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "01d Create Assessors",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "01c Create Customer Contact",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "01a Transform Hours of Service",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02 Transform Ratings",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01a Create Building",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01a Create Building In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "03 Create Ratings",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "02 Transform Ratings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03 Create Ratings",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "03a Junction Building Rating",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "03 Create Ratings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03a Junction Building Rating",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01d Create Assessors",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01c Transform Company Assessor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01d Create Assessors In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01b Create Company",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01a Transform Country in master entities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01b Create Assessors Company In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01c Transform Company Assessor",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01b Create Company",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01c Transform Company Assessors",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01a Transform Country in master entities",
						"description": "Placeholder for missing mailing and billing country",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01b Transform Country in master entities",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01b Create Customers",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01a Transform Country in master entities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01b Create Customer In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01c Create Customer Contact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01b Create Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01c Create Customer Contact In Salesforce",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "01a Transform Hours of Service",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01 Pull From Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01a Transform Rating Attributes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pbatch_id": {
									"value": "@variables('vbatch_id')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"variables": {
					"vbatch_id": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/03a Junction Building Rating')]",
				"[concat(variables('factoryId'), '/pipelines/01a Transform Rating Attributes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01a Transform Rating Attributes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Transform Rating Attributes Data Flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "01_Transform_Rating_Attributes",
								"type": "DataFlowReference",
								"parameters": {
									"pbatch_id": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									}
								}
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "Array"
					},
					"_vnewBuildingInSF": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/01_Transform_Rating_Attributes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/03a Junction Building Rating')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetRatings",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRating]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "usp_GetRatings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('usp_GetRatings').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Rating by Member Rating Id In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from NO_Rating__c \nwhere NO_Member_Rating_Id__c = @{item().RatingHeaderID}",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_Ratings",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "if Rating was successfully created",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup Each Rating by Member Rating Id In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(string(activity('Lookup Each Rating by Member Rating Id In Salesforce').output), 'firstRow')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Insert Anomaly",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertDataSyncAnomalies]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"process_name": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"anomaly_desc": {
															"value": {
																"value": "No Rating found for this Rating header Id.",
																"type": "Expression"
															},
															"type": "String"
														},
														"anomaly_type": {
															"value": "Error",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "UpdateNewSalesforceIdForRating",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_UpdateNewSalesforceIdForRating]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_rating_id": {
															"value": {
																"value": "@item().ratingheaderid",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"salesforceratingId": {
															"value": {
																"value": "@activity('Lookup Each Rating by Member Rating Id In Salesforce').output.firstRow.Id",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "copyJunctionBuildingRating",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingBuildingForJunctionInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c"
																}
															},
															{
																"source": {
																	"name": "sf_building_id",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Building__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "sf_buiding_rating",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "copyJunctionRatingContact",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingCustomerContactForJunctionInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c"
																}
															},
															{
																"source": {
																	"name": "sf_customercontact_id",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Contact__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_contact",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "copyHoursOfSerivce",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingHoursOfServiceToCreateInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"type": "String",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "TenancyName",
																	"type": "String",
																	"physicalType": "nvarchar"
																},
																"sink": {
																	"name": "Area_Tenancy_Name__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "ListedArea",
																	"type": "String",
																	"physicalType": "nvarchar"
																},
																"sink": {
																	"name": "Area__c",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "blocknumber",
																	"type": "String",
																	"physicalType": "nvarchar"
																},
																"sink": {
																	"name": "Area_Block_Number__c",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "is_centrally_serviced"
																},
																"sink": {
																	"name": "Area_Centrally_Serviced__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tenancy_servicing",
																	"physicalType": "nvarchar"
																},
																"sink": {
																	"name": "Area_Tenancy_Servicing_Checked__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "WeeksVacant",
																	"type": "String",
																	"physicalType": "nvarchar"
																},
																"sink": {
																	"name": "Area_Weeks_Vacant_During_Rating_Period__c",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "attribute_type"
																},
																"sink": {
																	"name": "Rating_Attribute_Type__c"
																}
															},
															{
																"source": {
																	"name": "Hours"
																},
																"sink": {
																	"name": "Hours_Per_Week__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_attribute",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "copyParkingSpace",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingParkingSpaceToCreateInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"type": "String",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "BlockDesc"
																},
																"sink": {
																	"name": "Parking_Spaces_Block_Description__c"
																}
															},
															{
																"source": {
																	"name": "ventilation_type"
																},
																"sink": {
																	"name": "Parking_Spaces_Ventilation_Type__c"
																}
															},
															{
																"source": {
																	"name": "NumberOfParkingSpaces"
																},
																"sink": {
																	"name": "Parking_Spaces_Total_Number__c"
																}
															},
															{
																"source": {
																	"name": "NumberOutOfSvcGT4Weeks"
																},
																"sink": {
																	"name": "Parking_Spaces_Unavailable_After_4_weeks__c"
																}
															},
															{
																"source": {
																	"name": "OutOfServiceWeeks"
																},
																"sink": {
																	"name": "Parking_Spaces_Number_Weeks_Unavailabe__c"
																}
															},
															{
																"source": {
																	"name": "attribute_type"
																},
																"sink": {
																	"name": "Rating_Attribute_Type__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_attribute",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "copyFoodCourt",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingFoodCourtToCreateInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"type": "String",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "NumberSeatsOutOfSvcGT4Weeks"
																},
																"sink": {
																	"name": "Food_Courts_Unavailable_After_4_weeks__c"
																}
															},
															{
																"source": {
																	"name": "OutOfServiceWeeks"
																},
																"sink": {
																	"name": "Food_Courts_Week_Unavailable__c"
																}
															},
															{
																"source": {
																	"name": "FoodCourtDesc"
																},
																"sink": {
																	"name": "Food_Courts_Description__c"
																}
															},
															{
																"source": {
																	"name": "NumberSeats"
																},
																"sink": {
																	"name": "Food_Courts_Total_Seats__c"
																}
															},
															{
																"source": {
																	"name": "attribute_type"
																},
																"sink": {
																	"name": "Rating_Attribute_Type__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_attribute",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "copyCinemas",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingCinemaToCreateInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"type": "String",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "NumberOutOfSvcGT4Weeks"
																},
																"sink": {
																	"name": "Number_of_theatrettes_unavailable__c"
																}
															},
															{
																"source": {
																	"name": "OutOfServiceWeeks"
																},
																"sink": {
																	"name": "Cinema_Weeks_unavailable__c"
																}
															},
															{
																"source": {
																	"name": "CinemaDesc"
																},
																"sink": {
																	"name": "Cinema_Description__c"
																}
															},
															{
																"source": {
																	"name": "NumberTheatrettes"
																},
																"sink": {
																	"name": "Number_of_theatrettes_in_cinema__c"
																}
															},
															{
																"source": {
																	"name": "attribute_type"
																},
																"sink": {
																	"name": "Rating_Attribute_Type__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_attribute",
														"type": "DatasetReference"
													}
												]
											},
											{
												"name": "copyGymnasiums",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "UpdateNewSalesforceIdForRating",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRatingGymnasiumToCreateInSalesforce]",
														"storedProcedureParameters": {
															"batch_id": {
																"type": "Int32",
																"value": {
																	"value": "@pipeline().parameters.pbatch_id",
																	"type": "Expression"
																}
															},
															"source_rating_id": {
																"type": "Int32",
																"value": {
																	"value": "@item().RatingHeaderId",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00"
													},
													"sink": {
														"type": "SalesforceSink",
														"writeBatchSize": 5000,
														"writeBehavior": "insert"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "sf_rating_id",
																	"type": "String",
																	"physicalType": "varchar"
																},
																"sink": {
																	"name": "Rating__c",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "is_centrally_serviced"
																},
																"sink": {
																	"name": "Gym_Centrally_Serviced__c"
																}
															},
															{
																"source": {
																	"name": "OutOfServiceWeeks"
																},
																"sink": {
																	"name": "Weeks_Gym_Out_Of_Service__c"
																}
															},
															{
																"source": {
																	"name": "GymDesc"
																},
																"sink": {
																	"name": "Gym_Description__c"
																}
															},
															{
																"source": {
																	"name": "ConfirmedArea"
																},
																"sink": {
																	"name": "Verified_GLAR__c"
																}
															},
															{
																"source": {
																	"name": "attribute_type"
																},
																"sink": {
																	"name": "Rating_Attribute_Type__c"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "db_transformed_ratings",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "sf_rating_attribute",
														"type": "DatasetReference"
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "Array"
					},
					"_vnewBuildingInSF": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_transformed_attribute_type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "attribute_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "attribute_desc",
						"type": "varchar"
					},
					{
						"name": "attribute_type",
						"type": "varchar"
					},
					{
						"name": "member_rating_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "batch_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "area_centrally_serviced",
						"type": "varchar"
					},
					{
						"name": "tenancy_servicing",
						"type": "varchar"
					},
					{
						"name": "ventilation_type",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Transformed_AttributeType"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_Transform_Rating_Attributes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "db_stage_hours_Of_service",
								"type": "DatasetReference"
							},
							"name": "getStagedHoursOfService"
						},
						{
							"dataset": {
								"referenceName": "db_stage_food_courts",
								"type": "DatasetReference"
							},
							"name": "getStageFoodCourt"
						},
						{
							"dataset": {
								"referenceName": "db_stage_gymnasiums",
								"type": "DatasetReference"
							},
							"name": "getStageGymnasiums"
						},
						{
							"dataset": {
								"referenceName": "db_stage_cinemas",
								"type": "DatasetReference"
							},
							"name": "getStageCinemas"
						},
						{
							"dataset": {
								"referenceName": "db_stage_parking_space",
								"type": "DatasetReference"
							},
							"name": "getStageParkingSpace"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "db_transformed_attribute_type",
								"type": "DatasetReference"
							},
							"name": "sinkTransformdAttributeType"
						},
						{
							"dataset": {
								"referenceName": "db_transformed_attribute_type",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "db_transformed_attribute_type",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "db_transformed_attribute_type",
								"type": "DatasetReference"
							},
							"name": "sink3"
						},
						{
							"dataset": {
								"referenceName": "db_transformed_attribute_type",
								"type": "DatasetReference"
							},
							"name": "sink4"
						}
					],
					"transformations": [
						{
							"name": "filterByBatch"
						},
						{
							"name": "transformedColumns"
						},
						{
							"name": "filterStageFoodCourtByBatch"
						},
						{
							"name": "filterStageGymnasiumByBatch"
						},
						{
							"name": "filterStageCinemasByBatch"
						},
						{
							"name": "filterStageParkingByBatch"
						},
						{
							"name": "transformedFoodCourtColumns"
						},
						{
							"name": "transformedGymnasium"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						}
					],
					"script": "parameters{\n\tpbatch_id as integer (1)\n}\nsource(output(\n\t\tid as integer,\n\t\tRatingHeaderID as integer,\n\t\tAreaID as integer,\n\t\tTenancyName as string,\n\t\tListedArea as string,\n\t\tblocknumber as string,\n\t\tIsListedAsCentralServiced as boolean,\n\t\tIsTenancyServicingCheck as boolean,\n\t\tIsAreaConfirmed as boolean,\n\t\tIsCentralServicingResult as boolean,\n\t\tRatedCSArea as string,\n\t\tRatedGLAR as string,\n\t\tWeeksVacant as string,\n\t\tExtentedHours as string,\n\t\tHours as string,\n\t\tHoursArea as string,\n\t\tIsExtendedHoursEnabled as string,\n\t\tIsHoursEnabled as string,\n\t\tCoreHours as decimal(12,3),\n\t\tbatch_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getStagedHoursOfService\nsource(output(\n\t\tRatingHeaderID as string,\n\t\tFoodCourtID as string,\n\t\tFoodCourtDesc as string,\n\t\tNumberSeats as string,\n\t\tNumberSeatsOutOfSvcGT4Weeks as string,\n\t\tOutOfServiceWeeks as string,\n\t\tRatedNumberSeats as string,\n\t\tbatch_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getStageFoodCourt\nsource(output(\n\t\tRatingHeaderID as string,\n\t\tGymID as string,\n\t\tGymDesc as string,\n\t\tConfirmedArea as string,\n\t\tIsEstimate as string,\n\t\tIsCentralServicing as string,\n\t\tOutOfServiceWeeks as string,\n\t\tRatedGymArea as string,\n\t\tbatch_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getStageGymnasiums\nsource(output(\n\t\tRatingHeaderID as string,\n\t\tCinemaID as string,\n\t\tCinemaDesc as string,\n\t\tNumberTheatrettes as string,\n\t\tNumberOutOfSvcGT4Weeks as string,\n\t\tOutOfServiceWeeks as string,\n\t\tRatedNumberTheatrettes as string,\n\t\tbatch_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getStageCinemas\nsource(output(\n\t\tRatingHeaderID as string,\n\t\tBlockID as string,\n\t\tBlockDesc as string,\n\t\tVentilationType as string,\n\t\tNumberParkingSpaces as string,\n\t\tNumberOutOfSvcGT4Weeks as string,\n\t\tOutOfServiceWeeks as string,\n\t\tSpacesNatural as string,\n\t\tSpacesMechanical as string,\n\t\tbatch_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getStageParkingSpace\ngetStagedHoursOfService filter(equals(toInteger(batch_id), $pbatch_id)) ~> filterByBatch\nfilterByBatch derive(D_RatingAttributeType = 'Area',\n\t\tD_Tenancy_Servcing = iif(IsTenancyServicingCheck,'Yes','No'),\n\t\tD_Centrally_Serviced = iif(IsListedAsCentralServiced, 'Centrally serviced','Not centrally serviced')) ~> transformedColumns\ngetStageFoodCourt filter(equals(toInteger(batch_id), $pbatch_id) && !isNull(FoodCourtDesc)) ~> filterStageFoodCourtByBatch\ngetStageGymnasiums filter(equals(toInteger(batch_id), $pbatch_id) && !isNull(GymDesc)) ~> filterStageGymnasiumByBatch\ngetStageCinemas filter(equals(toInteger(batch_id), $pbatch_id) && !isNull(CinemaDesc)) ~> filterStageCinemasByBatch\ngetStageParkingSpace filter(equals(toInteger(batch_id), $pbatch_id) && !isNull(BlockDesc)) ~> filterStageParkingByBatch\nfilterStageFoodCourtByBatch derive(D_RatingAttribute = 'Food courts') ~> transformedFoodCourtColumns\nfilterStageGymnasiumByBatch derive(D_RatingAttribute = 'Gymnasiums',\n\t\tD_IsCentrallyServiced = iif(equals(lower(IsCentralServicing), 'y'), 'Yes', 'No')) ~> transformedGymnasium\nfilterStageCinemasByBatch derive(D_RatingAttribute = 'Cinemas') ~> DerivedColumn1\nfilterStageParkingByBatch derive(D_RatingAttribute = 'Parking spaces',\n\t\tD_VentilationType = iif(equals(lower(VentilationType), 'nat'), 'Natural', 'Mechanical')) ~> DerivedColumn2\ntransformedColumns sink(input(\n\t\tId as integer,\n\t\tattribute_id as integer,\n\t\tattribute_desc as string,\n\t\tattribute_type as string,\n\t\tmember_rating_id as integer,\n\t\tbatch_id as integer,\n\t\tarea_centrally_serviced as string,\n\t\ttenancy_servicing as string,\n\t\tventilation_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tattribute_id = AreaID,\n\t\tmember_rating_id = RatingHeaderID,\n\t\tbatch_id,\n\t\tattribute_type = D_RatingAttributeType,\n\t\tarea_centrally_serviced = D_Centrally_Serviced,\n\t\ttenancy_servicing = D_Tenancy_Servcing\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkTransformdAttributeType\ntransformedFoodCourtColumns sink(input(\n\t\tId as integer,\n\t\tattribute_id as integer,\n\t\tattribute_desc as string,\n\t\tattribute_type as string,\n\t\tmember_rating_id as integer,\n\t\tbatch_id as integer,\n\t\tarea_centrally_serviced as string,\n\t\ttenancy_servicing as string,\n\t\tventilation_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tattribute_id = FoodCourtID,\n\t\tmember_rating_id = RatingHeaderID,\n\t\tbatch_id,\n\t\tattribute_type = D_RatingAttribute,\n\t\tattribute_desc = FoodCourtDesc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\ntransformedGymnasium sink(input(\n\t\tId as integer,\n\t\tattribute_id as integer,\n\t\tattribute_desc as string,\n\t\tattribute_type as string,\n\t\tmember_rating_id as integer,\n\t\tbatch_id as integer,\n\t\tarea_centrally_serviced as string,\n\t\ttenancy_servicing as string,\n\t\tventilation_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tattribute_id = GymID,\n\t\tmember_rating_id = RatingHeaderID,\n\t\tbatch_id,\n\t\tattribute_type = D_RatingAttribute,\n\t\tattribute_desc = GymDesc,\n\t\ttenancy_servicing = D_IsCentrallyServiced\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2\nDerivedColumn1 sink(input(\n\t\tId as integer,\n\t\tattribute_id as integer,\n\t\tattribute_desc as string,\n\t\tattribute_type as string,\n\t\tmember_rating_id as integer,\n\t\tbatch_id as integer,\n\t\tarea_centrally_serviced as string,\n\t\ttenancy_servicing as string,\n\t\tventilation_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tattribute_id = CinemaID,\n\t\tmember_rating_id = RatingHeaderID,\n\t\tbatch_id,\n\t\tattribute_type = D_RatingAttribute,\n\t\tattribute_desc = CinemaDesc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink3\nDerivedColumn2 sink(input(\n\t\tId as integer,\n\t\tattribute_id as integer,\n\t\tattribute_desc as string,\n\t\tattribute_type as string,\n\t\tmember_rating_id as integer,\n\t\tbatch_id as integer,\n\t\tarea_centrally_serviced as string,\n\t\ttenancy_servicing as string,\n\t\tventilation_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tattribute_id = BlockID,\n\t\tmember_rating_id = RatingHeaderID,\n\t\tbatch_id,\n\t\tattribute_type = D_RatingAttribute,\n\t\tattribute_desc = BlockDesc,\n\t\tventilation_type = D_VentilationType\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink4"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/db_stage_food_courts')]",
				"[concat(variables('factoryId'), '/datasets/db_stage_gymnasiums')]",
				"[concat(variables('factoryId'), '/datasets/db_stage_cinemas')]",
				"[concat(variables('factoryId'), '/datasets/db_stage_parking_space')]",
				"[concat(variables('factoryId'), '/datasets/db_transformed_attribute_type')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_stage_food_courts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatingHeaderID",
						"type": "nvarchar"
					},
					{
						"name": "FoodCourtID",
						"type": "nvarchar"
					},
					{
						"name": "FoodCourtDesc",
						"type": "nvarchar"
					},
					{
						"name": "NumberSeats",
						"type": "nvarchar"
					},
					{
						"name": "NumberSeatsOutOfSvcGT4Weeks",
						"type": "nvarchar"
					},
					{
						"name": "OutOfServiceWeeks",
						"type": "nvarchar"
					},
					{
						"name": "RatedNumberSeats",
						"type": "nvarchar"
					},
					{
						"name": "batch_id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FoodCourtStage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_stage_parking_space')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatingHeaderID",
						"type": "nvarchar"
					},
					{
						"name": "BlockID",
						"type": "nvarchar"
					},
					{
						"name": "BlockDesc",
						"type": "nvarchar"
					},
					{
						"name": "VentilationType",
						"type": "nvarchar"
					},
					{
						"name": "NumberParkingSpaces",
						"type": "nvarchar"
					},
					{
						"name": "NumberOutOfSvcGT4Weeks",
						"type": "nvarchar"
					},
					{
						"name": "OutOfServiceWeeks",
						"type": "nvarchar"
					},
					{
						"name": "SpacesNatural",
						"type": "nvarchar"
					},
					{
						"name": "SpacesMechanical",
						"type": "nvarchar"
					},
					{
						"name": "batch_id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ParkingSpaceStage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_stage_cinemas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatingHeaderID",
						"type": "nvarchar"
					},
					{
						"name": "CinemaID",
						"type": "nvarchar"
					},
					{
						"name": "CinemaDesc",
						"type": "nvarchar"
					},
					{
						"name": "NumberTheatrettes",
						"type": "nvarchar"
					},
					{
						"name": "NumberOutOfSvcGT4Weeks",
						"type": "nvarchar"
					},
					{
						"name": "OutOfServiceWeeks",
						"type": "nvarchar"
					},
					{
						"name": "RatedNumberTheatrettes",
						"type": "nvarchar"
					},
					{
						"name": "batch_id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CinemaStage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/db_stage_gymnasiums')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "staging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatingHeaderID",
						"type": "nvarchar"
					},
					{
						"name": "GymID",
						"type": "nvarchar"
					},
					{
						"name": "GymDesc",
						"type": "nvarchar"
					},
					{
						"name": "ConfirmedArea",
						"type": "nvarchar"
					},
					{
						"name": "IsEstimate",
						"type": "nvarchar"
					},
					{
						"name": "IsCentralServicing",
						"type": "nvarchar"
					},
					{
						"name": "OutOfServiceWeeks",
						"type": "nvarchar"
					},
					{
						"name": "RatedGymArea",
						"type": "nvarchar"
					},
					{
						"name": "batch_id",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GymnasiumStage"
				}
			},
			"dependsOn": []
		}
	]
}