{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nabers-data-sync"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/01 Pull Members Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "usp_GetRating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('usp_GetRating').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Building by Address In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from NO_Building__c \nwhere Postcode__c = '@{item().Postcode}'\nand State__c = '@{item().State}'\nand Suburb__c = '@{item().Suburb}'\nand Street_Number__c = '@{item().StreetNumber}'\nand Street_Name__c = '@{item().StreetName}'\nand Name = '@{item().PremiseName}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_Buildings",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "If Building In Salesforce Exist",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup Each Building by Address In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(string(activity('Lookup Each Building by Address In Salesforce').output), 'firstRow')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "insertPremiseDetails",
												"description": "Building does not exist",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertLookupBuildingData]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_premise_id": {
															"value": {
																"value": "@item().PremiseID",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"salesforce_building_Id": {
															"value": "",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "insertPremiseDetailsWithSalesForceId",
												"description": "Building does exist",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertLookupBuildingData]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_premise_id": {
															"value": {
																"value": "@item().PremiseID",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"salesforce_building_Id": {
															"value": {
																"value": "@activity('Lookup Each Building by Address In Salesforce').output.firstrow.Id",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "Lookup Each Assessor by Email In Salesforce",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Get Assessor Details by Assessor ID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from Contact\nwhere Email= '@{activity('Get Assessor Details by Assessor ID').output.firstRow.Email}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_contacts",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "If Assessor In Salesforce Exist",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup Each Assessor by Email In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(string(activity('Lookup Each Assessor by Email In Salesforce').output), 'firstRow')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "insertAssessorDetails",
												"description": "Building does not exist",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertLookupAssessorData]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_assessor_Id": {
															"value": {
																"value": "@activity('Get Assessor Details by Assessor ID').output.firstrow.AssessorId",
																"type": "Expression"
															},
															"type": "String"
														},
														"salesforce_assessor_Id": {
															"value": null,
															"type": "String"
														},
														"member_company_id": {
															"value": {
																"value": "@activity('Get Assessor Details by Assessor ID').output.firstrow.CompanyId",
																"type": "Expression"
															},
															"type": "Int32"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "insertAssessorDetailsWithSalesForceId",
												"description": "Building does exist",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertLookupAssessorData]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_assessor_Id": {
															"value": {
																"value": "@activity('Get Assessor Details by Assessor ID').output.firstRow.AssessorID",
																"type": "Expression"
															},
															"type": "String"
														},
														"salesforce_assessor_Id": {
															"value": {
																"value": "@activity('Lookup Each Assessor by Email In Salesforce').output.firstRow.Id",
																"type": "Expression"
															},
															"type": "String"
														},
														"member_company_id": {
															"value": {
																"value": "@activity('Get Assessor Details by Assessor ID').output.firstRow.CompanyId",
																"type": "Expression"
															},
															"type": "Int32"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "Lookup Each Company by ABN In Salesforce",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Get Company Details by Company Id",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from Account\nwhere NO_ABN__c = '@{activity('Get Company Details by Company Id').output.firstRow.ABN}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_company",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "If Company In Salesforce Exist",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup Each Company by ABN In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(string(activity('Lookup Each Company by ABN In Salesforce').output), 'firstRow')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "insertCompanyDetails",
												"description": "Company does not exist",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertLookupCompanyData]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_company_Id": {
															"value": {
																"value": "@activity('Get Company Details by Company Id').output.firstrow.CompanyId",
																"type": "Expression"
															},
															"type": "String"
														},
														"salesforce_company_Id": {
															"value": null,
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "insertCompanyDetailswithSalesforceIdx",
												"description": "Company does exist",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertLookupCompanyData]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_company_Id": {
															"value": {
																"value": "@activity('Get Company Details by Company Id').output.firstrow.CompanyId",
																"type": "Expression"
															},
															"type": "String"
														},
														"salesforce_company_Id": {
															"value": {
																"value": "@activity('Lookup Each Company by ABN In Salesforce').output.firstrow.Id",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "Get Assessor Details by Assessor ID",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "Select Top 1 * from AssessorsStage where AssessorId = '@{item().AssessorId}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "db_lookup_assessors",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "Get Company Details by Company Id",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "Select Top 1 * from CompanyStage where CompanyId = @{item().CompanyId}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00"
										},
										"dataset": {
											"referenceName": "db_company",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "If Officer Id is not null or empty",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(empty(string(item().OfficerId)))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Insert Anomaly",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[usp_InsertDataSyncAnomalies]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"process_name": {
															"value": {
																"value": "@pipeline().Pipeline",
																"type": "Expression"
															},
															"type": "String"
														},
														"anomaly_desc": {
															"value": {
																"value": "No Tech Officer found for this Rating header. Ignoring",
																"type": "Expression"
															},
															"type": "String"
														},
														"anomaly_type": {
															"value": "Warning",
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Get Tech Officer Details by Officer Id",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "Select Top 1 * from TechOfficersStage where [AdministratorID]= @{item().OfficerId}",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00"
													},
													"dataset": {
														"referenceName": "db_company",
														"type": "DatasetReference"
													},
													"firstRowOnly": true
												}
											},
											{
												"name": "Lookup Each Tech Officer by Email In Salesforce",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "Get Tech Officer Details by Officer Id",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SalesforceSource",
														"query": {
															"value": "Select id from User\nwhere Email like '%@{activity('Get Tech Officer Details by Officer Id').output.firstrow.Email}%'",
															"type": "Expression"
														},
														"readBehavior": "query"
													},
													"dataset": {
														"referenceName": "sf_users",
														"type": "DatasetReference"
													},
													"firstRowOnly": true
												}
											},
											{
												"name": "insertOfficerDetailsWithSalesForceId",
												"description": "Company does exist",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Lookup Each Tech Officer by Email In Salesforce",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[usp_InsertLookupTechOfficerData]",
													"storedProcedureParameters": {
														"batch_id": {
															"value": {
																"value": "@pipeline().parameters.pbatch_id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"member_officer_Id": {
															"value": {
																"value": "@item().OfficerId",
																"type": "Expression"
															},
															"type": "String"
														},
														"salesforce_user_Id": {
															"value": {
																"value": "@activity('Lookup Each Tech Officer by Email In Salesforce').output.firstrow.Id",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "NABERSStaging",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "usp_GetRating",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetRating]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_vratings": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "Array"
					},
					"_vcurrentRatingItem": {
						"type": "Array"
					},
					"_vsf_AssessorRecord": {
						"type": "Array"
					},
					"_vsf_CompanyRecord": {
						"type": "Array"
					},
					"_vsf_TechOfficerRecord": {
						"type": "Array"
					},
					"_dummy": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01a Create Assessors In Salesforce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "createNotFoundAssessors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetAssessorToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LastName",
											"type": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_StreetName",
											"type": "String"
										},
										"sink": {
											"name": "OtherStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Suburb",
											"type": "String"
										},
										"sink": {
											"name": "OtherCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_State",
											"type": "String"
										},
										"sink": {
											"name": "OtherState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Postcode",
											"type": "String"
										},
										"sink": {
											"name": "OtherPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Country",
											"type": "String"
										},
										"sink": {
											"name": "OtherCountry",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_StreetName",
											"type": "String"
										},
										"sink": {
											"name": "MailingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Suburb",
											"type": "String"
										},
										"sink": {
											"name": "MailingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_State",
											"type": "String"
										},
										"sink": {
											"name": "MailingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Postcode",
											"type": "String"
										},
										"sink": {
											"name": "MailingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Country",
											"type": "String"
										},
										"sink": {
											"name": "MailingCountry",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"name": "Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String"
										},
										"sink": {
											"name": "Title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AccreditationExpiryDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NO_Accreditation_Expiry_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "AccreditationNumber",
											"type": "String"
										},
										"sink": {
											"name": "NO_Accreditation_Number__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JoinedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NO_Join_date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "RatingTypes"
										},
										"sink": {
											"name": "NO_Rating_Types__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Regional"
										},
										"sink": {
											"name": "NO_Regional__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Metropolitan"
										},
										"sink": {
											"name": "NO_Metropolitan__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Accredition"
										},
										"sink": {
											"name": "NO_Accreditation__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "member_assessor_id",
											"type": "Int32"
										},
										"sink": {
											"name": "NO_Id_In_Member__c"
										}
									},
									{
										"source": {
											"name": "salesforce_company_id"
										},
										"sink": {
											"name": "AccountId"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_lookup_assessors",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "sf_contacts",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetSalesforce",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "createNotFoundAssessors",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetAssessorToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Variable Rating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('_vnewBuildingsInSF')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Building by Name In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from Contact\nwhere NO_Id_In_Member__c = @{item().member_assessor_id}",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_contacts",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "UpdateNewSalesforceIdForBuilding",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup Each Building by Name In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateNewSalesforceIdForAssessor]",
										"storedProcedureParameters": {
											"batch_id": {
												"value": {
													"value": "@pipeline().parameters.pbatch_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"member_assessor_id": {
												"value": {
													"value": "@item().member_assessor_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"salesforce_assessor_Id": {
												"value": {
													"value": "@activity('Lookup Each Building by Name In Salesforce').output.firstrow.Id",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "NABERSStaging",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Set Variable Rating",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_GetSalesforce",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_vnewBuildingsInSF",
							"value": {
								"value": "@activity('usp_GetSalesforce').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_defaultPremiseType": {
						"type": "String",
						"defaultValue": "Shopping Centre"
					},
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "String"
					},
					"_vnewBuildingInSF": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01a Create Building In Salesforce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "createNotFoundBuilding",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetBuildingToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "postcode",
											"type": "String"
										},
										"sink": {
											"name": "Postcode__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "state",
											"type": "String"
										},
										"sink": {
											"name": "State__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "streetname",
											"type": "String"
										},
										"sink": {
											"name": "Street_Name__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "streetnumber",
											"type": "String"
										},
										"sink": {
											"name": "Street_Number__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "suburb",
											"type": "String"
										},
										"sink": {
											"name": "Suburb__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "member_premise_id"
										},
										"sink": {
											"name": "NOCRM_External_ID__c"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_lookup_sf_buildings_ids",
								"type": "DatasetReference",
								"parameters": {
									"pbatch_id": "@pipeline().parameters.pbatch_id"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "sf_Buildings",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetSalesforce",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "createNotFoundBuilding",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetBuildingToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Variable Rating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('_vnewBuildingsInSF')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Building by Name In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from NO_Building__c \nwhere Postcode__c = '@{item().Postcode}'\nand State__c = '@{item().State}'\nand Suburb__c = '@{item().Suburb}'\nand Street_Number__c = '@{item().StreetNumber}'\nand Street_Name__c = '@{item().StreetName}'\nand Name = '@{item().Name}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_Buildings",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "UpdateNewSalesforceIdForBuilding",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup Each Building by Name In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateNewSalesforceIdForBuilding]",
										"storedProcedureParameters": {
											"batch_id": {
												"value": {
													"value": "@pipeline().parameters.pbatch_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"member_premise_id": {
												"value": {
													"value": "@item().member_premise_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"salesforce_building_Id": {
												"value": {
													"value": "@activity('Lookup Each Building by Name In Salesforce').output.firstrow.Id",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "NABERSStaging",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Set Variable Rating",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_GetSalesforce",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_vnewBuildingsInSF",
							"value": {
								"value": "@activity('usp_GetSalesforce').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_defaultCountry": {
						"type": "String",
						"defaultValue": "Australia"
					},
					"_defaultPremiseType": {
						"type": "String",
						"defaultValue": "Shopping Centre"
					},
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "String"
					},
					"_vnewBuildingInSF": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01a Create Company In Salesforce')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "createNotFoundCompany",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetCompanyToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "insert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Billing_StreetName",
											"type": "String"
										},
										"sink": {
											"name": "BillingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Suburb",
											"type": "String"
										},
										"sink": {
											"name": "BillingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_State",
											"type": "String"
										},
										"sink": {
											"name": "BillingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Postcode",
											"type": "String"
										},
										"sink": {
											"name": "BillingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_StreetName",
											"type": "String"
										},
										"sink": {
											"name": "ShippingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Suburb",
											"type": "String"
										},
										"sink": {
											"name": "ShippingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_State",
											"type": "String"
										},
										"sink": {
											"name": "ShippingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Postcode",
											"type": "String"
										},
										"sink": {
											"name": "ShippingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"name": "Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CompanyURL",
											"type": "String"
										},
										"sink": {
											"name": "Website",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String"
										},
										"sink": {
											"name": "Company_Record_Type__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ABN",
											"type": "String"
										},
										"sink": {
											"name": "NO_ABN__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PIInsuranceExpiryDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NO_Professional_Indemnity_Expiry_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "PLInsuranceExpiryDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "NO_Public_Liability_Expiry_Date__c",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SAPCustomerNo",
											"type": "String"
										},
										"sink": {
											"name": "NO_SAP_Customer_Number__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ShortName",
											"type": "String"
										},
										"sink": {
											"name": "NO_Short_Name__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Mailing_Country"
										},
										"sink": {
											"name": "ShippingCountry",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Billing_Country"
										},
										"sink": {
											"name": "BillingCountry",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "db_lookup_assessors",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "sf_company",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Update Batch",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogBatchDetails]",
							"storedProcedureParameters": {
								"batch_id": {
									"value": {
										"value": "@pipeline().parameters.pbatch_id",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"process_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"stage": {
									"value": "In Progress",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "NABERSStaging",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "usp_GetCompany",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "createNotFoundCompany",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_GetCompanyToCreateInSalesForce]",
								"storedProcedureParameters": {
									"batchid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.pbatch_id",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "db_members_rating",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "forEachRow",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Variable Rating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('_vnewBuildingsInSF')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Lookup Each Building by Name In Salesforce",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SalesforceSource",
											"query": {
												"value": "Select id from Account\nwhere NO_ABN__c = '@{item().ABN}'",
												"type": "Expression"
											},
											"readBehavior": "query"
										},
										"dataset": {
											"referenceName": "sf_company",
											"type": "DatasetReference"
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "UpdateNewSalesforceIdForBuilding",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup Each Building by Name In Salesforce",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateNewSalesforceIdForCompany]",
										"storedProcedureParameters": {
											"batch_id": {
												"value": {
													"value": "@pipeline().parameters.pbatch_id",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"member_company_id": {
												"value": {
													"value": "@item().CompanyID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"salesforce_company_Id": {
												"value": {
													"value": "@activity('Lookup Each Building by Name In Salesforce').output.firstrow.Id",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "NABERSStaging",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Set Variable Rating",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "usp_GetCompany",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "_vnewBuildingsInSF",
							"value": {
								"value": "@activity('usp_GetCompany').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"pbatch_id": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"variables": {
					"_defaultCountry": {
						"type": "String",
						"defaultValue": "Australia"
					},
					"_defaultPremiseType": {
						"type": "String",
						"defaultValue": "Shopping Centre"
					},
					"_vnewBuildingsInSF": {
						"type": "Array"
					},
					"_vsf_buildingRecord": {
						"type": "String"
					},
					"_vnewBuildingInSF": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}