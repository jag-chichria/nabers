{
	"name": "01_Transform_HoursOfService",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "db_stage_hours_Of_service",
						"type": "DatasetReference"
					},
					"name": "getStagedHoursOfService"
				},
				{
					"dataset": {
						"referenceName": "db_stage_food_courts",
						"type": "DatasetReference"
					},
					"name": "getStageFoodCourt"
				},
				{
					"dataset": {
						"referenceName": "db_stage_gymnasiums",
						"type": "DatasetReference"
					},
					"name": "getStageGymnasiums"
				},
				{
					"dataset": {
						"referenceName": "db_stage_cinemas",
						"type": "DatasetReference"
					},
					"name": "getStageCinemas"
				},
				{
					"dataset": {
						"referenceName": "db_stage_parking_space",
						"type": "DatasetReference"
					},
					"name": "getStageParkingSpace"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "db_transformed_attribute_type",
						"type": "DatasetReference"
					},
					"name": "sinkTransformdAttributeType"
				},
				{
					"dataset": {
						"referenceName": "db_transformed_attribute_type",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "db_transformed_attribute_type",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "db_transformed_attribute_type",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "db_transformed_attribute_type",
						"type": "DatasetReference"
					},
					"name": "sink4"
				}
			],
			"transformations": [
				{
					"name": "filterByBatch"
				},
				{
					"name": "transformedColumns"
				},
				{
					"name": "filterStageFoodCourtByBatch"
				},
				{
					"name": "filterStageGymnasiumByBatch"
				},
				{
					"name": "filterStageCinemasByBatch"
				},
				{
					"name": "filterStageParkingByBatch"
				},
				{
					"name": "transformedFoodCourtColumns"
				},
				{
					"name": "transformedGymnasium"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DerivedColumn2"
				}
			],
			"script": "parameters{\n\tpbatch_id as integer (1)\n}\nsource(output(\n\t\tid as integer,\n\t\tRatingHeaderID as integer,\n\t\tAreaID as integer,\n\t\tTenancyName as string,\n\t\tListedArea as string,\n\t\tblocknumber as string,\n\t\tIsListedAsCentralServiced as boolean,\n\t\tIsTenancyServicingCheck as boolean,\n\t\tIsAreaConfirmed as boolean,\n\t\tIsCentralServicingResult as boolean,\n\t\tRatedCSArea as string,\n\t\tRatedGLAR as string,\n\t\tWeeksVacant as string,\n\t\tExtentedHours as string,\n\t\tHours as string,\n\t\tHoursArea as string,\n\t\tIsExtendedHoursEnabled as string,\n\t\tIsHoursEnabled as string,\n\t\tCoreHours as decimal(12,3),\n\t\tbatch_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getStagedHoursOfService\nsource(output(\n\t\tRatingHeaderID as string,\n\t\tFoodCourtID as string,\n\t\tFoodCourtDesc as string,\n\t\tNumberSeats as string,\n\t\tNumberSeatsOutOfSvcGT4Weeks as string,\n\t\tOutOfServiceWeeks as string,\n\t\tRatedNumberSeats as string,\n\t\tbatch_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getStageFoodCourt\nsource(output(\n\t\tRatingHeaderID as string,\n\t\tGymID as string,\n\t\tGymDesc as string,\n\t\tConfirmedArea as string,\n\t\tIsEstimate as string,\n\t\tIsCentralServicing as string,\n\t\tOutOfServiceWeeks as string,\n\t\tRatedGymArea as string,\n\t\tbatch_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getStageGymnasiums\nsource(output(\n\t\tRatingHeaderID as string,\n\t\tCinemaID as string,\n\t\tCinemaDesc as string,\n\t\tNumberTheatrettes as string,\n\t\tNumberOutOfSvcGT4Weeks as string,\n\t\tOutOfServiceWeeks as string,\n\t\tRatedNumberTheatrettes as string,\n\t\tbatch_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getStageCinemas\nsource(output(\n\t\tRatingHeaderID as string,\n\t\tBlockID as string,\n\t\tBlockDesc as string,\n\t\tVentilationType as string,\n\t\tNumberParkingSpaces as string,\n\t\tNumberOutOfSvcGT4Weeks as string,\n\t\tOutOfServiceWeeks as string,\n\t\tSpacesNatural as string,\n\t\tSpacesMechanical as string,\n\t\tbatch_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getStageParkingSpace\ngetStagedHoursOfService filter(equals(toInteger(batch_id), $pbatch_id)) ~> filterByBatch\nfilterByBatch derive(D_RatingAttributeType = 'Area',\n\t\tD_Tenancy_Servcing = iif(IsTenancyServicingCheck,'Yes','No'),\n\t\tD_Centrally_Serviced = iif(IsListedAsCentralServiced, 'Centrally serviced','Not centrally serviced')) ~> transformedColumns\ngetStageFoodCourt filter(equals(toInteger(batch_id), $pbatch_id)) ~> filterStageFoodCourtByBatch\ngetStageGymnasiums filter(equals(toInteger(batch_id), $pbatch_id)) ~> filterStageGymnasiumByBatch\ngetStageCinemas filter(equals(toInteger(batch_id), $pbatch_id)) ~> filterStageCinemasByBatch\ngetStageParkingSpace filter(equals(toInteger(batch_id), $pbatch_id)) ~> filterStageParkingByBatch\nfilterStageFoodCourtByBatch derive(D_RatingAttribute = 'Food courts') ~> transformedFoodCourtColumns\nfilterStageGymnasiumByBatch derive(D_RatingAttribute = 'Gymnasiums') ~> transformedGymnasium\nfilterStageCinemasByBatch derive(D_RatingAttribute = 'Cinemas') ~> DerivedColumn1\nfilterStageParkingByBatch derive(D_RatingAttribute = 'Parking spaces') ~> DerivedColumn2\ntransformedColumns sink(input(\n\t\tId as integer,\n\t\tattribute_id as integer,\n\t\tmember_rating_id as integer,\n\t\tbatch_id as integer,\n\t\tarea_centrally_serviced as string,\n\t\tattribute_type as string,\n\t\ttenancy_servicing as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tattribute_id = AreaID,\n\t\tmember_rating_id = RatingHeaderID,\n\t\tbatch_id,\n\t\tattribute_type = D_RatingAttributeType,\n\t\tarea_centrally_serviced = D_Centrally_Serviced,\n\t\ttenancy_servicing = D_Tenancy_Servcing\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkTransformdAttributeType\ntransformedFoodCourtColumns sink(input(\n\t\tId as integer,\n\t\tattribute_id as integer,\n\t\tmember_rating_id as integer,\n\t\tbatch_id as integer,\n\t\tarea_centrally_serviced as string,\n\t\tattribute_type as string,\n\t\ttenancy_servicing as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tattribute_id = FoodCourtID,\n\t\tmember_rating_id = RatingHeaderID,\n\t\tbatch_id,\n\t\tattribute_type = D_RatingAttribute\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\ntransformedGymnasium sink(input(\n\t\tId as integer,\n\t\tattribute_id as integer,\n\t\tmember_rating_id as integer,\n\t\tbatch_id as integer,\n\t\tarea_centrally_serviced as string,\n\t\tattribute_type as string,\n\t\ttenancy_servicing as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tattribute_id = GymID,\n\t\tmember_rating_id = RatingHeaderID,\n\t\tbatch_id,\n\t\tattribute_type = D_RatingAttribute\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2\nDerivedColumn1 sink(input(\n\t\tId as integer,\n\t\tattribute_id as integer,\n\t\tmember_rating_id as integer,\n\t\tbatch_id as integer,\n\t\tarea_centrally_serviced as string,\n\t\tattribute_type as string,\n\t\ttenancy_servicing as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tattribute_id = CinemaID,\n\t\tmember_rating_id = RatingHeaderID,\n\t\tbatch_id,\n\t\tattribute_type = D_RatingAttribute\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink3\nDerivedColumn2 sink(input(\n\t\tId as integer,\n\t\tattribute_id as integer,\n\t\tmember_rating_id as integer,\n\t\tbatch_id as integer,\n\t\tarea_centrally_serviced as string,\n\t\tattribute_type as string,\n\t\ttenancy_servicing as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tattribute_id = BlockID,\n\t\tmember_rating_id = RatingHeaderID,\n\t\tbatch_id,\n\t\tattribute_type = D_RatingAttribute\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink4"
		}
	}
}