{
	"name": "01_Transform_Company_Assessor",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "db_lookup_sf_company_ids",
						"type": "DatasetReference"
					},
					"name": "getLookupCompany"
				},
				{
					"dataset": {
						"referenceName": "db_lookup_sf_assessors_ids",
						"type": "DatasetReference"
					},
					"name": "getLookupAssessor"
				},
				{
					"dataset": {
						"referenceName": "db_stage_assessors",
						"type": "DatasetReference"
					},
					"name": "getStageAssessors"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "db_lookup_sf_assessors_ids",
						"type": "DatasetReference"
					},
					"name": "targetLookupSalesforceAssessor"
				},
				{
					"dataset": {
						"referenceName": "db_lookup_sf_assessors_ids",
						"type": "DatasetReference"
					},
					"name": "updateCleanedData"
				}
			],
			"transformations": [
				{
					"name": "joinLookupAssessorCompany"
				},
				{
					"name": "updateIfSalesforceCompanyIdIsEmpty"
				},
				{
					"name": "newRequiredColumns"
				},
				{
					"name": "getForCurrentBatch"
				},
				{
					"name": "joinStagedAssessors"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "parameters{\n\tpDefaultCountry as string ('Australia'),\n\tpbatch_id as integer (1),\n\tpActive as string ('Active'),\n\tpPortalAccess as string ('NABERS Online')\n}\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_company_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_company_id as integer,\n\t\tMailing_Country as string,\n\t\tBilling_Country as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookupCompany\nsource(output(\n\t\tid as integer,\n\t\tsalesforce_assessor_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_assessor_id as integer,\n\t\tsalesforce_company_id as string,\n\t\tmember_company_id as integer,\n\t\tsync_status as string,\n\t\tmailing_country as string,\n\t\tbilling_country as string,\n\t\taccredition as string,\n\t\trating_type as string,\n\t\tregional_cleaned as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getLookupAssessor\nsource(output(\n\t\tcompanyid as integer,\n\t\tAssessorId as integer,\n\t\tUserId as integer,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tTitle as string,\n\t\tMailing_StreetNumber as string,\n\t\tMailing_StreetName as string,\n\t\tMailing_Suburb as string,\n\t\tMailing_Postcode as string,\n\t\tMailing_State as string,\n\t\tBilling_StreetNumber as string,\n\t\tBilling_StreetName as string,\n\t\tBilling_Suburb as string,\n\t\tBilling_Postcode as string,\n\t\tBilling_State as string,\n\t\tPhone as string,\n\t\tEmail as string,\n\t\tJoinedDate as timestamp,\n\t\tAccreditationDate as timestamp,\n\t\tAccreditationExpiryDate as timestamp,\n\t\tAccreditationNumber as string,\n\t\tEnergyFlag as boolean,\n\t\tWaterFlag as boolean,\n\t\tWasteFlag as boolean,\n\t\tbatch_id as integer,\n\t\tRequireSupervisionSC as boolean,\n\t\tMetropolitan as string,\n\t\tRegional as string,\n\t\tRetailFlag as integer,\n\t\tHospitalFlag as integer,\n\t\tHotelFlag as integer,\n\t\tOfficeFlag as integer,\n\t\tApartmentBuildingFlag as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> getStageAssessors\ngetLookupAssessor, getLookupCompany join(getLookupAssessor@member_company_id == getLookupCompany@member_company_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinLookupAssessorCompany\nnewRequiredColumns alterRow(updateIf(isNull(getLookupAssessor@salesforce_company_id)||length(trim(getLookupAssessor@salesforce_company_id))==0)) ~> updateIfSalesforceCompanyIdIsEmpty\njoinStagedAssessors derive(D_DefaultMailingCountry = $pDefaultCountry,\n\t\tD_DefaultBillingCountry = $pDefaultCountry,\n\t\tD_RatingTypes = iif(true() == EnergyFlag, 'Energy', '')\r\n+ iif(true() == WaterFlag, iif(true() == EnergyFlag, '; Water', 'Water'), ''),\n\t\tD_Accredition = iif(1 == RetailFlag, 'Shopping Centre', '')\r\n+ iif(1 == HotelFlag, iif(1 == RetailFlag, '; Hotel', 'Hotel'), '')\r\n+ iif(1 == OfficeFlag, iif(1 == RetailFlag || 1 == HotelFlag, '; Office', 'Office'), '')\r\n+ iif(1 == ApartmentBuildingFlag, iif(1 == RetailFlag || 1 == HotelFlag || 1 == OfficeFlag, '; Apartment Building', 'Apartment Building'), '')\r\n+ iif(1 == HospitalFlag, iif(1 == RetailFlag || 1 == HotelFlag || 1 == OfficeFlag|| 1 == ApartmentBuildingFlag, '; Public Hospital', 'Public Hospital'), ''),\n\t\tD_Regional_Cleaned = iif(isNull(Regional), Metropolitan, Regional),\n\t\tD_Salesforce_User_Active = 'Active') ~> newRequiredColumns\ngetStageAssessors filter(equals(batch_id, $pbatch_id)) ~> getForCurrentBatch\njoinLookupAssessorCompany, getStageAssessors join(member_assessor_id == AssessorId,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> joinStagedAssessors\nnewRequiredColumns alterRow(updateIf(equals($pbatch_id,getLookupAssessor@batch_id))) ~> AlterRow1\nupdateIfSalesforceCompanyIdIsEmpty sink(input(\n\t\tid as integer,\n\t\tsalesforce_assessor_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_assessor_id as integer,\n\t\tsalesforce_company_id as string,\n\t\tmember_company_id as integer,\n\t\tsync_status as string,\n\t\tmailing_country as string,\n\t\tbilling_country as string,\n\t\taccredition as string,\n\t\trating_type as string,\n\t\tregional_cleaned as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['id'],\n\tformat: 'table',\n\tmapColumn(\n\t\tsalesforce_company_id = getLookupCompany@salesforce_company_Id,\n\t\tid = getLookupAssessor@id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> targetLookupSalesforceAssessor\nAlterRow1 sink(input(\n\t\tid as integer,\n\t\tsalesforce_assessor_Id as string,\n\t\tbatch_id as integer,\n\t\tcreated_on as timestamp,\n\t\tmember_assessor_id as integer,\n\t\tsalesforce_company_id as string,\n\t\tmember_company_id as integer,\n\t\tsync_status as string,\n\t\tmailing_country as string,\n\t\tbilling_country as string,\n\t\taccredition as string,\n\t\trating_type as string,\n\t\tregional_cleaned as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['id'],\n\tformat: 'table',\n\tmapColumn(\n\t\tmailing_country = D_DefaultMailingCountry,\n\t\tbilling_country = D_DefaultBillingCountry,\n\t\trating_type = D_RatingTypes,\n\t\taccredition = D_Accredition,\n\t\tregional_cleaned = D_Regional_Cleaned,\n\t\tid = getLookupAssessor@id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> updateCleanedData"
		}
	}
}