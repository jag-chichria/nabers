{
	"name": "00 Populate Staging_copy1",
	"properties": {
		"activities": [
			{
				"name": "copyAssessor",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "Select \n\tdistinct \n\trh.RatingHeaderID,\n\trcc.companyid,\n\trc.RatingContractorID as AssessorId,\n\trcuser.UserID as UserId,\n\trcuser.FirstName, \n\trcuser.LastName, \n\ttc.ClassName as Title, \n\tmaddr.[StreetNumber] as Mailing_StreetNumber,\n    maddr.[StreetName] as Mailing_StreetName,\n    maddr.[Suburb] as Mailing_Suburb,\n    maddr.[Postcode] as Mailing_Postcode,\n\tmst.ClassName as Mailing_State,\n\n\tbaddr.[StreetNumber] as Billing_StreetNumber,\n    baddr.[StreetName] as Billing_StreetName,\n    baddr.[Suburb] as Billing_Suburb,\n    baddr.[Postcode] as Billing_Postcode,\n\tbst.ClassName as Billing_State,\n\tPhone,\n\tMobile,\n\tEmail,\n\tJoinedDate,\n\tAccreditationDate,\n\tAccreditationExpiryDate,\n\tAccreditationNumber,\n\tEnergyFlag, \n\tWaterFlag, \n\tWasteFlag\n\t, @{pipeline().parameters.pBatchId} as batch_id\n\t, RequireSupervisionSC\n\t, (select  stuff(list,1,1,'')\n\t\tfrom  (( Select ';' + cast(crst.ClassCode as varchar(16)) FROM PVBMSDB4202.nabersdb.dbo.tblRatingContractorAvailability  rca \n\t\t\t\t\tINNER JOIN PVBMSDB4202.nabersdb.dbo.tblClassification crt on crt.ClassificationID = rca.AvailabilityTypeID\n\t\t\t\t\tleft join PVBMSDB4202.nabersdb.dbo.tblClassification crst on crst.ClassificationID = rca.StateId\n\t\t\t\t\tand rca.RatingContractorID = rc.RatingContractorID and crt.ClassificationID = 459\n\t\t\t\t\tfor     xml path(''))) as Sub(list)) as Metropolitan\n\t, (select  stuff(list,1,1,'')\n\t\tfrom  (( Select ';' + cast(crst.ClassCode as varchar(16)) FROM PVBMSDB4202.nabersdb.dbo.tblRatingContractorAvailability  rca \n\t\t\t\t\tINNER JOIN PVBMSDB4202.nabersdb.dbo.tblClassification crt on crt.ClassificationID = rca.AvailabilityTypeID\n\t\t\t\t\tleft join PVBMSDB4202.nabersdb.dbo.tblClassification crst on crst.ClassificationID = rca.StateId\n\t\t\t\t\tand rca.RatingContractorID = rc.RatingContractorID and crt.ClassificationID = 460\n\t\t\t\t\tfor     xml path(''))) as Sub(list)) as Regional\n\t, case when coalesce(RetailFlag, '') = '' then 0 else RetailFlag end as RetailFlag \n\t, case when coalesce(HospitalFlag, '') = '' then 0 else HospitalFlag end as HospitalFlag \n\t, case when coalesce(HotelFlag, '') = '' then 0 else HotelFlag end as HotelFlag \n\t, case when coalesce(OfficeFlag, '') = '' then 0 else OfficeFlag end as OfficeFlag \n\t, case when coalesce(ApartmentBuildingFlag , '') = '' then 0 else ApartmentBuildingFlag end as ApartmentBuildingFlag \n\t\n\t--into AssessorsStage\n\tfrom \n\t\tPVBMSDB4202.nabersdb.dbo.tblRatingHeader rh\n\t\tleft join PVBMSDB4202.nabersdb.dbo.tblRatingContractor rc on rc.RatingContractorID = rh.AssessorID\n\t\tleft join PVBMSDB4202.nabersdb.dbo.tblUser rcuser on rcuser.UserID = rc.UserID\n\t\tleft join PVBMSDB4202.nabersdb.dbo.tblClassification tc on tc.ClassificationID = TitleID\n\t\tleft join PVBMSDB4202.nabersdb.dbo.tblAddress maddr on maddr.AddressId = MailingAddressID\n\t\tleft join PVBMSDB4202.nabersdb.dbo.tblAddress baddr on baddr.AddressId = BillingAddressID\n\t\tleft join PVBMSDB4202.nabersdb.dbo.tblClassification mst on mst.ClassificationID = maddr.StateId\n\t\tleft join PVBMSDB4202.nabersdb.dbo.tblClassification bst on bst.ClassificationID = baddr.StateId\n\t\tinner join PVBMSDB4202.nabersdb.dbo.tblRatingContractorCompany rcc on rc.RatingContractorID = rcc.assessorid\n\t\t\n\tWhere rh.PremiseTypeID = 55 and \n\t(EndEffectiveDate is null or EndEffectiveDate > getdate())\n\tand RatingStatusID in (157,158)\t\t\t\n and rh.RatingHeaderId in (@{pipeline().parameters.pDeltaRatingHeaderIds})\n\torder by RatingHeaderID",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "RatingHeaderID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "RatingHeaderID",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "companyid",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "companyid",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "AssessorId",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "AssessorId",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "UserId",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "UserId",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "LastName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "LastName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Title",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Title",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Mailing_StreetNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Mailing_StreetNumber",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Mailing_StreetName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Mailing_StreetName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Mailing_Suburb",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Mailing_Suburb",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Mailing_Postcode",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Mailing_Postcode",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Mailing_State",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Mailing_State",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Billing_StreetNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Billing_StreetNumber",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Billing_StreetName",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Billing_StreetName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Billing_Suburb",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Billing_Suburb",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Billing_Postcode",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Billing_Postcode",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Billing_State",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Billing_State",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Phone",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Phone",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Mobile",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Mobile",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Email",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Email",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "JoinedDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "JoinedDate",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "AccreditationDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "AccreditationDate",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "AccreditationExpiryDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "AccreditationExpiryDate",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "AccreditationNumber",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "AccreditationNumber",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "EnergyFlag",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "EnergyFlag",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "WaterFlag",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "WaterFlag",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "WasteFlag",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "WasteFlag",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "RequireSupervisionSC",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "RequireSupervisionSC",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "Metropolitan",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Metropolitan",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Regional",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Regional",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "RetailFlag",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "RetailFlag",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "HospitalFlag",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "HospitalFlag",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "HotelFlag",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "HotelFlag",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "OfficeFlag",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "OfficeFlag",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "ApartmentBuildingFlag",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "ApartmentBuildingFlag",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "batch_id",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "batch_id",
									"type": "Int32",
									"physicalType": "int"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "db_source_rating_rowversions",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "db_stage_assessors",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"pBatchId": {
				"type": "string",
				"defaultValue": "1"
			},
			"pDeltaRatingHeaderIds": {
				"type": "string"
			}
		},
		"variables": {
			"deltaRowHeaderIds": {
				"type": "String"
			},
			"newBatchId": {
				"type": "String"
			}
		},
		"annotations": []
	}
}