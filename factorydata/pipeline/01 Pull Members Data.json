{
	"name": "01 Pull Members Data",
	"properties": {
		"activities": [
			{
				"name": "forEachRow",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Set Variable Rating",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('_vratings')",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Lookup Each Building by Name In Salesforce",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set variable _currentRatingItem",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SalesforceSource",
									"query": {
										"value": "Select id from NO_Building__c \nwhere Postcode__c = '@{variables('_vcurrentRatingItem')[0].Postcode}'\nand State__c = '@{variables('_vcurrentRatingItem')[0].State}'\nand Suburb__c = '@{variables('_vcurrentRatingItem')[0].Suburb}'\nand Street_Number__c = '@{variables('_vcurrentRatingItem')[0].StreetNumber}'\nand Street_Name__c = '@{variables('_vcurrentRatingItem')[0].StreetName}'\nand Name = '@{variables('_vcurrentRatingItem')[0].PremiseName}'",
										"type": "Expression"
									},
									"readBehavior": "query"
								},
								"dataset": {
									"referenceName": "sf_Buildings",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "If Building In Salesforce Exist",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set Variable _sf_buildingRecord",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(length(variables('_vsf_buildingRecord')), 0)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "insertPremiseDetails",
										"description": "Building does not exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[usp_InsertLookupPremiseData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_premise_id": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].PremiseID",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"name": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].PremiseName",
														"type": "Expression"
													},
													"type": "String"
												},
												"postcode": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].Postcode",
														"type": "Expression"
													},
													"type": "String"
												},
												"salesforcebuildingId": {
													"value": "",
													"type": "String"
												},
												"state": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].State",
														"type": "Expression"
													},
													"type": "String"
												},
												"streetname": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].StreetName",
														"type": "Expression"
													},
													"type": "String"
												},
												"streetnumber": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].StreetNumber",
														"type": "Expression"
													},
													"type": "String"
												},
												"suburb": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].Suburb",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "insertPremiseDetailsWithSalesForceId",
										"description": "Building does exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[usp_InsertLookupPremiseData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_premise_id": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].PremiseID",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"name": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].PremiseName",
														"type": "Expression"
													},
													"type": "String"
												},
												"postcode": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].Postcode",
														"type": "Expression"
													},
													"type": "String"
												},
												"salesforcebuildingId": {
													"value": {
														"value": "@activity('Lookup Each Building by Name In Salesforce').Output.value[0].Id",
														"type": "Expression"
													},
													"type": "String"
												},
												"state": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].State",
														"type": "Expression"
													},
													"type": "String"
												},
												"streetname": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].StreetName",
														"type": "Expression"
													},
													"type": "String"
												},
												"streetnumber": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].StreetNumber",
														"type": "Expression"
													},
													"type": "String"
												},
												"suburb": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].Suburb",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "Set Variable _sf_buildingRecord",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Lookup Each Building by Name In Salesforce",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "_vsf_buildingRecord",
								"value": {
									"value": "@activity('Lookup Each Building by Name In Salesforce').output.value",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set variable _currentRatingItem",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "_vcurrentRatingItem",
								"value": {
									"value": "@item()",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup Each Assessor by Name In Salesforce",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Set variable _currentRatingItem",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SalesforceSource",
									"query": {
										"value": "Select id from NO_Building__c \nwhere Postcode__c = '@{variables('_vcurrentRatingItem')[0].Postcode}'\nand State__c = '@{variables('_vcurrentRatingItem')[0].State}'\nand Suburb__c = '@{variables('_vcurrentRatingItem')[0].Suburb}'\nand Street_Number__c = '@{variables('_vcurrentRatingItem')[0].StreetNumber}'\nand Street_Name__c = '@{variables('_vcurrentRatingItem')[0].StreetName}'\nand Name = '@{variables('_vcurrentRatingItem')[0].PremiseName}'",
										"type": "Expression"
									},
									"readBehavior": "query"
								},
								"dataset": {
									"referenceName": "sf_Buildings",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Set Variable _sf_AssessorRecord",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Lookup Each Assessor by Name In Salesforce",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "_vsf_AssessorRecord",
								"value": {
									"value": "@activity('Lookup Each Assessor by Name In Salesforce').output.value",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Assessor In Salesforce Exist",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set Variable _sf_AssessorRecord",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(length(variables('_vsf_AssessorRecord')), 0)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "insertAssessorDetails",
										"description": "Building does not exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[usp_InsertLookupPremiseData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_premise_id": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].PremiseID",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"name": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].PremiseName",
														"type": "Expression"
													},
													"type": "String"
												},
												"postcode": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].Postcode",
														"type": "Expression"
													},
													"type": "String"
												},
												"salesforcebuildingId": {
													"value": "",
													"type": "String"
												},
												"state": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].State",
														"type": "Expression"
													},
													"type": "String"
												},
												"streetname": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].StreetName",
														"type": "Expression"
													},
													"type": "String"
												},
												"streetnumber": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].StreetNumber",
														"type": "Expression"
													},
													"type": "String"
												},
												"suburb": {
													"value": {
														"value": "@variables('_vcurrentRatingItem')[0].Suburb",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "insertAssessorDetailsWithSalesForceId",
										"description": "Building does exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[usp_InsertLookupAssessorData]",
											"storedProcedureParameters": {
												"AccreditationDate": {
													"value": "",
													"type": "DateTime"
												},
												"AccreditationExpiryDate": {
													"value": "",
													"type": "DateTime"
												},
												"AccreditationNumber": {
													"value": "",
													"type": "String"
												},
												"batch_id": {
													"value": "@pipeline().parameters.pbatch_id",
													"type": "Int32"
												},
												"Billing_Postcode": {
													"value": "",
													"type": "String"
												},
												"Billing_State": {
													"value": "",
													"type": "String"
												},
												"Billing_StreetName": {
													"value": "",
													"type": "String"
												},
												"Billing_StreetNumber": {
													"value": "",
													"type": "String"
												},
												"Billing_Suburb": {
													"value": "",
													"type": "String"
												},
												"Email": {
													"value": "",
													"type": "String"
												},
												"FirstName": {
													"value": "",
													"type": "String"
												},
												"JoinedDate": {
													"value": "",
													"type": "DateTime"
												},
												"LastName": {
													"value": "",
													"type": "String"
												},
												"Mailing_Postcode": {
													"value": "",
													"type": "String"
												},
												"Mailing_State": {
													"value": "",
													"type": "String"
												},
												"Mailing_StreetName": {
													"value": "",
													"type": "String"
												},
												"Mailing_StreetNumber": {
													"value": "",
													"type": "String"
												},
												"Mailing_Suburb": {
													"value": "",
													"type": "String"
												},
												"member_assessor_Id": {
													"value": "",
													"type": "String"
												},
												"Phone": {
													"value": "",
													"type": "String"
												},
												"salesforce_assessor_Id": {
													"value": "",
													"type": "String"
												},
												"Title": {
													"value": "",
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "usp_GetRating",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Update Batch",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[usp_GetRating]",
						"storedProcedureParameters": {
							"batchid": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.pbatch_id",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "db_members_rating",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Set Variable Rating",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "usp_GetRating",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "_vratings",
					"value": [
						"@activity('usp_GetRating').output.value"
					]
				}
			},
			{
				"name": "Update Batch",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_LogBatchDetails]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@pipeline().parameters.pbatch_id",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"process_name": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"stage": {
							"value": "'In Progress'",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"pbatch_id": {
				"type": "int",
				"defaultValue": 1
			}
		},
		"variables": {
			"_vratings": {
				"type": "Array"
			},
			"_vsf_buildingRecord": {
				"type": "Array"
			},
			"_vcurrentRatingItem": {
				"type": "Array"
			},
			"_vsf_AssessorRecord": {
				"type": "String"
			}
		},
		"annotations": []
	}
}