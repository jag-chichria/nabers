{
	"name": "01 Pull Members Data",
	"properties": {
		"activities": [
			{
				"name": "forEachRow",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "usp_GetRating",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('usp_GetRating').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Lookup Each Building by Address In Salesforce",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SalesforceSource",
									"query": {
										"value": "Select id from NO_Building__c \nwhere Postcode__c = '@{item().Postcode}'\nand State__c = '@{item().State}'\nand Suburb__c = '@{item().Suburb}'\nand Street_Number__c = '@{item().StreetNumber}'\nand Street_Name__c = '@{item().StreetName}'\nand Name = '@{item().PremiseName}'",
										"type": "Expression"
									},
									"readBehavior": "query"
								},
								"dataset": {
									"referenceName": "sf_Buildings",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "If Building In Salesforce Exist",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set Variable _sf_buildingRecord",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(length(variables('_vsf_buildingRecord')), 0)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "insertPremiseDetails",
										"description": "Building does not exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[usp_InsertLookupBuildingData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_premise_id": {
													"value": {
														"value": "@item().PremiseID",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"salesforce_building_Id": {
													"value": "",
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "insertPremiseDetailsWithSalesForceId",
										"description": "Building does exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[usp_InsertLookupBuildingData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_premise_id": {
													"value": {
														"value": "@item().PremiseID",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"salesforce_building_Id": {
													"value": {
														"value": "@activity('Lookup Each Building by Address In Salesforce').Output.value[0].Id",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "Set Variable _sf_buildingRecord",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Lookup Each Building by Address In Salesforce",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "_vsf_buildingRecord",
								"value": {
									"value": "@activity('Lookup Each Building by Address In Salesforce').output.value",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup Each Assessor by Email In Salesforce",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Get Assessor Details by Assessor ID",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SalesforceSource",
									"query": {
										"value": "Select id from Contact\nwhere Email= '@{activity('Get Assessor Details by Assessor ID').output.value[0].Email}'",
										"type": "Expression"
									},
									"readBehavior": "query"
								},
								"dataset": {
									"referenceName": "sf_contacts",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Set Variable _sf_AssessorRecord",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Lookup Each Assessor by Email In Salesforce",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "_vsf_AssessorRecord",
								"value": {
									"value": "@activity('Lookup Each Assessor by Email In Salesforce').output.value",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Assessor In Salesforce Exist",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set Variable _sf_AssessorRecord",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(length(variables('_vsf_AssessorRecord')), 0)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "insertAssessorDetails",
										"description": "Building does not exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[usp_InsertLookupAssessorData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_assessor_Id": {
													"value": {
														"value": "@activity('Get Assessor Details by Assessor ID').output.value[0].AssessorId",
														"type": "Expression"
													},
													"type": "String"
												},
												"salesforce_assessor_Id": {
													"value": null,
													"type": "String"
												},
												"member_company_id": {
													"value": {
														"value": "@activity('Get Assessor Details by Assessor ID').output.value[0].CompanyId",
														"type": "Expression"
													},
													"type": "Int32"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "insertAssessorDetailsWithSalesForceId",
										"description": "Building does exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[usp_InsertLookupAssessorData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_assessor_Id": {
													"value": {
														"value": "@activity('usp_GetRating').output.value[0].AssessorID",
														"type": "Expression"
													},
													"type": "String"
												},
												"salesforce_assessor_Id": {
													"value": {
														"value": "@activity('Lookup Each Assessor by Email In Salesforce').output.value[0].Id",
														"type": "Expression"
													},
													"type": "String"
												},
												"member_company_id": {
													"value": {
														"value": "@activity('Get Assessor Details by Assessor ID').output.value[0].CompanyId",
														"type": "Expression"
													},
													"type": "Int32"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "Lookup Each Company by ABN In Salesforce",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Get Company Details by Company Id",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SalesforceSource",
									"query": {
										"value": "Select id from Account\nwhere NO_ABN__c = '@{activity('Get Company Details by Company Id').output.value[0].ABN}'",
										"type": "Expression"
									},
									"readBehavior": "query"
								},
								"dataset": {
									"referenceName": "sf_company",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Set Variable _sf_CompanyRecord",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Lookup Each Company by ABN In Salesforce",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "_vsf_CompanyRecord",
								"value": {
									"value": "@activity('Lookup Each Company by ABN In Salesforce').output.value",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Company In Salesforce Exist",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set Variable _sf_CompanyRecord",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(length(variables('_vsf_CompanyRecord')), 0)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "insertCompanyDetails",
										"description": "Company does not exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[usp_InsertLookupCompanyData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_company_Id": {
													"value": {
														"value": "@activity('Get Company Details by Company Id').output.value[0].CompanyId",
														"type": "Expression"
													},
													"type": "String"
												},
												"salesforce_company_Id": {
													"value": null,
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "insertCompanyDetailsWithSalesForceId_copy1",
										"description": "Company does exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[usp_InsertLookupCompanyData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_company_Id": {
													"value": {
														"value": "@activity('usp_GetRating').output.value[0].CompanyId",
														"type": "Expression"
													},
													"type": "String"
												},
												"salesforce_company_Id": {
													"value": {
														"value": "@activity('Lookup Each Company by ABN In Salesforce').output.value[0].Id",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "Get Assessor Details by Assessor ID",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "Select Top 1 * from AssessorsStage where AssessorId = '@{item().AssessorId}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "db_lookup_assessors",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Get Company Details by Company Id",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "Select Top 1 * from CompanyStage where CompanyId = @{item().CompanyId}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "db_company",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Get Tech Officer Details by Officer Id",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "Select Top 1 * from TechOfficersStage where [AdministratorID]= @{item().OfficerId}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "db_company",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Lookup Each Tech Officer by Email In Salesforce",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Get Tech Officer Details by Officer Id",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SalesforceSource",
									"query": {
										"value": "Select id from User\nwhere Email like '%@{activity('Get Tech Officer Details by Officer Id').output.value[0].Email}%'",
										"type": "Expression"
									},
									"readBehavior": "query"
								},
								"dataset": {
									"referenceName": "sf_users",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "If User In Salesforce Exist",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set Variable _vsf_TechOfficerRecord",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(length(variables('_vsf_TechOfficerRecord')), 0)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Insert Anomaly",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "dbo.usp_InsertDataSyncAnomalies",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"process_name": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"anamoly_desc": {
													"value": {
														"value": "@concat('No Tech Officer found for this email address -', activity('Get Tech Officer Details by Officer Id').output.value[0].Email)",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "insertOfficerDetailsWithSalesForceId",
										"description": "Company does exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[usp_InsertLookupTechOfficerData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_officer_Id": {
													"value": {
														"value": "@activity('usp_GetRating').output.value[0].OfficerId",
														"type": "Expression"
													},
													"type": "String"
												},
												"salesforce_user_Id": {
													"value": {
														"value": "@activity('Lookup Each Tech Officer by Email In Salesforce').output.value[0].Id",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "Set Variable _vsf_TechOfficerRecord",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Lookup Each Tech Officer by Email In Salesforce",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "_vsf_TechOfficerRecord",
								"value": {
									"value": "@activity('Lookup Each Tech Officer by Email In Salesforce').output.value",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If User In Salesforce Exist_copy1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(length(variables('_vsf_TechOfficerRecord')), 0)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Insert Anomaly_copy1",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "dbo.usp_InsertDataSyncAnomalies",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"process_name": {
													"value": {
														"value": "@pipeline().Pipeline",
														"type": "Expression"
													},
													"type": "String"
												},
												"anamoly_desc": {
													"value": {
														"value": "@concat('No Tech Officer found for this email address -', activity('Get Tech Officer Details by Officer Id').output.value[0].Email)",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "insertOfficerDetailsWithSalesForceId_copy1",
										"description": "Company does exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[usp_InsertLookupTechOfficerData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_officer_Id": {
													"value": {
														"value": "@activity('usp_GetRating').output.value[0].OfficerId",
														"type": "Expression"
													},
													"type": "String"
												},
												"salesforce_user_Id": {
													"value": {
														"value": "@activity('Lookup Each Tech Officer by Email In Salesforce').output.value[0].Id",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "usp_GetRating",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Update Batch",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[usp_GetRating]",
						"storedProcedureParameters": {
							"batchid": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.pbatch_id",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "db_members_rating",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Update Batch",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_LogBatchDetails]",
					"storedProcedureParameters": {
						"batch_id": {
							"value": {
								"value": "@pipeline().parameters.pbatch_id",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"process_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"stage": {
							"value": "In Progress",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"pbatch_id": {
				"type": "int",
				"defaultValue": 1
			}
		},
		"variables": {
			"_vratings": {
				"type": "Array"
			},
			"_vsf_buildingRecord": {
				"type": "Array"
			},
			"_vcurrentRatingItem": {
				"type": "Array"
			},
			"_vsf_AssessorRecord": {
				"type": "Array"
			},
			"_vsf_CompanyRecord": {
				"type": "Array"
			},
			"_vsf_TechOfficerRecord": {
				"type": "Array"
			},
			"_dummy": {
				"type": "String"
			}
		},
		"annotations": []
	}
}