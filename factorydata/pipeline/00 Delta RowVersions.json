{
	"name": "00 Delta RowVersions",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Batch Id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Select RowTimestamp, rh.RatingHeaderID  from \ntblRatingHeader rh\nWhere rh.PremiseTypeID = 55 and RatingStatusID in (157,158)\t\t\t\norder by RatingHeaderID",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBatchSize": 500,
						"preCopyScript": "TRUNCATE TABLE RatingHeaderRowVersionsStage",
						"maxConcurrentConnections": 2,
						"disableMetricsCollection": true
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "RowTimestamp",
									"physicalType": "timestamp"
								},
								"sink": {
									"name": "prod_timestamp",
									"type": "String",
									"physicalType": "nvarchar"
								}
							},
							{
								"source": {
									"name": "RatingHeaderID",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "RatingHeaderID",
									"type": "String",
									"physicalType": "nvarchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "db_source_rating_rowversions",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "db_target_rating_rowversions_stage",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "detectUnmatched",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_RatingHeaderRowVersionMergeData]"
				},
				"linkedServiceName": {
					"referenceName": "NABERSStaging",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "detectUnmatched",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT STRING_AGG(RatingHeaderID, ', ') as deltaRatingHeaderIds\nFROM RatingHeader_RowVersions\nwhere status in ('new', 'delta')",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "db_target_rating_rowversions_stage",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(string(activity('Lookup1').output), 'firstRow')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Insert Anomaly",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_InsertDataSyncAnomalies]",
								"storedProcedureParameters": {
									"batch_id": {
										"value": null,
										"type": "Int32"
									},
									"process_name": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"anomaly_desc": {
										"value": {
											"value": "No Ratings found.",
											"type": "Expression"
										},
										"type": "String"
									},
									"anomaly_type": {
										"value": "Warning",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "NABERSStaging",
								"type": "LinkedServiceReference"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "deltaRatingHeaderIds",
								"value": {
									"value": "@activity('Lookup1').output.firstrow.value",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "usp_StartBatch",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[usp_StartBatch]",
						"storedProcedureParameters": {
							"process_name": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "db_members_rating",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Batch Id",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "usp_StartBatch",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "vbatch_id",
					"value": {
						"value": "@string(activity('usp_StartBatch').output.firstRow.NewBatchId)",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"deltaRatingHeaderIds": {
				"type": "String"
			}
		},
		"annotations": []
	}
}