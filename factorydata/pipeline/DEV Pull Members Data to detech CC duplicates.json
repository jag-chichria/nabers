{
	"name": "DEV Pull Members Data to detech CC duplicates",
	"properties": {
		"activities": [
			{
				"name": "usp_GetCustomerContact",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[usp_GetCustomerContact]",
						"storedProcedureParameters": {
							"batchid": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.pbatch_id",
									"type": "Expression"
								}
							},
							"customerId": {
								"type": "Int32",
								"value": null
							}
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "db_members_rating",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "forEachCustomerContact",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "usp_GetCustomerContact",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('usp_GetCustomerContact').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Lookup Each Customer Contact by Email In Salesforce",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SalesforceSource",
									"query": {
										"value": "Select id from Contact where Email = '@{replace(item().Email, '''', '''''')}'",
										"type": "Expression"
									},
									"readBehavior": "query"
								},
								"dataset": {
									"referenceName": "sf_company",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "If Customer Contact In Salesforce Exist",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Lookup Each Customer Contact by Email In Salesforce",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@contains(string(activity('Lookup Each Customer Contact by Email In Salesforce').output), 'firstRow')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "insertCustomerContactDetailsFalse",
										"description": "Company does not exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Lookup Customer Contact Record Type",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[usp_InsertLookupCompanyData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_company_Id": {
													"value": {
														"value": "@item().CustomerContactId",
														"type": "Expression"
													},
													"type": "String"
												},
												"salesforce_company_Id": {
													"value": null,
													"type": "String"
												},
												"account_type": {
													"value": "customer contact",
													"type": "String"
												},
												"sf_record_type": {
													"value": {
														"value": "@activity('Lookup Customer Contact Record Type').output.firstRow.Id",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Lookup Customer Contact Record Type",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SalesforceSource",
												"query": {
													"value": "Select Id from RecordType where Name = 'Customer/Industry Contact'",
													"type": "Expression"
												},
												"readBehavior": "query"
											},
											"dataset": {
												"referenceName": "sf_Buildings",
												"type": "DatasetReference"
											},
											"firstRowOnly": true
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "insertCustomerContactDetailswithSalesforceId",
										"description": "Company does exist",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[usp_InsertLookupCompanyData]",
											"storedProcedureParameters": {
												"batch_id": {
													"value": {
														"value": "@pipeline().parameters.pbatch_id",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"member_company_Id": {
													"value": {
														"value": "@item().CustomerContactId",
														"type": "Expression"
													},
													"type": "String"
												},
												"salesforce_company_Id": {
													"value": {
														"value": "@activity('Lookup Each Customer Contact by Email In Salesforce').output.firstRow.Id",
														"type": "Expression"
													},
													"type": "String"
												},
												"account_type": {
													"value": "customer contact",
													"type": "String"
												},
												"sf_record_type": {
													"value": null,
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "NABERSStaging",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"pbatch_id": {
				"type": "int",
				"defaultValue": 1
			}
		},
		"variables": {
			"_vratings": {
				"type": "Array"
			},
			"_vsf_buildingRecord": {
				"type": "Array"
			},
			"_vcurrentRatingItem": {
				"type": "Array"
			},
			"_vsf_AssessorRecord": {
				"type": "Array"
			},
			"_vsf_CompanyRecord": {
				"type": "Array"
			},
			"_vsf_TechOfficerRecord": {
				"type": "Array"
			},
			"_dummy": {
				"type": "String"
			},
			"_salesforcePortalAccess": {
				"type": "String",
				"defaultValue": "NABERS Online"
			}
		},
		"annotations": []
	}
}